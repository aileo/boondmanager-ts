/**
 * BoondManager API
 * 1.0
 * DO NOT MODIFY - This file has been generated using oazapfts.
 * See https://www.npmjs.com/package/oazapfts
 */
import * as Oazapfts from "oazapfts/lib/runtime";
import * as QS from "oazapfts/lib/runtime/query";
export const defaults: Oazapfts.RequestOpts = {
    baseUrl: "https://ui.boondmanager.com/api/1.0",
};
const oazapfts = Oazapfts.runtime(defaults);
export const servers = {
    server1: ({ apiServer = "ui.boondmanager.com", apiVersion = "1.0" }: {
        apiServer: "ui.boondmanager.com";
        apiVersion: "1.0";
    }) => `https://${apiServer}/api/${apiVersion}`
};
/**
 * Search absences
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/absences.csv?keywords=TPS1*
 *
 */
export function getAbsences(body?: string, { keywords, resourceTypes, excludeResourceTypes, period, startDate, endDate, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    resourceTypes?: number[];
    excludeResourceTypes?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "absence";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    duration?: number;
                    title?: string;
                    workUnitType?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                };
                relationships?: {
                    absencesReport?: {
                        data: {
                            id: string;
                            "type": "absencesreport";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "absencesreport";
                attributes?: {
                    creationDate?: string;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    workUnitRate?: number;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    workUnitRate?: "notUsed" | number;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/absences${QS.query(QS.explode({
        keywords,
        resourceTypes,
        excludeResourceTypes,
        period,
        startDate,
        endDate,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
export function postAbsences(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/absences", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteAbsences(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/absences", {
        ...opts,
        method: "DELETE"
    });
}
export function putAbsences(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/absences", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Search request absences
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/absences-reports.csv?keywords=ABS1*
 *
 */
export function getAbsencesReports(startMonth: string, endMonth: string, body?: string, { keywords, resourceTypes, validationStates, encoding, extractType, exportToDownloadCenter, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    resourceTypes?: number[];
    validationStates?: ("waitingForValidation" | "validated" | "rejected")[];
    encoding?: string;
    extractType?: string;
    exportToDownloadCenter?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "absencesreport";
                attributes?: {
                    creationDate?: string;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                    absencesPeriods?: {
                        id: string;
                        startDate: string;
                        endDate: string;
                        duration: number;
                        title: string;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                    }[];
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/absences-reports${QS.query(QS.explode({
        keywords,
        resourceTypes,
        validationStates,
        startMonth,
        endMonth,
        encoding,
        extractType,
        exportToDownloadCenter,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a request of absences
 */
export function postAbsencesReports(body?: {
    data: {
        "type": "absencesreport";
        attributes?: {
            creationDate?: string;
            informationComments?: string;
            absencesPeriods?: ({
                startDate: string;
                endDate: string;
                duration: number;
                title: string;
                workUnitType: {
                    reference: number;
                };
            } | {
                id: string;
                startDate: string;
                endDate: string;
                duration: number;
                title: string;
                workUnitType: {
                    reference: number;
                };
            })[];
            absencesQuestions?: {
                question: string;
                answer: boolean;
            }[];
        };
        relationships: {
            resource: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "moreThanAbsenceAccountAcquired";
                    detail: string;
                    workUnitType: {
                        reference: number;
                        name: string;
                    };
                }[];
                expectedValidatorsAllowedForValidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForUnvalidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForReject?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "absencesreport";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                    informationComments?: string;
                    absencesPeriods?: {
                        id: string;
                        startDate: string;
                        endDate: string;
                        duration: number;
                        title: string;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                    }[];
                    absencesQuestions?: {
                        question: string;
                        answer: boolean;
                    }[];
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    validations?: {
                        data: {
                            id: string;
                            "type": "validation";
                        }[];
                    };
                    validationWorkflow?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    absencesAccounts?: {
                        data?: {
                            id: string;
                            "type": "absencesaccount";
                        }[];
                        [key: string]: any;
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                    workUnitTypesAllowedForAbsences?: {
                        reference: number;
                        name: string;
                    }[];
                    workUnitRate?: "notUsed" | number;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    workUnitRate?: number;
                    calendar?: string;
                    absencesLegals?: string;
                    workUnitTypes?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    }[];
                    absencesReportsQuestions?: {
                        question: string;
                    }[];
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "validation";
                attributes?: {
                    date?: string;
                    state?: "waitingForValidation" | "validated" | "rejected";
                    reason?: string;
                };
                relationships?: {
                    realValidator?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    expectedValidator?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "validation";
                attributes?: {
                    period?: "JanuaryToDecember" | "FebruaryToJanuary" | "MarchToFebruary" | "AprilToMarch" | "MayToApril" | "JuneToMay" | "JulyToJune" | "AugustToJuly" | "SeptemberToAugust" | "OctoberToSeptember" | "NovemberToOctober" | "DecemberToNovember";
                    year?: number;
                    amountAcquired?: number;
                    amountAcquiredUsed?: number;
                    amountBeingAcquired?: number;
                    amountAcquiredAsked?: number;
                    amountBeingAcquiredAsked?: number;
                    amountBeingAcquiredUsed?: number;
                    deltaAcquiredAsked?: number;
                    deltaAcquiredUsed?: number;
                    deltaBeingAcquiredAsked?: number;
                    deltaBeingAcquiredUsed?: number;
                    useBeingAcquired?: "inactive" | "AllowTakenAbsencesOnBeingAcquired" | "ForbidTakenAbsencesOnBeingAcquired";
                    isQuotaExists?: boolean;
                    automaticDescription?: {
                        date: string;
                        previousAmountBeingAcquired: number | null;
                        newAmountBeingAcquired: number;
                        previousAmountAcquired: number | null;
                        newAmountAcquired: number;
                    }[];
                    workUnitType?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/absences-reports", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteAbsencesReports(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/absences-reports", {
        ...opts,
        method: "DELETE"
    });
}
export function putAbsencesReports(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/absences-reports", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty request of absences default basic data
 */
export function getAbsencesReportsDefault(resource: number, body?: string, { agency }: {
    agency?: number;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "moreThanAbsenceAccountAcquired";
                    detail: string;
                    workUnitType: {
                        reference: number;
                        name: string;
                    };
                }[];
                expectedValidatorsAllowedForValidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForUnvalidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForReject?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "absencesreport";
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    validationWorkflow?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    absencesAccounts?: {
                        data?: {
                            id: string;
                            "type": "absencesaccount";
                        }[];
                        [key: string]: any;
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                    workUnitTypesAllowedForAbsences?: {
                        reference: number;
                        name: string;
                    }[];
                    workUnitRate?: "notUsed" | number;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    workUnitRate?: number;
                    calendar?: string;
                    workUnitTypes?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    }[];
                    absencesReportsQuestions?: {
                        question: string;
                    }[];
                };
            } | {
                id: string;
                "type": "validation";
                attributes?: {
                    period?: "JanuaryToDecember" | "FebruaryToJanuary" | "MarchToFebruary" | "AprilToMarch" | "MayToApril" | "JuneToMay" | "JulyToJune" | "AugustToJuly" | "SeptemberToAugust" | "OctoberToSeptember" | "NovemberToOctober" | "DecemberToNovember";
                    year?: number;
                    amountAcquired?: number;
                    amountAcquiredUsed?: number;
                    amountBeingAcquired?: number;
                    amountAcquiredAsked?: number;
                    amountBeingAcquiredAsked?: number;
                    amountBeingAcquiredUsed?: number;
                    deltaAcquiredAsked?: number;
                    deltaAcquiredUsed?: number;
                    deltaBeingAcquiredAsked?: number;
                    deltaBeingAcquiredUsed?: number;
                    useBeingAcquired?: "inactive" | "AllowTakenAbsencesOnBeingAcquired" | "ForbidTakenAbsencesOnBeingAcquired";
                    isQuotaExists?: boolean;
                    automaticDescription?: {
                        date: string;
                        previousAmountBeingAcquired: number | null;
                        newAmountBeingAcquired: number;
                        previousAmountAcquired: number | null;
                        newAmountAcquired: number;
                    }[];
                    workUnitType?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/absences-reports/default${QS.query(QS.explode({
        resource,
        agency
    }))}`, {
        ...opts,
        body
    });
}
export function putAbsencesReportsDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "moreThanAbsenceAccountAcquired";
                    detail: string;
                    workUnitType: {
                        reference: number;
                        name: string;
                    };
                }[];
                expectedValidatorsAllowedForValidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForUnvalidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForReject?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "absencesreport";
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    validationWorkflow?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    absencesAccounts?: {
                        data?: {
                            id: string;
                            "type": "absencesaccount";
                        }[];
                        [key: string]: any;
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                    workUnitTypesAllowedForAbsences?: {
                        reference: number;
                        name: string;
                    }[];
                    workUnitRate?: "notUsed" | number;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    workUnitRate?: number;
                    calendar?: string;
                    workUnitTypes?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    }[];
                    absencesReportsQuestions?: {
                        question: string;
                    }[];
                };
            } | {
                id: string;
                "type": "validation";
                attributes?: {
                    period?: "JanuaryToDecember" | "FebruaryToJanuary" | "MarchToFebruary" | "AprilToMarch" | "MayToApril" | "JuneToMay" | "JulyToJune" | "AugustToJuly" | "SeptemberToAugust" | "OctoberToSeptember" | "NovemberToOctober" | "DecemberToNovember";
                    year?: number;
                    amountAcquired?: number;
                    amountAcquiredUsed?: number;
                    amountBeingAcquired?: number;
                    amountAcquiredAsked?: number;
                    amountBeingAcquiredAsked?: number;
                    amountBeingAcquiredUsed?: number;
                    deltaAcquiredAsked?: number;
                    deltaAcquiredUsed?: number;
                    deltaBeingAcquiredAsked?: number;
                    deltaBeingAcquiredUsed?: number;
                    useBeingAcquired?: "inactive" | "AllowTakenAbsencesOnBeingAcquired" | "ForbidTakenAbsencesOnBeingAcquired";
                    isQuotaExists?: boolean;
                    automaticDescription?: {
                        date: string;
                        previousAmountBeingAcquired: number | null;
                        newAmountBeingAcquired: number;
                        previousAmountAcquired: number | null;
                        newAmountAcquired: number;
                    }[];
                    workUnitType?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/absences-reports/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteAbsencesReportsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/absences-reports/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postAbsencesReportsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/absences-reports/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get request of absences basic data
 */
export function getAbsencesReportsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "moreThanAbsenceAccountAcquired";
                    detail: string;
                    workUnitType: {
                        reference: number;
                        name: string;
                    };
                }[];
                expectedValidatorsAllowedForValidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForUnvalidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForReject?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "absencesreport";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                    informationComments?: string;
                    absencesPeriods?: {
                        id: string;
                        startDate: string;
                        endDate: string;
                        duration: number;
                        title: string;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                    }[];
                    absencesQuestions?: {
                        question: string;
                        answer: boolean;
                    }[];
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    validations?: {
                        data: {
                            id: string;
                            "type": "validation";
                        }[];
                    };
                    validationWorkflow?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    absencesAccounts?: {
                        data?: {
                            id: string;
                            "type": "absencesaccount";
                        }[];
                        [key: string]: any;
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                    workUnitTypesAllowedForAbsences?: {
                        reference: number;
                        name: string;
                    }[];
                    workUnitRate?: "notUsed" | number;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    workUnitRate?: number;
                    calendar?: string;
                    absencesLegals?: string;
                    workUnitTypes?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    }[];
                    absencesReportsQuestions?: {
                        question: string;
                    }[];
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "validation";
                attributes?: {
                    date?: string;
                    state?: "waitingForValidation" | "validated" | "rejected";
                    reason?: string;
                };
                relationships?: {
                    realValidator?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    expectedValidator?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "validation";
                attributes?: {
                    period?: "JanuaryToDecember" | "FebruaryToJanuary" | "MarchToFebruary" | "AprilToMarch" | "MayToApril" | "JuneToMay" | "JulyToJune" | "AugustToJuly" | "SeptemberToAugust" | "OctoberToSeptember" | "NovemberToOctober" | "DecemberToNovember";
                    year?: number;
                    amountAcquired?: number;
                    amountAcquiredUsed?: number;
                    amountBeingAcquired?: number;
                    amountAcquiredAsked?: number;
                    amountBeingAcquiredAsked?: number;
                    amountBeingAcquiredUsed?: number;
                    deltaAcquiredAsked?: number;
                    deltaAcquiredUsed?: number;
                    deltaBeingAcquiredAsked?: number;
                    deltaBeingAcquiredUsed?: number;
                    useBeingAcquired?: "inactive" | "AllowTakenAbsencesOnBeingAcquired" | "ForbidTakenAbsencesOnBeingAcquired";
                    isQuotaExists?: boolean;
                    automaticDescription?: {
                        date: string;
                        previousAmountBeingAcquired: number | null;
                        newAmountBeingAcquired: number;
                        previousAmountAcquired: number | null;
                        newAmountAcquired: number;
                    }[];
                    workUnitType?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/absences-reports/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the request of absences
 */
export function deleteAbsencesReportsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/absences-reports/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to a request of absences
 */
export function putAbsencesReportsById(body?: {
    data: {
        id: string;
        "type": "absencesreport";
        attributes?: {
            informationComments?: string;
            absencesPeriods?: ({
                startDate: string;
                endDate: string;
                duration: number;
                title: string;
                workUnitType: {
                    reference: number;
                };
            } | {
                id: string;
                startDate: string;
                endDate: string;
                duration: number;
                title: string;
                workUnitType: {
                    reference: number;
                };
            })[];
            absencesQuestions?: {
                question: string;
                answer: boolean;
            }[];
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "moreThanAbsenceAccountAcquired";
                    detail: string;
                    workUnitType: {
                        reference: number;
                        name: string;
                    };
                }[];
                expectedValidatorsAllowedForValidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForUnvalidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForReject?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "absencesreport";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                    informationComments?: string;
                    absencesPeriods?: {
                        id: string;
                        startDate: string;
                        endDate: string;
                        duration: number;
                        title: string;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                    }[];
                    absencesQuestions?: {
                        question: string;
                        answer: boolean;
                    }[];
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    validations?: {
                        data: {
                            id: string;
                            "type": "validation";
                        }[];
                    };
                    validationWorkflow?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    absencesAccounts?: {
                        data?: {
                            id: string;
                            "type": "absencesaccount";
                        }[];
                        [key: string]: any;
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                    workUnitTypesAllowedForAbsences?: {
                        reference: number;
                        name: string;
                    }[];
                    workUnitRate?: "notUsed" | number;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    workUnitRate?: number;
                    calendar?: string;
                    absencesLegals?: string;
                    workUnitTypes?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    }[];
                    absencesReportsQuestions?: {
                        question: string;
                    }[];
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "validation";
                attributes?: {
                    date?: string;
                    state?: "waitingForValidation" | "validated" | "rejected";
                    reason?: string;
                };
                relationships?: {
                    realValidator?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    expectedValidator?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "validation";
                attributes?: {
                    period?: "JanuaryToDecember" | "FebruaryToJanuary" | "MarchToFebruary" | "AprilToMarch" | "MayToApril" | "JuneToMay" | "JulyToJune" | "AugustToJuly" | "SeptemberToAugust" | "OctoberToSeptember" | "NovemberToOctober" | "DecemberToNovember";
                    year?: number;
                    amountAcquired?: number;
                    amountAcquiredUsed?: number;
                    amountBeingAcquired?: number;
                    amountAcquiredAsked?: number;
                    amountBeingAcquiredAsked?: number;
                    amountBeingAcquiredUsed?: number;
                    deltaAcquiredAsked?: number;
                    deltaAcquiredUsed?: number;
                    deltaBeingAcquiredAsked?: number;
                    deltaBeingAcquiredUsed?: number;
                    useBeingAcquired?: "inactive" | "AllowTakenAbsencesOnBeingAcquired" | "ForbidTakenAbsencesOnBeingAcquired";
                    isQuotaExists?: boolean;
                    automaticDescription?: {
                        date: string;
                        previousAmountBeingAcquired: number | null;
                        newAmountBeingAcquired: number;
                        previousAmountAcquired: number | null;
                        newAmountAcquired: number;
                    }[];
                    workUnitType?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/absences-reports/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postAbsencesReportsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/absences-reports/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search accounts
 */
export function getAccounts(body?: string, { keywords, userSubscriptions, resourceTypes, roles, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    userSubscriptions?: string[];
    resourceTypes?: number[];
    roles?: number[];
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "account";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                    level?: "manager" | "resource" | "administrator";
                    login?: string;
                    subscription?: "active" | "inactive";
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    role?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "role";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "role";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/accounts${QS.query(QS.explode({
        keywords,
        userSubscriptions,
        resourceTypes,
        roles,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create an account
 */
export function postAccounts(body?: {
    data: {
        "type": "account";
        attributes: {
            civility?: number;
            firstName: string;
            lastName: string;
            subscription?: "active" | "inactive";
            email1: string;
            typeOf?: number;
            login: string;
            password: string;
            dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
            logInOnlyFromThirdParty?: boolean;
            warningForNewDevice?: boolean;
            manageAllowedDevices?: boolean;
            modules?: {
                resources?: boolean;
                subscription?: boolean;
                projects?: boolean;
                opportunities?: boolean;
                candidates?: boolean;
                crm?: boolean;
                activityExpenses?: boolean;
                billing?: boolean;
                products?: boolean;
                purchases?: boolean;
                reporting?: boolean;
                customers?: boolean;
            };
            rights?: {
                main: {
                    shareSavedSearches?: "disabled" | "share" | "edit";
                    showGroupe: boolean;
                    showBuPoles: boolean;
                    showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                    showAllAgencies: "none" | "assignment";
                    showAllPoles: "none" | "assignment";
                    administrator: boolean;
                };
                resources?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                    administrative: "none" | "read" | "readAndWrite";
                };
                opportunities?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    maskData: boolean;
                    maskOnlyContacts: boolean;
                };
                projects?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: any;
                    administrative: any;
                };
                candidates?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                };
                crm?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    editCreationDate: boolean;
                    showAllCompanies: boolean;
                    createCompanies: boolean;
                    createContacts: boolean;
                };
                activityExpenses?: {
                    writeAll: "extended" | "absolute";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                billing?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    editReference?: boolean;
                    editDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    readDocuments: boolean;
                    unlockInvoices: boolean;
                };
                products?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                purchases?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                reporting?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    extraction: boolean;
                    reporting: boolean;
                    distributionCustomers: boolean;
                    projects: boolean;
                    resources: boolean;
                    productionPlans: boolean;
                };
                flags?: {
                    showAll: "personal" | "all";
                };
                actions?: {
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                customers?: {
                    creation: boolean;
                    extraction: boolean;
                    edition: boolean;
                    deletion: boolean;
                    connection: boolean;
                };
            };
        };
        relationships: {
            apps?: {
                data: {
                    id: string;
                    "type": "app";
                }[];
            };
            mainManager?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
            otherAgencies?: {
                data: {
                    id: string;
                    "type": "agency";
                }[];
            };
            otherPoles?: {
                data: {
                    id: string;
                    "type": "pole";
                }[];
            };
            role?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "role";
                };
            };
            advancedAppCalendar?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppMail?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppViewer?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppEmailing?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            resource?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                managers?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                roles?: {
                    id: string;
                    name?: string;
                    isSecondaryAgenciesAllowed: boolean;
                    isSecondaryPolesAllowed: boolean;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "account";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    subscription?: "active" | "inactive";
                    civility?: number;
                    email1?: string;
                    typeOf?: number;
                    login?: string;
                    dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
                    logInOnlyFromThirdParty?: boolean;
                    warningForNewDevice?: boolean;
                    manageAllowedDevices?: boolean;
                    modules?: {
                        resources?: boolean;
                        subscription?: boolean;
                        projects?: boolean;
                        opportunities?: boolean;
                        candidates?: boolean;
                        crm?: boolean;
                        activityExpenses?: boolean;
                        billing?: boolean;
                        products?: boolean;
                        purchases?: boolean;
                        reporting?: boolean;
                        customers?: boolean;
                    };
                    rights?: {
                        main: {
                            shareSavedSearches?: "disabled" | "share" | "edit";
                            showGroupe: boolean;
                            showBuPoles: boolean;
                            showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                            showAllAgencies: "none" | "assignment";
                            showAllPoles: "none" | "assignment";
                            administrator: boolean;
                        };
                        resources?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                            administrative: "none" | "read" | "readAndWrite";
                        };
                        opportunities?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            maskData: boolean;
                            maskOnlyContacts: boolean;
                        };
                        projects?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: any;
                            administrative: any;
                        };
                        candidates?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                        };
                        crm?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            editCreationDate: boolean;
                            showAllCompanies: boolean;
                            createCompanies: boolean;
                            createContacts: boolean;
                        };
                        activityExpenses?: {
                            writeAll: "extended" | "absolute";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        billing?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            editReference?: boolean;
                            editDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            readDocuments: boolean;
                            unlockInvoices: boolean;
                        };
                        products?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        purchases?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        reporting?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            extraction: boolean;
                            reporting: boolean;
                            distributionCustomers: boolean;
                            projects: boolean;
                            resources: boolean;
                            productionPlans: boolean;
                        };
                        flags?: {
                            showAll: "personal" | "all";
                        };
                        actions?: {
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        customers?: {
                            creation: boolean;
                            extraction: boolean;
                            edition: boolean;
                            deletion: boolean;
                            connection: boolean;
                        };
                    };
                };
                relationships?: {
                    apps?: {
                        data: {
                            id: string;
                            "type": "app";
                        }[];
                    };
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    otherAgencies?: {
                        data: {
                            id: string;
                            "type": "agency";
                        }[];
                    };
                    otherPoles?: {
                        data: {
                            id: string;
                            "type": "pole";
                        }[];
                    };
                    role?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "role";
                        };
                    };
                    devices?: {
                        data: {
                            id: string;
                            "type": "device";
                        }[];
                    };
                    advancedAppCalendar?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppMail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppViewer?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppEmailing?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    description?: string;
                    category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                    title?: string;
                    visibility?: string;
                    logo?: string;
                };
            } | {
                id: string;
                "type": "device";
                attributes?: {
                    isManaged?: boolean;
                    isSessionExists?: boolean;
                    name?: string;
                    browser?: string;
                    authorizationDate?: string;
                    lastLogInDate?: string;
                    internetProtocol?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "role";
                attributes?: {
                    name?: string;
                    isSecondaryAgenciesAllowed?: boolean;
                    isSecondaryPolesAllowed?: boolean;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/accounts", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteAccounts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/accounts", {
        ...opts,
        method: "DELETE"
    });
}
export function putAccounts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/accounts", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty account's default basic data
 */
export function getAccountsDefault(body?: string, { resource }: {
    resource?: number;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "account";
                attributes?: {
                    civility?: number;
                    subscription?: "active" | "inactive";
                    login?: string;
                    modules?: {
                        resources?: boolean;
                        subscription?: boolean;
                        projects?: boolean;
                        opportunities?: boolean;
                        candidates?: boolean;
                        crm?: boolean;
                        activityExpenses?: boolean;
                        billing?: boolean;
                        products?: boolean;
                        purchases?: boolean;
                        reporting?: boolean;
                        customers?: boolean;
                    };
                    rights?: {
                        main: {
                            shareSavedSearches?: "disabled" | "share" | "edit";
                            showGroupe: boolean;
                            showBuPoles: boolean;
                            showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                            showAllAgencies: "none" | "assignment";
                            showAllPoles: "none" | "assignment";
                            administrator: boolean;
                        };
                        resources?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                            administrative: "none" | "read" | "readAndWrite";
                        };
                        opportunities?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            maskData: boolean;
                            maskOnlyContacts: boolean;
                        };
                        projects?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: any;
                            administrative: any;
                        };
                        candidates?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                        };
                        crm?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            editCreationDate: boolean;
                            showAllCompanies: boolean;
                            createCompanies: boolean;
                            createContacts: boolean;
                        };
                        activityExpenses?: {
                            writeAll: "extended" | "absolute";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        billing?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            editReference?: boolean;
                            editDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            readDocuments: boolean;
                            unlockInvoices: boolean;
                        };
                        products?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        purchases?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        reporting?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            extraction: boolean;
                            reporting: boolean;
                            distributionCustomers: boolean;
                            projects: boolean;
                            resources: boolean;
                            productionPlans: boolean;
                        };
                        flags?: {
                            showAll: "personal" | "all";
                        };
                        actions?: {
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        customers?: {
                            creation: boolean;
                            extraction: boolean;
                            edition: boolean;
                            deletion: boolean;
                            connection: boolean;
                        };
                    };
                    typeOf?: number;
                    firstName?: string;
                    lastName?: string;
                    email1?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/accounts/default${QS.query(QS.explode({
        resource
    }))}`, {
        ...opts,
        body
    });
}
export function putAccountsDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "account";
                attributes?: {
                    civility?: number;
                    subscription?: "active" | "inactive";
                    login?: string;
                    modules?: {
                        resources?: boolean;
                        subscription?: boolean;
                        projects?: boolean;
                        opportunities?: boolean;
                        candidates?: boolean;
                        crm?: boolean;
                        activityExpenses?: boolean;
                        billing?: boolean;
                        products?: boolean;
                        purchases?: boolean;
                        reporting?: boolean;
                        customers?: boolean;
                    };
                    rights?: {
                        main: {
                            shareSavedSearches?: "disabled" | "share" | "edit";
                            showGroupe: boolean;
                            showBuPoles: boolean;
                            showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                            showAllAgencies: "none" | "assignment";
                            showAllPoles: "none" | "assignment";
                            administrator: boolean;
                        };
                        resources?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                            administrative: "none" | "read" | "readAndWrite";
                        };
                        opportunities?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            maskData: boolean;
                            maskOnlyContacts: boolean;
                        };
                        projects?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: any;
                            administrative: any;
                        };
                        candidates?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                        };
                        crm?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            editCreationDate: boolean;
                            showAllCompanies: boolean;
                            createCompanies: boolean;
                            createContacts: boolean;
                        };
                        activityExpenses?: {
                            writeAll: "extended" | "absolute";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        billing?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            editReference?: boolean;
                            editDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            readDocuments: boolean;
                            unlockInvoices: boolean;
                        };
                        products?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        purchases?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        reporting?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            extraction: boolean;
                            reporting: boolean;
                            distributionCustomers: boolean;
                            projects: boolean;
                            resources: boolean;
                            productionPlans: boolean;
                        };
                        flags?: {
                            showAll: "personal" | "all";
                        };
                        actions?: {
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        customers?: {
                            creation: boolean;
                            extraction: boolean;
                            edition: boolean;
                            deletion: boolean;
                            connection: boolean;
                        };
                    };
                    typeOf?: number;
                    firstName?: string;
                    lastName?: string;
                    email1?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/accounts/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteAccountsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/accounts/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postAccountsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/accounts/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get account's basic data
 */
export function getAccountsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                managers?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                roles?: {
                    id: string;
                    name?: string;
                    isSecondaryAgenciesAllowed: boolean;
                    isSecondaryPolesAllowed: boolean;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "account";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    subscription?: "active" | "inactive";
                    civility?: number;
                    email1?: string;
                    typeOf?: number;
                    login?: string;
                    dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
                    logInOnlyFromThirdParty?: boolean;
                    warningForNewDevice?: boolean;
                    manageAllowedDevices?: boolean;
                    modules?: {
                        resources?: boolean;
                        subscription?: boolean;
                        projects?: boolean;
                        opportunities?: boolean;
                        candidates?: boolean;
                        crm?: boolean;
                        activityExpenses?: boolean;
                        billing?: boolean;
                        products?: boolean;
                        purchases?: boolean;
                        reporting?: boolean;
                        customers?: boolean;
                    };
                    rights?: {
                        main: {
                            shareSavedSearches?: "disabled" | "share" | "edit";
                            showGroupe: boolean;
                            showBuPoles: boolean;
                            showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                            showAllAgencies: "none" | "assignment";
                            showAllPoles: "none" | "assignment";
                            administrator: boolean;
                        };
                        resources?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                            administrative: "none" | "read" | "readAndWrite";
                        };
                        opportunities?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            maskData: boolean;
                            maskOnlyContacts: boolean;
                        };
                        projects?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: any;
                            administrative: any;
                        };
                        candidates?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                        };
                        crm?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            editCreationDate: boolean;
                            showAllCompanies: boolean;
                            createCompanies: boolean;
                            createContacts: boolean;
                        };
                        activityExpenses?: {
                            writeAll: "extended" | "absolute";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        billing?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            editReference?: boolean;
                            editDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            readDocuments: boolean;
                            unlockInvoices: boolean;
                        };
                        products?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        purchases?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        reporting?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            extraction: boolean;
                            reporting: boolean;
                            distributionCustomers: boolean;
                            projects: boolean;
                            resources: boolean;
                            productionPlans: boolean;
                        };
                        flags?: {
                            showAll: "personal" | "all";
                        };
                        actions?: {
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        customers?: {
                            creation: boolean;
                            extraction: boolean;
                            edition: boolean;
                            deletion: boolean;
                            connection: boolean;
                        };
                    };
                };
                relationships?: {
                    apps?: {
                        data: {
                            id: string;
                            "type": "app";
                        }[];
                    };
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    otherAgencies?: {
                        data: {
                            id: string;
                            "type": "agency";
                        }[];
                    };
                    otherPoles?: {
                        data: {
                            id: string;
                            "type": "pole";
                        }[];
                    };
                    role?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "role";
                        };
                    };
                    devices?: {
                        data: {
                            id: string;
                            "type": "device";
                        }[];
                    };
                    advancedAppCalendar?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppMail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppViewer?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppEmailing?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    description?: string;
                    category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                    title?: string;
                    visibility?: string;
                    logo?: string;
                };
            } | {
                id: string;
                "type": "device";
                attributes?: {
                    isManaged?: boolean;
                    isSessionExists?: boolean;
                    name?: string;
                    browser?: string;
                    authorizationDate?: string;
                    lastLogInDate?: string;
                    internetProtocol?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "role";
                attributes?: {
                    name?: string;
                    isSecondaryAgenciesAllowed?: boolean;
                    isSecondaryPolesAllowed?: boolean;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/accounts/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the account
 */
export function deleteAccountsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/accounts/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to an account
 */
export function putAccountsById(body?: {
    data: {
        id: string;
        "type": "account";
        attributes?: {
            civility?: number;
            firstName?: string;
            lastName?: string;
            subscription?: "active" | "inactive";
            email1?: string;
            typeOf?: number;
            login?: string;
            password?: string;
            dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
            logInOnlyFromThirdParty?: boolean;
            warningForNewDevice?: boolean;
            manageAllowedDevices?: boolean;
            modules?: {
                resources?: boolean;
                subscription?: boolean;
                projects?: boolean;
                opportunities?: boolean;
                candidates?: boolean;
                crm?: boolean;
                activityExpenses?: boolean;
                billing?: boolean;
                products?: boolean;
                purchases?: boolean;
                reporting?: boolean;
                customers?: boolean;
            };
            rights?: {
                main: {
                    shareSavedSearches?: "disabled" | "share" | "edit";
                    showGroupe: boolean;
                    showBuPoles: boolean;
                    showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                    showAllAgencies: "none" | "assignment";
                    showAllPoles: "none" | "assignment";
                    administrator: boolean;
                };
                resources?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                    administrative: "none" | "read" | "readAndWrite";
                };
                opportunities?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    maskData: boolean;
                    maskOnlyContacts: boolean;
                };
                projects?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: any;
                    administrative: any;
                };
                candidates?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                };
                crm?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    editCreationDate: boolean;
                    showAllCompanies: boolean;
                    createCompanies: boolean;
                    createContacts: boolean;
                };
                activityExpenses?: {
                    writeAll: "extended" | "absolute";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                billing?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    editReference?: boolean;
                    editDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    readDocuments: boolean;
                    unlockInvoices: boolean;
                };
                products?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                purchases?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                reporting?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    extraction: boolean;
                    reporting: boolean;
                    distributionCustomers: boolean;
                    projects: boolean;
                    resources: boolean;
                    productionPlans: boolean;
                };
                flags?: {
                    showAll: "personal" | "all";
                };
                actions?: {
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                customers?: {
                    creation: boolean;
                    extraction: boolean;
                    edition: boolean;
                    deletion: boolean;
                    connection: boolean;
                };
            };
        };
        relationships?: {
            apps?: {
                data: {
                    id: string;
                    "type": "app";
                }[];
            };
            mainManager?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
            otherAgencies?: {
                data: {
                    id: string;
                    "type": "agency";
                }[];
            };
            otherPoles?: {
                data: {
                    id: string;
                    "type": "pole";
                }[];
            };
            role?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "role";
                };
            };
            advancedAppCalendar?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppMail?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppViewer?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppEmailing?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                managers?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                roles?: {
                    id: string;
                    name?: string;
                    isSecondaryAgenciesAllowed: boolean;
                    isSecondaryPolesAllowed: boolean;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "account";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    subscription?: "active" | "inactive";
                    civility?: number;
                    email1?: string;
                    typeOf?: number;
                    login?: string;
                    dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
                    logInOnlyFromThirdParty?: boolean;
                    warningForNewDevice?: boolean;
                    manageAllowedDevices?: boolean;
                    modules?: {
                        resources?: boolean;
                        subscription?: boolean;
                        projects?: boolean;
                        opportunities?: boolean;
                        candidates?: boolean;
                        crm?: boolean;
                        activityExpenses?: boolean;
                        billing?: boolean;
                        products?: boolean;
                        purchases?: boolean;
                        reporting?: boolean;
                        customers?: boolean;
                    };
                    rights?: {
                        main: {
                            shareSavedSearches?: "disabled" | "share" | "edit";
                            showGroupe: boolean;
                            showBuPoles: boolean;
                            showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                            showAllAgencies: "none" | "assignment";
                            showAllPoles: "none" | "assignment";
                            administrator: boolean;
                        };
                        resources?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                            administrative: "none" | "read" | "readAndWrite";
                        };
                        opportunities?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            maskData: boolean;
                            maskOnlyContacts: boolean;
                        };
                        projects?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: any;
                            administrative: any;
                        };
                        candidates?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                        };
                        crm?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            editCreationDate: boolean;
                            showAllCompanies: boolean;
                            createCompanies: boolean;
                            createContacts: boolean;
                        };
                        activityExpenses?: {
                            writeAll: "extended" | "absolute";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        billing?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            editReference?: boolean;
                            editDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            readDocuments: boolean;
                            unlockInvoices: boolean;
                        };
                        products?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        purchases?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        reporting?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            extraction: boolean;
                            reporting: boolean;
                            distributionCustomers: boolean;
                            projects: boolean;
                            resources: boolean;
                            productionPlans: boolean;
                        };
                        flags?: {
                            showAll: "personal" | "all";
                        };
                        actions?: {
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        customers?: {
                            creation: boolean;
                            extraction: boolean;
                            edition: boolean;
                            deletion: boolean;
                            connection: boolean;
                        };
                    };
                };
                relationships?: {
                    apps?: {
                        data: {
                            id: string;
                            "type": "app";
                        }[];
                    };
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    otherAgencies?: {
                        data: {
                            id: string;
                            "type": "agency";
                        }[];
                    };
                    otherPoles?: {
                        data: {
                            id: string;
                            "type": "pole";
                        }[];
                    };
                    role?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "role";
                        };
                    };
                    devices?: {
                        data: {
                            id: string;
                            "type": "device";
                        }[];
                    };
                    advancedAppCalendar?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppMail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppViewer?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppEmailing?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    description?: string;
                    category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                    title?: string;
                    visibility?: string;
                    logo?: string;
                };
            } | {
                id: string;
                "type": "device";
                attributes?: {
                    isManaged?: boolean;
                    isSessionExists?: boolean;
                    name?: string;
                    browser?: string;
                    authorizationDate?: string;
                    lastLogInDate?: string;
                    internetProtocol?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "role";
                attributes?: {
                    name?: string;
                    isSecondaryAgenciesAllowed?: boolean;
                    isSecondaryPolesAllowed?: boolean;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/accounts/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postAccountsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/accounts/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search actions entity (Resource, Candidate, Project, Opportunity, Order, Invoice, Contact)
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/actions.csv?keywords=COMP100*
 *
 */
export function getActions(body?: string, { keywords, actionTypes, states, origins, period, startDate, endDate, flags, onlyVisible, returnRelatedActions, keywordsType, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    actionTypes?: number[];
    states?: string[];
    origins?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    onlyVisible?: boolean;
    returnRelatedActions?: boolean;
    keywordsType?: string;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "action";
                attributes?: {
                    startDate?: string;
                    creationDate?: string;
                    typeOf?: number;
                    text?: string;
                    numberOfFiles?: number;
                    canReadAction?: boolean;
                    canWriteAction?: boolean;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    file?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "document";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    relatedActions?: {
                        data: {
                            id: string;
                            "type": "action";
                        }[];
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    email1?: string;
                    phone1?: string;
                    phone2?: string;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    email1?: string;
                    phone1?: string;
                    phone2?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    email1?: string;
                    phone1?: string;
                    phone2?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    phone1?: string;
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    "number"?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "invoice";
                attributes?: {
                    reference?: string;
                };
                relationships?: {
                    order?: {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    };
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    typeOf?: number;
                    canReadAction?: boolean;
                    relationType?: "parent" | "child";
                };
                relationships?: {
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/actions${QS.query(QS.explode({
        keywords,
        actionTypes,
        states,
        origins,
        period,
        startDate,
        endDate,
        flags,
        onlyVisible,
        returnRelatedActions,
        keywordsType,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create an action
 */
export function postActions(body?: {
    data: {
        "type": "action";
        attributes: {
            startDate?: string;
            endDate?: string;
            startTimezone?: string;
            endTimezone?: string;
            typeOf: number;
            title?: string;
            description?: string;
            text?: string;
            location?: string;
            guests?: string[];
            synchronizeWithAdvancedAppCalendar?: boolean;
        };
        relationships: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            company?: {
                data: {
                    id: string;
                    "type": "company";
                };
            };
            dependsOn: {
                data: {
                    id: string;
                    "type": "resource";
                };
            } | {
                data: {
                    id: string;
                    "type": "candidate";
                };
            } | {
                data: {
                    id: string;
                    "type": "opportunity";
                };
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            } | {
                data: {
                    id: string;
                    "type": "order";
                };
            } | {
                data: {
                    id: string;
                    "type": "invoice";
                };
            } | {
                data: {
                    id: string;
                    "type": "contact";
                };
            };
        };
    };
}, { positioning, delivery }: {
    positioning?: number;
    delivery?: number;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "appOauthRedirection" | "appError";
                    detail: string;
                    oauth_redirection?: string;
                    app_error?: string;
                    app?: {
                        id: string;
                        name: string;
                        code: string;
                    };
                }[];
                timezones?: string[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "action";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    startDate?: string;
                    endDate?: string;
                    startTimezone?: string;
                    endTimezone?: string;
                    typeOf?: number;
                    title?: string;
                    description?: string;
                    text?: string;
                    location?: string;
                    guests?: string[];
                    synchronizeWithAdvancedAppCalendar?: boolean;
                    relationType?: "parent" | "child";
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    relatedActions?: {
                        data: {
                            id: string;
                            "type": "action";
                        }[];
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    title?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    typeOf?: number;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    "number"?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "invoice";
                attributes?: {
                    reference?: string;
                    isCreditNote?: boolean;
                };
                relationships?: {
                    order?: {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    typeOf?: number;
                    canReadAction?: boolean;
                    relationType?: "parent" | "child";
                };
                relationships?: {
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "positioning";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    };
                };
            } | {
                id: string;
                "type": "delivery";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/actions${QS.query(QS.explode({
        positioning,
        delivery
    }))}`, oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteActions(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/actions", {
        ...opts,
        method: "DELETE"
    });
}
export function putActions(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/actions", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty action's default basic data
 */
export function getActionsDefault(body?: string, { resource, candidate, opportunity, project, order, invoice, contact, company, positioning, delivery }: {
    resource?: number;
    candidate?: number;
    opportunity?: number;
    project?: number;
    order?: number;
    invoice?: number;
    contact?: number;
    company?: number;
    positioning?: number;
    delivery?: number;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                timezones?: string[];
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "action";
                attributes?: {
                    startDate?: string;
                    typeOf?: number;
                    text?: string;
                    synchronizeWithAdvancedAppCalendar?: boolean;
                    title?: string;
                    description?: string;
                    endDate?: string;
                    location?: string;
                    guests?: string[];
                    startTimezone?: string;
                    endTimezone?: string;
                };
                relationships: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    positioning?: {
                        data: {
                            id: string;
                            "type": "positioning";
                        };
                    };
                    delivery?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    dependsOn: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    typeOf?: number;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    phone1?: string;
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    "number"?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "invoice";
                attributes?: {
                    reference?: string;
                    isCreditNote?: boolean;
                };
                relationships?: {
                    order?: {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "positioning";
                attributes?: {
                    canShowDependsOn?: boolean;
                    canShowOpportunity?: boolean;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    };
                    opportunity?: {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                };
            } | {
                id: string;
                "type": "delivery";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/actions/default${QS.query(QS.explode({
        resource,
        candidate,
        opportunity,
        project,
        order,
        invoice,
        contact,
        company,
        positioning,
        delivery
    }))}`, {
        ...opts,
        body
    });
}
export function putActionsDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                timezones?: string[];
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "action";
                attributes?: {
                    startDate?: string;
                    typeOf?: number;
                    text?: string;
                    synchronizeWithAdvancedAppCalendar?: boolean;
                    title?: string;
                    description?: string;
                    endDate?: string;
                    location?: string;
                    guests?: string[];
                    startTimezone?: string;
                    endTimezone?: string;
                };
                relationships: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    positioning?: {
                        data: {
                            id: string;
                            "type": "positioning";
                        };
                    };
                    delivery?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    dependsOn: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    typeOf?: number;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    phone1?: string;
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    "number"?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "invoice";
                attributes?: {
                    reference?: string;
                    isCreditNote?: boolean;
                };
                relationships?: {
                    order?: {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "positioning";
                attributes?: {
                    canShowDependsOn?: boolean;
                    canShowOpportunity?: boolean;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    };
                    opportunity?: {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                };
            } | {
                id: string;
                "type": "delivery";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/actions/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteActionsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/actions/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postActionsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/actions/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get action's basic data
 */
export function getActionsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "appOauthRedirection" | "appError";
                    detail: string;
                    oauth_redirection?: string;
                    app_error?: string;
                    app?: {
                        id: string;
                        name: string;
                        code: string;
                    };
                }[];
                timezones?: string[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "action";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    startDate?: string;
                    endDate?: string;
                    startTimezone?: string;
                    endTimezone?: string;
                    typeOf?: number;
                    title?: string;
                    description?: string;
                    text?: string;
                    location?: string;
                    guests?: string[];
                    synchronizeWithAdvancedAppCalendar?: boolean;
                    relationType?: "parent" | "child";
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    relatedActions?: {
                        data: {
                            id: string;
                            "type": "action";
                        }[];
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    title?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    typeOf?: number;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    "number"?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "invoice";
                attributes?: {
                    reference?: string;
                    isCreditNote?: boolean;
                };
                relationships?: {
                    order?: {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    typeOf?: number;
                    canReadAction?: boolean;
                    relationType?: "parent" | "child";
                };
                relationships?: {
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "positioning";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    };
                };
            } | {
                id: string;
                "type": "delivery";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/actions/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the action
 */
export function deleteActionsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "appOauthRedirection" | "appError";
                    detail: string;
                    oauth_redirection?: string;
                    app_error?: string;
                    app?: {
                        id: string;
                        name: string;
                        code: string;
                    };
                }[];
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/actions/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to an action
 */
export function putActionsById(body?: {
    data: {
        id: string;
        "type": "action";
        attributes?: {
            startDate?: string;
            endDate?: string;
            startTimezone?: string;
            endTimezone?: string;
            typeOf?: number;
            title?: string;
            description?: string;
            text?: string;
            location?: string;
            guests?: string[];
            synchronizeWithAdvancedAppCalendar?: boolean;
        };
        relationships?: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, { positioning, delivery, id }: {
    positioning?: number;
    delivery?: number;
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "appOauthRedirection" | "appError";
                    detail: string;
                    oauth_redirection?: string;
                    app_error?: string;
                    app?: {
                        id: string;
                        name: string;
                        code: string;
                    };
                }[];
                timezones?: string[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "action";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    startDate?: string;
                    endDate?: string;
                    startTimezone?: string;
                    endTimezone?: string;
                    typeOf?: number;
                    title?: string;
                    description?: string;
                    text?: string;
                    location?: string;
                    guests?: string[];
                    synchronizeWithAdvancedAppCalendar?: boolean;
                    relationType?: "parent" | "child";
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    relatedActions?: {
                        data: {
                            id: string;
                            "type": "action";
                        }[];
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    title?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    typeOf?: number;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    "number"?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "invoice";
                attributes?: {
                    reference?: string;
                    isCreditNote?: boolean;
                };
                relationships?: {
                    order?: {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    typeOf?: number;
                    canReadAction?: boolean;
                    relationType?: "parent" | "child";
                };
                relationships?: {
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "positioning";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    };
                };
            } | {
                id: string;
                "type": "delivery";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/actions/${encodeURIComponent(id)}${QS.query(QS.explode({
        positioning,
        delivery
    }))}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postActionsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/actions/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search templates
 */
export function getActionsTemplates(body?: string, { isAdministrator, actionTypes, keywords, dependsOn, dependsOnType, sort, order }: {
    isAdministrator?: boolean;
    actionTypes?: string[];
    keywords?: string;
    dependsOn?: number;
    dependsOnType?: "candidate" | "resource" | "contact" | "company" | "project" | "opportunity" | "invoice" | "order";
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/actions/templates${QS.query(QS.explode({
        isAdministrator,
        actionTypes,
        keywords,
        dependsOn,
        dependsOnType,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a template
 */
export function postActionsTemplates(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/actions/templates", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteActionsTemplates(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/actions/templates", {
        ...opts,
        method: "DELETE"
    });
}
export function putActionsTemplates(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/actions/templates", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get template's data
 */
export function getActionsTemplatesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/actions/templates/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Update data related to a template.
 */
export function putActionsTemplatesById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/actions/templates/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
/**
 * Delete the template
 */
export function deleteActionsTemplatesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/actions/templates/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postActionsTemplatesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/actions/templates/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Get customer's administrator basic data
 */
export function getAdministrator(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "administrator";
                attributes?: {
                    modules?: {
                        downloadCenter?: boolean;
                        intranet?: boolean;
                        resources?: boolean;
                        projects?: boolean;
                        opportunities?: boolean;
                        candidates?: boolean;
                        crm?: boolean;
                        activityExpenses?: boolean;
                        billing?: boolean;
                        products?: boolean;
                        purchases?: boolean;
                    };
                    clientKey?: string;
                    clientToken?: string;
                    isBoondManagerAdministrator?: boolean;
                    isSandboxActivated?: boolean;
                    canCreateSandbox?: boolean;
                    groupLogo?: string;
                };
                relationships?: {
                    boondmanagerContracts?: {
                        data: {
                            id: string;
                            "type": "boondmanagercontract";
                        }[];
                    };
                    apps?: {
                        data: {
                            id: string;
                            "type": "app";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "boondmanagercontract";
                attributes?: {
                    creationDate?: string;
                    documentLink?: string;
                    validatorDate?: string;
                    validatorFirstName?: string;
                    validatorLastName?: string;
                    validatorFunction?: string;
                    validatorState?: boolean;
                };
            } | {
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    title?: string;
                    description?: string;
                    category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                    code?: string;
                    logo?: string;
                    integration?: "iFrame" | "module";
                    visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/administrator", {
        ...opts
    });
}
export function putAdministrator(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "administrator";
                attributes?: {
                    modules?: {
                        downloadCenter?: boolean;
                        intranet?: boolean;
                        resources?: boolean;
                        projects?: boolean;
                        opportunities?: boolean;
                        candidates?: boolean;
                        crm?: boolean;
                        activityExpenses?: boolean;
                        billing?: boolean;
                        products?: boolean;
                        purchases?: boolean;
                    };
                    clientKey?: string;
                    clientToken?: string;
                    isBoondManagerAdministrator?: boolean;
                    isSandboxActivated?: boolean;
                    canCreateSandbox?: boolean;
                    groupLogo?: string;
                };
                relationships?: {
                    boondmanagerContracts?: {
                        data: {
                            id: string;
                            "type": "boondmanagercontract";
                        }[];
                    };
                    apps?: {
                        data: {
                            id: string;
                            "type": "app";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "boondmanagercontract";
                attributes?: {
                    creationDate?: string;
                    documentLink?: string;
                    validatorDate?: string;
                    validatorFirstName?: string;
                    validatorLastName?: string;
                    validatorFunction?: string;
                    validatorState?: boolean;
                };
            } | {
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    title?: string;
                    description?: string;
                    category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                    code?: string;
                    logo?: string;
                    integration?: "iFrame" | "module";
                    visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/administrator", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteAdministrator(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/administrator", {
        ...opts,
        method: "DELETE"
    });
}
export function postAdministrator(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/administrator", {
        ...opts,
        method: "POST"
    });
}
/**
 * Search advantages
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/advantages.csv?keywords=COMP100*
 *
 */
export function getAdvantages(body?: string, { keywords, resourceTypes, resourceStates, period, startDate, endDate, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    resourceTypes?: number[];
    resourceStates?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "advantage";
                attributes?: {
                    date?: string;
                    advantageType?: {
                        reference: number;
                        name: string;
                    };
                    quantity?: number;
                    costPaid?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/advantages${QS.query(QS.explode({
        keywords,
        resourceTypes,
        resourceStates,
        period,
        startDate,
        endDate,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create an advantage
 */
export function postAdvantages(body?: {
    data: {
        "type": "advantage";
        attributes?: {
            date?: string;
            returnDate?: string;
            advantageType: {
                reference: number;
                frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                participationQuota: number;
                agencyQuota: number;
                employeeQuota: number;
            };
            quantity?: number;
            participationAmount?: number;
            agencyAmount?: number;
            employeeAmount?: number;
            informationComments?: string;
            currency?: number;
            currencyAgency?: number;
            exchangeRate?: number;
            exchangeRateAgency?: number;
        };
        relationships: {
            resource: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            contract?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "contract";
                };
            };
            project?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            };
            delivery?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "delivery";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "advantage";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    date?: string;
                    returnDate?: string;
                    advantageType?: {
                        reference: number;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                    };
                    quantity?: number;
                    participationAmount?: number;
                    agencyAmount?: number;
                    employeeAmount?: number;
                    costPaid?: number;
                    costCharged?: number;
                    informationComments?: string;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    contract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    monthlySalary?: number;
                };
            } | {
                id: string;
                "type": "delivery";
                relationships?: {
                    contract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    monthlySalary?: number;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/advantages", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteAdvantages(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/advantages", {
        ...opts,
        method: "DELETE"
    });
}
export function putAdvantages(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/advantages", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty advantage's default basic data
 */
export function getAdvantagesDefault(resource: number, body?: string, { contract, project, delivery }: {
    contract?: number;
    project?: number;
    delivery?: number;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "advantage";
                attributes?: {
                    advantageType?: {
                        reference: number;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                    };
                    participationAmount?: number;
                    agencyAmount?: number;
                    employeeAmount?: number;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    contract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                    }[];
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    monthlySalary?: number;
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                    }[];
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/advantages/default${QS.query(QS.explode({
        resource,
        contract,
        project,
        delivery
    }))}`, {
        ...opts,
        body
    });
}
export function putAdvantagesDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "advantage";
                attributes?: {
                    advantageType?: {
                        reference: number;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                    };
                    participationAmount?: number;
                    agencyAmount?: number;
                    employeeAmount?: number;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    contract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                    }[];
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    monthlySalary?: number;
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                    }[];
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/advantages/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteAdvantagesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/advantages/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postAdvantagesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/advantages/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get advantage's basic data
 */
export function getAdvantagesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "advantage";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    date?: string;
                    returnDate?: string;
                    advantageType?: {
                        reference: number;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                    };
                    quantity?: number;
                    participationAmount?: number;
                    agencyAmount?: number;
                    employeeAmount?: number;
                    costPaid?: number;
                    costCharged?: number;
                    informationComments?: string;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    contract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    monthlySalary?: number;
                };
            } | {
                id: string;
                "type": "delivery";
                relationships?: {
                    contract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    monthlySalary?: number;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/advantages/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the advantage
 */
export function deleteAdvantagesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/advantages/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to an advantage
 */
export function putAdvantagesById(body?: {
    data: {
        id: string;
        "type": "advantage";
        attributes?: {
            date?: string;
            returnDate?: string;
            quantity?: number;
            participationAmount?: number;
            agencyAmount?: number;
            employeeAmount?: number;
            informationComments?: string;
            currency?: number;
            currencyAgency?: number;
            exchangeRate?: number;
            exchangeRateAgency?: number;
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "advantage";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    date?: string;
                    returnDate?: string;
                    advantageType?: {
                        reference: number;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                    };
                    quantity?: number;
                    participationAmount?: number;
                    agencyAmount?: number;
                    employeeAmount?: number;
                    costPaid?: number;
                    costCharged?: number;
                    informationComments?: string;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    contract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    monthlySalary?: number;
                };
            } | {
                id: string;
                "type": "delivery";
                relationships?: {
                    contract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    monthlySalary?: number;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/advantages/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postAdvantagesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/advantages/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search agencies
 */
export function getAgencies(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    currency?: number;
                    numberOfWorkingDays?: number;
                    chargeFactor?: number;
                    vatNumber?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    staff?: number;
                    state?: boolean;
                    workUnitRate?: number;
                    workUnitRateOnProjectsAndOpportunities?: number;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/agencies", {
        ...opts
    });
}
/**
 * Create an agency
 */
export function postAgencies(body?: {
    data: {
        "type": "agency";
        attributes: {
            name: string;
            email1?: string;
            phone1?: string;
            address?: string;
            postcode?: string;
            town?: string;
            country?: string;
            vatNumber?: string;
            registrationNumber?: string;
            legalStatus?: string;
            registeredOffice?: string;
            apeCode?: string;
            numberOfWorkingDays?: number;
            chargeFactor?: number;
            currency?: number;
            exchangeRate?: number;
            workUnitRate?: number;
            calendar?: string;
            state?: boolean;
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                timezones?: string[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "agency";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    email1?: string;
                    phone1?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    vatNumber?: string;
                    registrationNumber?: string;
                    legalStatus?: string;
                    registeredOffice?: string;
                    apeCode?: string;
                    numberOfWorkingDays?: number;
                    chargeFactor?: number;
                    currency?: number;
                    exchangeRate?: number;
                    workUnitRate?: number;
                    workUnitRateOnProjectsAndOpportunities?: number;
                    calendar?: string;
                    timezone?: string;
                    state?: boolean;
                };
                relationships?: {
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/agencies", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteAgencies(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/agencies", {
        ...opts,
        method: "DELETE"
    });
}
export function putAgencies(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/agencies", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty agency's default information data
 */
export function getAgenciesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                timezones?: string[];
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "agency";
                attributes?: {
                    country?: string;
                    currency?: number;
                    exchangeRate?: number;
                    calendar?: string;
                    numberOfWorkingDays?: number;
                    chargeFactor?: number;
                    workUnitRate?: number;
                    workUnitRateOnProjectsAndOpportunities?: number;
                    timezone?: string;
                    state?: boolean;
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/agencies/default", {
        ...opts
    });
}
export function putAgenciesDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                timezones?: string[];
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "agency";
                attributes?: {
                    country?: string;
                    currency?: number;
                    exchangeRate?: number;
                    calendar?: string;
                    numberOfWorkingDays?: number;
                    chargeFactor?: number;
                    workUnitRate?: number;
                    workUnitRateOnProjectsAndOpportunities?: number;
                    timezone?: string;
                    state?: boolean;
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/agencies/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteAgenciesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/agencies/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postAgenciesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/agencies/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get agency's basic data
 */
export function getAgenciesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/agencies/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the agency
 */
export function deleteAgenciesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/agencies/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function putAgenciesById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/agencies/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postAgenciesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/agencies/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Get the list of assignments availables for updating
 */
export function getApplicationAssignments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "assignments";
                relationships?: {
                    mainManagers?: {
                        [key: string]: any;
                    };
                    hrManagers?: {
                        [key: string]: any;
                    };
                    validators?: {
                        [key: string]: any;
                    };
                    influencers?: {
                        [key: string]: any;
                    };
                    agencies?: {
                        [key: string]: any;
                    };
                    poles?: {
                        [key: string]: any;
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/assignments", {
        ...opts
    });
}
export function deleteApplicationAssignments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/assignments", {
        ...opts,
        method: "DELETE"
    });
}
export function postApplicationAssignments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/assignments", {
        ...opts,
        method: "POST"
    });
}
export function putApplicationAssignments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/assignments", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get current user's data
 */
export function getApplicationCurrentUser(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "currentuser";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    thumbnail?: string;
                    email1?: string;
                    phone1?: string;
                    language?: "fr" | "en";
                    login?: string;
                    level?: "manager" | "resource" | "administrator";
                    userToken?: string;
                    modules?: {
                        downloadCenter?: boolean;
                        absencesAccounts?: boolean;
                        flags?: boolean;
                        resources?: boolean;
                        accounts?: boolean;
                        agencies?: boolean;
                        businessUnits?: boolean;
                        poles?: boolean;
                        marketplace?: boolean;
                        apps?: boolean;
                        subscription?: boolean;
                        projects?: boolean;
                        opportunities?: boolean;
                        candidates?: boolean;
                        crm?: boolean;
                        activityExpenses?: boolean;
                        billing?: boolean;
                        products?: boolean;
                        purchases?: boolean;
                        reporting?: boolean;
                        actions?: boolean;
                        dashboard?: boolean;
                        architecture?: boolean;
                        customers?: boolean;
                        positionings?: boolean;
                        activityIntranet?: boolean;
                        logs?: boolean;
                    };
                    navigationBar?: (("resources" | "candidates" | "crm" | "opportunities" | "products" | "projects" | "purchases" | "positionings" | "activityExpenses" | "billing" | "reporting" | "actions" | "dashboard" | "resourceTimesReports" | "resourceAbsencesReports" | "resourceExpensesReports" | "resourceProjects" | "customers") | {
                        id: string;
                        "type": "app";
                    })[];
                    rights?: {
                        main: {
                            shareSavedSearches?: "disabled" | "share" | "edit";
                            showGroupe: boolean;
                            showBuPoles: boolean;
                            showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                            showAllAgencies: "none" | "assignment";
                            showAllPoles: "none" | "assignment";
                            administrator: boolean;
                        };
                        resources?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                            administrative: "none" | "read" | "readAndWrite";
                        };
                        opportunities?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            maskData: boolean;
                            maskOnlyContacts: boolean;
                        };
                        projects?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: any;
                            administrative: any;
                        };
                        candidates?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                        };
                        crm?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            editCreationDate: boolean;
                            showAllCompanies: boolean;
                            createCompanies: boolean;
                            createContacts: boolean;
                        };
                        activityExpenses?: {
                            writeAll: "extended" | "absolute";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        billing?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            editReference?: boolean;
                            editDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            readDocuments: boolean;
                            unlockInvoices: boolean;
                        };
                        products?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        purchases?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        reporting?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            extraction: boolean;
                            reporting: boolean;
                            distributionCustomers: boolean;
                            projects: boolean;
                            resources: boolean;
                            productionPlans: boolean;
                        };
                        flags?: {
                            showAll: "personal" | "all";
                        };
                        actions?: {
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        customers?: {
                            creation: boolean;
                            extraction: boolean;
                            edition: boolean;
                            deletion: boolean;
                            connection: boolean;
                        };
                    };
                    lastLogInDate?: string;
                    homepage?: "resources" | "candidates" | "crm" | "opportunities" | "products" | "projects" | "purchases" | "positionings" | "activityExpenses" | "billing" | "reporting" | "actions" | "dashboard" | "apps";
                    theme?: "light" | "dark";
                    nodeSignedRequest?: string;
                    nodeUrl?: string;
                    timezone?: string;
                    narrowPerimeter?: boolean;
                    defaultSearchSaving?: boolean;
                    commercialSynthesisScorecards?: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    }[];
                    humanResourcesSynthesisScorecards?: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    }[];
                    recruitmentSynthesisScorecards?: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    }[];
                    activityExpensesSynthesisScorecards?: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    }[];
                    billingSynthesisScorecards?: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    }[];
                    globalSynthesisScorecards?: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    }[];
                    companiesScorecards?: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    }[];
                    projectsScorecards?: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    }[];
                    resourcesScorecards?: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    }[];
                };
                relationships?: {
                    agency?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    otherAgencies?: {
                        data: {
                            id: string;
                            "type": "agency";
                        }[];
                    };
                    otherPoles?: {
                        data: {
                            id: string;
                            "type": "pole";
                        }[];
                    };
                    apps?: {
                        data: {
                            id: string;
                            "type": "app";
                        }[];
                    };
                    advancedAppTemplates?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppCertification?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppCalendar?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppMail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppViewer?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppEmailing?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    role?: {
                        data: {
                            id: string;
                            "type": "role";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "agency";
                attributes?: {
                    code?: string;
                    name?: string;
                    group?: string;
                    groupLogo?: string;
                    currency?: number;
                    exchangeRate?: number;
                    jDay?: "actualDay" | "lastDayOfPreviousMonth" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28;
                    allowResourcesToViewAbsencesAccounts?: boolean;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    title?: string;
                    description?: string;
                    category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                    code?: string;
                    integration?: "iFrame" | "module";
                    url?: string;
                    logo?: string;
                    buttonsSetting?: {
                        page: "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries-inactivities" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absences-reports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries-groupments" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absences-reports" | "expenses-reports" | "times-reports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources";
                        title: string;
                        "function": string;
                    }[];
                    iFramesSetting?: {
                        page: "dashboard" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                        scrolling: boolean;
                        height: number;
                        isHalfWidth: boolean;
                        "function": string;
                    }[];
                    triggersSetting?: {
                        page: "actions/@id" | "candidates/@id" | "resources/@id" | "products/@id" | "contracts/@id" | "advantages/@id" | "opportunities/@id" | "projects/@id" | "positionings/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "times-reports/@id" | "expenses-reports/@id" | "absences-reports/@id" | "purchases/@id" | "payments/@id" | "orders/@id" | "invoices/@id" | "contacts/@id" | "companies/@id";
                        event: "create" | "update" | "delete";
                        "function": string;
                    }[];
                    isRefreshTokenValidated?: boolean;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/current-user", {
        ...opts
    });
}
export function deleteApplicationCurrentUser(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/current-user", {
        ...opts,
        method: "DELETE"
    });
}
export function postApplicationCurrentUser(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/current-user", {
        ...opts,
        method: "POST"
    });
}
export function putApplicationCurrentUser(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/current-user", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get the specific translations
 */
export function getApplicationDictionary(body?: string, { mergeAllLanguages, language }: {
    mergeAllLanguages?: boolean;
    language?: "fr" | "en";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                setting?: {
                    action?: {
                        forceMultiCreation?: boolean;
                        sort?: boolean;
                        contact?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        candidate?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        resource?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        opportunity?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        project?: {
                            id: number;
                            value?: string;
                            collaborative?: boolean;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        order?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        invoice?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                    };
                    state?: {
                        sort?: boolean;
                        candidate?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        resource?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        product?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        opportunity?: {
                            id: number;
                            value?: string;
                            active: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        positioning?: {
                            id: number;
                            value?: string;
                            active: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        project?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        delivery?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        contact?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        company?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        order?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        invoice?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        purchase?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        payment?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        quotation?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                    };
                    displayedColumns?: {
                        opportunity?: ("creationDate" | "title" | "contact" | "state" | "numberOfActivePositionings" | "place" | "startDate" | "duration" | "turnoverWeightedExcludingTax" | "mainManager" | "closingDate" | "answerDate" | "activityAreas" | "expertiseArea" | "tools" | "dueDate" | "origin" | "hrManager" | "pole" | "agency" | "turnoverEstimatedExcludingTax" | "estimatesExcludingTax")[];
                    };
                    cache?: {
                        reporting?: {
                            state?: boolean;
                            duration?: number;
                        };
                    };
                    additionalTurnoverTypes?: {
                        state?: boolean;
                    };
                    timezone?: "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Fort_Nelson" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Colombo" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kathmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qyzylorda" | "Asia/Riyadh" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ulaanbaatar" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faroe" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/Perth" | "Australia/Sydney" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Wake" | "Pacific/Wallis" | "UTC";
                    typeOf?: {
                        contract?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        purchase?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        resource?: {
                            id: number;
                            value?: string;
                            isExternal?: boolean;
                            isStructure?: boolean;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        activity?: {
                            id: 0 | 1 | 2 | 3 | 4;
                            value?: string;
                            isEnabled?: boolean;
                        }[];
                        delivery?: {
                            id: number;
                            scenario?: 0 | 1 | 2 | 3;
                            value?: string;
                            isEnabled?: boolean;
                        }[];
                        project?: {
                            id: number;
                            mode: 1 | 2 | 3 | 4;
                            value?: string;
                            isInternal: boolean;
                            activityType?: "workUnit" | "day";
                            scheduleProductionTurnover: boolean;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        subscription?: {
                            id: 0 | 1 | 2 | 3 | 4;
                            value?: string;
                            isEnabled?: boolean;
                        }[];
                        employee?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        workingTime?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        additionalTurnover?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                    };
                    contractEndReason?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    currency?: {
                        id: number;
                        value?: string;
                        "symbol"?: string;
                        iso?: "EUR" | "USD" | "GBP" | "AFN" | "ALL" | "DZD" | "AOA" | "XCD" | "ARS" | "AMD" | "AWG" | "AZN" | "BSD" | "BHD" | "BDT" | "BBD" | "BYN" | "BZD" | "XOF" | "BMD" | "INR" | "BTN" | "BOB" | "BAM" | "BWP" | "NOK" | "BRL" | "BND" | "BGN" | "BIF" | "CVE" | "KHR" | "CAD" | "KYD" | "CLP" | "CLF" | "CNY" | "COP" | "KMF" | "CDF" | "NZD" | "CRC" | "HRK" | "CUP" | "ANG" | "CZK" | "DKK" | "DJF" | "DOP" | "EGP" | "SVC" | "ERN" | "SZL" | "ETB" | "FKP" | "FJD" | "XPF" | "GMD" | "GEL" | "GHS" | "GIP" | "GTQ" | "GNF" | "GYD" | "HTG" | "HNL" | "HKD" | "HUF" | "ISK" | "IDR" | "IRR" | "IQD" | "ILS" | "JMD" | "JPY" | "JOD" | "KZT" | "KES" | "KPW" | "KRW" | "KWD" | "KGS" | "LAK" | "LBP" | "LSL" | "ZAR" | "LRD" | "LYD" | "CHF" | "MOP" | "MKD" | "MGA" | "MWK" | "MYR" | "MVR" | "MRU" | "MUR" | "MXN" | "MDL" | "MNT" | "MAD" | "MZN" | "MMK" | "NAD" | "NPR" | "NIO" | "NGN" | "AUD" | "OMR" | "PKR" | "PAB" | "PGK" | "PYG" | "PEN" | "PHP" | "PLN" | "QAR" | "RON" | "RUB" | "RWF" | "SHP" | "WST" | "STN" | "SAR" | "RSD" | "SCR" | "SLL" | "SGD" | "XSU" | "SBD" | "SOS" | "SSP" | "LKR" | "SDG" | "SRD" | "SEK" | "SYP" | "TWD" | "TJS" | "TZS" | "THB" | "TOP" | "TTD" | "TND" | "TRY" | "TMT" | "UGX" | "UAH" | "AED" | "UYU" | "UZS" | "VUV" | "VES" | "VND" | "YER" | "ZMW" | "ZWL";
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    calendar?: {
                        id: string;
                        value?: string;
                        iso?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    taxRate?: {
                        id: number;
                        rate: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    paymentTerm?: {
                        id: number;
                        value: 0 | 1 | 2 | 3 | 4;
                        x?: number;
                        y?: number;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    paymentMethod?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    sendingMode?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    defaultOpportunityTypeCreated?: number;
                    defaultPositioningSearchModule?: "resources" | "candidates";
                    filterPositioningSearchModule?: boolean;
                    smoothAdditionalData?: boolean;
                    profitabilityMethodOfCalculating?: "marginRate" | "brandRate";
                    showOwnOrderReference?: boolean;
                    defaultMail?: {
                        quotation?: {
                            "object": string;
                            body: string;
                        };
                        invoice?: {
                            "object": string;
                            body: string;
                        };
                        deliveryOrder?: {
                            "object": string;
                            body: string;
                        };
                        timesReports?: {
                            "object": string;
                            body: string;
                        };
                        expensesReports?: {
                            "object": string;
                            body: string;
                        };
                        timesReportsAndExpensesReports?: {
                            "object": string;
                            body: string;
                        };
                        waitingForValidationTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        waitingForValidationExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        waitingForValidationAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        validatedTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        validatedExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        validatedAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        rejectedTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        rejectedExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        rejectedAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        refusedTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        refusedExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        refusedAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        removalAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        signatureDocumentRequest?: {
                            "object": string;
                            body: string;
                        };
                        signatureDocumentReminder?: {
                            "object": string;
                            body: string;
                        };
                        signatureDocumentValidation?: {
                            "object": string;
                            body: string;
                        };
                    };
                    showLogoCompany?: boolean;
                    markdownTextDashboard?: string;
                    experience?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    training?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    tool?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    defaultAction?: {
                        pushResource?: string;
                        pushCandidate?: string;
                        pushContact?: string;
                    };
                    activityArea?: {
                        id: string;
                        value?: string;
                        option?: {
                            id: string;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    expertiseArea?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    duration?: {
                        id: number | number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    languageSpoken?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    languageLevel?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    availability?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    evaluation?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    mobilityArea?: {
                        id: string;
                        value?: string;
                        option?: {
                            id: string;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    origin?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    classification?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    source?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    criteria?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    situation?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    civility?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    defaultNationality?: string;
                    itemInvoice?: {
                        monthly?: {
                            id: "1" | 13 | 14 | "2" | 23 | 24 | "3" | "4";
                            value: string;
                            isEnabled?: boolean;
                        }[];
                        schedule?: {
                            id: "1" | "2" | "3" | "4";
                            value: string;
                            isEnabled?: boolean;
                        }[];
                    };
                    deliveryOrder?: {
                        id: number;
                        value?: string;
                        maskSignatureBlock: boolean;
                        insert?: {
                            value?: string;
                            optionLength?: number;
                            option?: string[];
                        }[];
                        isEnabled?: boolean;
                    }[];
                    sharingEntity?: {
                        credentials?: {
                            "object": string;
                            body: string;
                        };
                        account?: {
                            "object": string;
                            body: string;
                        };
                        resource?: {
                            "object": string;
                            body: string;
                        };
                        opportunity?: {
                            "object": string;
                            body: string;
                        };
                        candidate?: {
                            "object": string;
                            body: string;
                        };
                        contact?: {
                            "object": string;
                            body: string;
                        };
                        company?: {
                            "object": string;
                            body: string;
                        };
                        project?: {
                            "object": string;
                            body: string;
                        };
                        product?: {
                            "object": string;
                            body: string;
                        };
                        purchase?: {
                            "object": string;
                            body: string;
                        };
                        payment?: {
                            "object": string;
                            body: string;
                        };
                        positioning?: {
                            "object": string;
                            body: string;
                        };
                        delivery?: {
                            "object": string;
                            body: string;
                        };
                        groupment?: {
                            "object": string;
                            body: string;
                        };
                        inactivity?: {
                            "object": string;
                            body: string;
                        };
                        contract?: {
                            "object": string;
                            body: string;
                        };
                        advantage?: {
                            "object": string;
                            body: string;
                        };
                        invoice?: {
                            "object": string;
                            body: string;
                        };
                        order?: {
                            "object": string;
                            body: string;
                        };
                        timesheet?: {
                            "object": string;
                            body: string;
                        };
                        expenses?: {
                            "object": string;
                            body: string;
                        };
                        absencesRequest?: {
                            "object": string;
                            body: string;
                        };
                        action?: {
                            "object": string;
                            body: string;
                        };
                        quotation?: {
                            "object"?: string;
                            body?: string;
                            [key: string]: any;
                        };
                    };
                };
                country?: {
                    id: string;
                    iso?: string;
                    value?: string;
                    [key: string]: any;
                }[];
                nationality?: {
                    id: string;
                    value?: string;
                    [key: string]: any;
                }[];
                lastBackupDate?: string;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/application/dictionary${QS.query(QS.explode({
        mergeAllLanguages,
        language
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Update the specific translations
 */
export function putApplicationDictionary(body?: {
    data?: {
        setting?: {
            action?: {
                forceMultiCreation?: boolean;
                sort?: boolean;
                contact?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                candidate?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                resource?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                opportunity?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                project?: {
                    id: number;
                    value?: string;
                    collaborative?: boolean;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                order?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                invoice?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
            };
            state?: {
                sort?: boolean;
                candidate?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                resource?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                product?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                opportunity?: {
                    id: number;
                    value?: string;
                    active: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                positioning?: {
                    id: number;
                    value?: string;
                    active: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                project?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                delivery?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                contact?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                company?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                order?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                invoice?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                purchase?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                payment?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                quotation?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
            };
            displayedColumns?: {
                opportunity?: ("creationDate" | "title" | "contact" | "state" | "numberOfActivePositionings" | "place" | "startDate" | "duration" | "turnoverWeightedExcludingTax" | "mainManager" | "closingDate" | "answerDate" | "activityAreas" | "expertiseArea" | "tools" | "dueDate" | "origin" | "hrManager" | "pole" | "agency" | "turnoverEstimatedExcludingTax" | "estimatesExcludingTax")[];
            };
            cache?: {
                reporting?: {
                    state?: boolean;
                    duration?: number;
                };
            };
            additionalTurnoverTypes?: {
                state?: boolean;
            };
            timezone?: "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Fort_Nelson" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Colombo" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kathmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qyzylorda" | "Asia/Riyadh" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ulaanbaatar" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faroe" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/Perth" | "Australia/Sydney" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Wake" | "Pacific/Wallis" | "UTC";
            typeOf?: {
                contract?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                purchase?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                resource?: {
                    id: number;
                    value?: string;
                    isExternal?: boolean;
                    isStructure?: boolean;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                activity?: {
                    id: 0 | 1 | 2 | 3 | 4;
                    value?: string;
                    isEnabled?: boolean;
                }[];
                delivery?: {
                    id: number;
                    scenario?: 0 | 1 | 2 | 3;
                    value?: string;
                    isEnabled?: boolean;
                }[];
                project?: {
                    id: number;
                    mode: 1 | 2 | 3 | 4;
                    value?: string;
                    isInternal: boolean;
                    activityType?: "workUnit" | "day";
                    scheduleProductionTurnover: boolean;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                subscription?: {
                    id: 0 | 1 | 2 | 3 | 4;
                    value?: string;
                    isEnabled?: boolean;
                }[];
                employee?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                workingTime?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                additionalTurnover?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
            };
            contractEndReason?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            currency?: {
                id: number;
                value?: string;
                "symbol"?: string;
                iso?: "EUR" | "USD" | "GBP" | "AFN" | "ALL" | "DZD" | "AOA" | "XCD" | "ARS" | "AMD" | "AWG" | "AZN" | "BSD" | "BHD" | "BDT" | "BBD" | "BYN" | "BZD" | "XOF" | "BMD" | "INR" | "BTN" | "BOB" | "BAM" | "BWP" | "NOK" | "BRL" | "BND" | "BGN" | "BIF" | "CVE" | "KHR" | "CAD" | "KYD" | "CLP" | "CLF" | "CNY" | "COP" | "KMF" | "CDF" | "NZD" | "CRC" | "HRK" | "CUP" | "ANG" | "CZK" | "DKK" | "DJF" | "DOP" | "EGP" | "SVC" | "ERN" | "SZL" | "ETB" | "FKP" | "FJD" | "XPF" | "GMD" | "GEL" | "GHS" | "GIP" | "GTQ" | "GNF" | "GYD" | "HTG" | "HNL" | "HKD" | "HUF" | "ISK" | "IDR" | "IRR" | "IQD" | "ILS" | "JMD" | "JPY" | "JOD" | "KZT" | "KES" | "KPW" | "KRW" | "KWD" | "KGS" | "LAK" | "LBP" | "LSL" | "ZAR" | "LRD" | "LYD" | "CHF" | "MOP" | "MKD" | "MGA" | "MWK" | "MYR" | "MVR" | "MRU" | "MUR" | "MXN" | "MDL" | "MNT" | "MAD" | "MZN" | "MMK" | "NAD" | "NPR" | "NIO" | "NGN" | "AUD" | "OMR" | "PKR" | "PAB" | "PGK" | "PYG" | "PEN" | "PHP" | "PLN" | "QAR" | "RON" | "RUB" | "RWF" | "SHP" | "WST" | "STN" | "SAR" | "RSD" | "SCR" | "SLL" | "SGD" | "XSU" | "SBD" | "SOS" | "SSP" | "LKR" | "SDG" | "SRD" | "SEK" | "SYP" | "TWD" | "TJS" | "TZS" | "THB" | "TOP" | "TTD" | "TND" | "TRY" | "TMT" | "UGX" | "UAH" | "AED" | "UYU" | "UZS" | "VUV" | "VES" | "VND" | "YER" | "ZMW" | "ZWL";
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            calendar?: {
                id: string;
                value?: string;
                iso?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            taxRate?: {
                id: number;
                rate: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            paymentTerm?: {
                id: number;
                value: 0 | 1 | 2 | 3 | 4;
                x?: number;
                y?: number;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            paymentMethod?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            sendingMode?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            defaultOpportunityTypeCreated?: number;
            defaultPositioningSearchModule?: "resources" | "candidates";
            filterPositioningSearchModule?: boolean;
            smoothAdditionalData?: boolean;
            profitabilityMethodOfCalculating?: "marginRate" | "brandRate";
            showOwnOrderReference?: boolean;
            defaultMail?: {
                quotation?: {
                    "object": string;
                    body: string;
                };
                invoice?: {
                    "object": string;
                    body: string;
                };
                deliveryOrder?: {
                    "object": string;
                    body: string;
                };
                timesReports?: {
                    "object": string;
                    body: string;
                };
                expensesReports?: {
                    "object": string;
                    body: string;
                };
                timesReportsAndExpensesReports?: {
                    "object": string;
                    body: string;
                };
                waitingForValidationTimesReport?: {
                    "object": string;
                    body: string;
                };
                waitingForValidationExpensesReport?: {
                    "object": string;
                    body: string;
                };
                waitingForValidationAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                validatedTimesReport?: {
                    "object": string;
                    body: string;
                };
                validatedExpensesReport?: {
                    "object": string;
                    body: string;
                };
                validatedAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                rejectedTimesReport?: {
                    "object": string;
                    body: string;
                };
                rejectedExpensesReport?: {
                    "object": string;
                    body: string;
                };
                rejectedAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                refusedTimesReport?: {
                    "object": string;
                    body: string;
                };
                refusedExpensesReport?: {
                    "object": string;
                    body: string;
                };
                refusedAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                removalAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                signatureDocumentRequest?: {
                    "object": string;
                    body: string;
                };
                signatureDocumentReminder?: {
                    "object": string;
                    body: string;
                };
                signatureDocumentValidation?: {
                    "object": string;
                    body: string;
                };
            };
            showLogoCompany?: boolean;
            markdownTextDashboard?: string;
            experience?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            training?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            tool?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            defaultAction?: {
                pushResource?: string;
                pushCandidate?: string;
                pushContact?: string;
            };
            activityArea?: {
                id: string;
                value?: string;
                option?: {
                    id: string;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            expertiseArea?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            duration?: {
                id: number | number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            languageSpoken?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            languageLevel?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            availability?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            evaluation?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            mobilityArea?: {
                id: string;
                value?: string;
                option?: {
                    id: string;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            origin?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            classification?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            source?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            criteria?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            situation?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            civility?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            defaultNationality?: string;
            itemInvoice?: {
                monthly?: {
                    id: "1" | 13 | 14 | "2" | 23 | 24 | "3" | "4";
                    value: string;
                    isEnabled?: boolean;
                }[];
                schedule?: {
                    id: "1" | "2" | "3" | "4";
                    value: string;
                    isEnabled?: boolean;
                }[];
            };
            deliveryOrder?: {
                id: number;
                value?: string;
                maskSignatureBlock: boolean;
                insert?: {
                    value?: string;
                    optionLength?: number;
                    option?: string[];
                }[];
                isEnabled?: boolean;
            }[];
            sharingEntity?: {
                credentials?: {
                    "object": string;
                    body: string;
                };
                account?: {
                    "object": string;
                    body: string;
                };
                resource?: {
                    "object": string;
                    body: string;
                };
                opportunity?: {
                    "object": string;
                    body: string;
                };
                candidate?: {
                    "object": string;
                    body: string;
                };
                contact?: {
                    "object": string;
                    body: string;
                };
                company?: {
                    "object": string;
                    body: string;
                };
                project?: {
                    "object": string;
                    body: string;
                };
                product?: {
                    "object": string;
                    body: string;
                };
                purchase?: {
                    "object": string;
                    body: string;
                };
                payment?: {
                    "object": string;
                    body: string;
                };
                positioning?: {
                    "object": string;
                    body: string;
                };
                delivery?: {
                    "object": string;
                    body: string;
                };
                groupment?: {
                    "object": string;
                    body: string;
                };
                inactivity?: {
                    "object": string;
                    body: string;
                };
                contract?: {
                    "object": string;
                    body: string;
                };
                advantage?: {
                    "object": string;
                    body: string;
                };
                invoice?: {
                    "object": string;
                    body: string;
                };
                order?: {
                    "object": string;
                    body: string;
                };
                timesheet?: {
                    "object": string;
                    body: string;
                };
                expenses?: {
                    "object": string;
                    body: string;
                };
                absencesRequest?: {
                    "object": string;
                    body: string;
                };
                action?: {
                    "object": string;
                    body: string;
                };
                quotation?: {
                    "object"?: string;
                    body?: string;
                    [key: string]: any;
                };
            };
        };
    };
}, { language }: {
    language?: "fr" | "en";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                setting?: {
                    action?: {
                        forceMultiCreation?: boolean;
                        sort?: boolean;
                        contact?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        candidate?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        resource?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        opportunity?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        project?: {
                            id: number;
                            value?: string;
                            collaborative?: boolean;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        order?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        invoice?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                    };
                    state?: {
                        sort?: boolean;
                        candidate?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        resource?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        product?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        opportunity?: {
                            id: number;
                            value?: string;
                            active: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        positioning?: {
                            id: number;
                            value?: string;
                            active: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        project?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        delivery?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        contact?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        company?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        order?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        invoice?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        purchase?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        payment?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        quotation?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                    };
                    displayedColumns?: {
                        opportunity?: ("creationDate" | "title" | "contact" | "state" | "numberOfActivePositionings" | "place" | "startDate" | "duration" | "turnoverWeightedExcludingTax" | "mainManager" | "closingDate" | "answerDate" | "activityAreas" | "expertiseArea" | "tools" | "dueDate" | "origin" | "hrManager" | "pole" | "agency" | "turnoverEstimatedExcludingTax" | "estimatesExcludingTax")[];
                    };
                    cache?: {
                        reporting?: {
                            state?: boolean;
                            duration?: number;
                        };
                    };
                    additionalTurnoverTypes?: {
                        state?: boolean;
                    };
                    timezone?: "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Fort_Nelson" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Colombo" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kathmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qyzylorda" | "Asia/Riyadh" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ulaanbaatar" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faroe" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/Perth" | "Australia/Sydney" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Wake" | "Pacific/Wallis" | "UTC";
                    typeOf?: {
                        contract?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        purchase?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        resource?: {
                            id: number;
                            value?: string;
                            isExternal?: boolean;
                            isStructure?: boolean;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        activity?: {
                            id: 0 | 1 | 2 | 3 | 4;
                            value?: string;
                            isEnabled?: boolean;
                        }[];
                        delivery?: {
                            id: number;
                            scenario?: 0 | 1 | 2 | 3;
                            value?: string;
                            isEnabled?: boolean;
                        }[];
                        project?: {
                            id: number;
                            mode: 1 | 2 | 3 | 4;
                            value?: string;
                            isInternal: boolean;
                            activityType?: "workUnit" | "day";
                            scheduleProductionTurnover: boolean;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        subscription?: {
                            id: 0 | 1 | 2 | 3 | 4;
                            value?: string;
                            isEnabled?: boolean;
                        }[];
                        employee?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        workingTime?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        additionalTurnover?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                    };
                    contractEndReason?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    currency?: {
                        id: number;
                        value?: string;
                        "symbol"?: string;
                        iso?: "EUR" | "USD" | "GBP" | "AFN" | "ALL" | "DZD" | "AOA" | "XCD" | "ARS" | "AMD" | "AWG" | "AZN" | "BSD" | "BHD" | "BDT" | "BBD" | "BYN" | "BZD" | "XOF" | "BMD" | "INR" | "BTN" | "BOB" | "BAM" | "BWP" | "NOK" | "BRL" | "BND" | "BGN" | "BIF" | "CVE" | "KHR" | "CAD" | "KYD" | "CLP" | "CLF" | "CNY" | "COP" | "KMF" | "CDF" | "NZD" | "CRC" | "HRK" | "CUP" | "ANG" | "CZK" | "DKK" | "DJF" | "DOP" | "EGP" | "SVC" | "ERN" | "SZL" | "ETB" | "FKP" | "FJD" | "XPF" | "GMD" | "GEL" | "GHS" | "GIP" | "GTQ" | "GNF" | "GYD" | "HTG" | "HNL" | "HKD" | "HUF" | "ISK" | "IDR" | "IRR" | "IQD" | "ILS" | "JMD" | "JPY" | "JOD" | "KZT" | "KES" | "KPW" | "KRW" | "KWD" | "KGS" | "LAK" | "LBP" | "LSL" | "ZAR" | "LRD" | "LYD" | "CHF" | "MOP" | "MKD" | "MGA" | "MWK" | "MYR" | "MVR" | "MRU" | "MUR" | "MXN" | "MDL" | "MNT" | "MAD" | "MZN" | "MMK" | "NAD" | "NPR" | "NIO" | "NGN" | "AUD" | "OMR" | "PKR" | "PAB" | "PGK" | "PYG" | "PEN" | "PHP" | "PLN" | "QAR" | "RON" | "RUB" | "RWF" | "SHP" | "WST" | "STN" | "SAR" | "RSD" | "SCR" | "SLL" | "SGD" | "XSU" | "SBD" | "SOS" | "SSP" | "LKR" | "SDG" | "SRD" | "SEK" | "SYP" | "TWD" | "TJS" | "TZS" | "THB" | "TOP" | "TTD" | "TND" | "TRY" | "TMT" | "UGX" | "UAH" | "AED" | "UYU" | "UZS" | "VUV" | "VES" | "VND" | "YER" | "ZMW" | "ZWL";
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    calendar?: {
                        id: string;
                        value?: string;
                        iso?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    taxRate?: {
                        id: number;
                        rate: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    paymentTerm?: {
                        id: number;
                        value: 0 | 1 | 2 | 3 | 4;
                        x?: number;
                        y?: number;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    paymentMethod?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    sendingMode?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    defaultOpportunityTypeCreated?: number;
                    defaultPositioningSearchModule?: "resources" | "candidates";
                    filterPositioningSearchModule?: boolean;
                    smoothAdditionalData?: boolean;
                    profitabilityMethodOfCalculating?: "marginRate" | "brandRate";
                    showOwnOrderReference?: boolean;
                    defaultMail?: {
                        quotation?: {
                            "object": string;
                            body: string;
                        };
                        invoice?: {
                            "object": string;
                            body: string;
                        };
                        deliveryOrder?: {
                            "object": string;
                            body: string;
                        };
                        timesReports?: {
                            "object": string;
                            body: string;
                        };
                        expensesReports?: {
                            "object": string;
                            body: string;
                        };
                        timesReportsAndExpensesReports?: {
                            "object": string;
                            body: string;
                        };
                        waitingForValidationTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        waitingForValidationExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        waitingForValidationAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        validatedTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        validatedExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        validatedAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        rejectedTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        rejectedExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        rejectedAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        refusedTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        refusedExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        refusedAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        removalAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        signatureDocumentRequest?: {
                            "object": string;
                            body: string;
                        };
                        signatureDocumentReminder?: {
                            "object": string;
                            body: string;
                        };
                        signatureDocumentValidation?: {
                            "object": string;
                            body: string;
                        };
                    };
                    showLogoCompany?: boolean;
                    markdownTextDashboard?: string;
                    experience?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    training?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    tool?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    defaultAction?: {
                        pushResource?: string;
                        pushCandidate?: string;
                        pushContact?: string;
                    };
                    activityArea?: {
                        id: string;
                        value?: string;
                        option?: {
                            id: string;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    expertiseArea?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    duration?: {
                        id: number | number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    languageSpoken?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    languageLevel?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    availability?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    evaluation?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    mobilityArea?: {
                        id: string;
                        value?: string;
                        option?: {
                            id: string;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    origin?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    classification?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    source?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    criteria?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    situation?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    civility?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    defaultNationality?: string;
                    itemInvoice?: {
                        monthly?: {
                            id: "1" | 13 | 14 | "2" | 23 | 24 | "3" | "4";
                            value: string;
                            isEnabled?: boolean;
                        }[];
                        schedule?: {
                            id: "1" | "2" | "3" | "4";
                            value: string;
                            isEnabled?: boolean;
                        }[];
                    };
                    deliveryOrder?: {
                        id: number;
                        value?: string;
                        maskSignatureBlock: boolean;
                        insert?: {
                            value?: string;
                            optionLength?: number;
                            option?: string[];
                        }[];
                        isEnabled?: boolean;
                    }[];
                    sharingEntity?: {
                        credentials?: {
                            "object": string;
                            body: string;
                        };
                        account?: {
                            "object": string;
                            body: string;
                        };
                        resource?: {
                            "object": string;
                            body: string;
                        };
                        opportunity?: {
                            "object": string;
                            body: string;
                        };
                        candidate?: {
                            "object": string;
                            body: string;
                        };
                        contact?: {
                            "object": string;
                            body: string;
                        };
                        company?: {
                            "object": string;
                            body: string;
                        };
                        project?: {
                            "object": string;
                            body: string;
                        };
                        product?: {
                            "object": string;
                            body: string;
                        };
                        purchase?: {
                            "object": string;
                            body: string;
                        };
                        payment?: {
                            "object": string;
                            body: string;
                        };
                        positioning?: {
                            "object": string;
                            body: string;
                        };
                        delivery?: {
                            "object": string;
                            body: string;
                        };
                        groupment?: {
                            "object": string;
                            body: string;
                        };
                        inactivity?: {
                            "object": string;
                            body: string;
                        };
                        contract?: {
                            "object": string;
                            body: string;
                        };
                        advantage?: {
                            "object": string;
                            body: string;
                        };
                        invoice?: {
                            "object": string;
                            body: string;
                        };
                        order?: {
                            "object": string;
                            body: string;
                        };
                        timesheet?: {
                            "object": string;
                            body: string;
                        };
                        expenses?: {
                            "object": string;
                            body: string;
                        };
                        absencesRequest?: {
                            "object": string;
                            body: string;
                        };
                        action?: {
                            "object": string;
                            body: string;
                        };
                        quotation?: {
                            "object"?: string;
                            body?: string;
                            [key: string]: any;
                        };
                    };
                };
                country?: {
                    id: string;
                    iso?: string;
                    value?: string;
                    [key: string]: any;
                }[];
                nationality?: {
                    id: string;
                    value?: string;
                    [key: string]: any;
                }[];
                lastBackupDate?: string;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/application/dictionary${QS.query(QS.explode({
        language
    }))}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteApplicationDictionary(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/dictionary", {
        ...opts,
        method: "DELETE"
    });
}
export function postApplicationDictionary(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/dictionary", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get dictionar's file
 */
export function getApplicationDownloadDictionary(body?: string, { language }: {
    language?: "fr" | "en";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: Blob;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/application/download-dictionary${QS.query(QS.explode({
        language
    }))}`, {
        ...opts,
        body
    });
}
export function deleteApplicationDownloadDictionary(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/download-dictionary", {
        ...opts,
        method: "DELETE"
    });
}
export function postApplicationDownloadDictionary(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/download-dictionary", {
        ...opts,
        method: "POST"
    });
}
export function putApplicationDownloadDictionary(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/download-dictionary", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Backup the specific translations
 */
export function postApplicationBackupDictionary(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                setting?: {
                    action?: {
                        forceMultiCreation?: boolean;
                        sort?: boolean;
                        contact?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        candidate?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        resource?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        opportunity?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        project?: {
                            id: number;
                            value?: string;
                            collaborative?: boolean;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        order?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        invoice?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                    };
                    state?: {
                        sort?: boolean;
                        candidate?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        resource?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        product?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        opportunity?: {
                            id: number;
                            value?: string;
                            active: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        positioning?: {
                            id: number;
                            value?: string;
                            active: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        project?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        delivery?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        contact?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        company?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        order?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        invoice?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        purchase?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        payment?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        quotation?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                    };
                    displayedColumns?: {
                        opportunity?: ("creationDate" | "title" | "contact" | "state" | "numberOfActivePositionings" | "place" | "startDate" | "duration" | "turnoverWeightedExcludingTax" | "mainManager" | "closingDate" | "answerDate" | "activityAreas" | "expertiseArea" | "tools" | "dueDate" | "origin" | "hrManager" | "pole" | "agency" | "turnoverEstimatedExcludingTax" | "estimatesExcludingTax")[];
                    };
                    cache?: {
                        reporting?: {
                            state?: boolean;
                            duration?: number;
                        };
                    };
                    additionalTurnoverTypes?: {
                        state?: boolean;
                    };
                    timezone?: "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Fort_Nelson" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Colombo" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kathmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qyzylorda" | "Asia/Riyadh" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ulaanbaatar" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faroe" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/Perth" | "Australia/Sydney" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Wake" | "Pacific/Wallis" | "UTC";
                    typeOf?: {
                        contract?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        purchase?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        resource?: {
                            id: number;
                            value?: string;
                            isExternal?: boolean;
                            isStructure?: boolean;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        activity?: {
                            id: 0 | 1 | 2 | 3 | 4;
                            value?: string;
                            isEnabled?: boolean;
                        }[];
                        delivery?: {
                            id: number;
                            scenario?: 0 | 1 | 2 | 3;
                            value?: string;
                            isEnabled?: boolean;
                        }[];
                        project?: {
                            id: number;
                            mode: 1 | 2 | 3 | 4;
                            value?: string;
                            isInternal: boolean;
                            activityType?: "workUnit" | "day";
                            scheduleProductionTurnover: boolean;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        subscription?: {
                            id: 0 | 1 | 2 | 3 | 4;
                            value?: string;
                            isEnabled?: boolean;
                        }[];
                        employee?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        workingTime?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        additionalTurnover?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                    };
                    contractEndReason?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    currency?: {
                        id: number;
                        value?: string;
                        "symbol"?: string;
                        iso?: "EUR" | "USD" | "GBP" | "AFN" | "ALL" | "DZD" | "AOA" | "XCD" | "ARS" | "AMD" | "AWG" | "AZN" | "BSD" | "BHD" | "BDT" | "BBD" | "BYN" | "BZD" | "XOF" | "BMD" | "INR" | "BTN" | "BOB" | "BAM" | "BWP" | "NOK" | "BRL" | "BND" | "BGN" | "BIF" | "CVE" | "KHR" | "CAD" | "KYD" | "CLP" | "CLF" | "CNY" | "COP" | "KMF" | "CDF" | "NZD" | "CRC" | "HRK" | "CUP" | "ANG" | "CZK" | "DKK" | "DJF" | "DOP" | "EGP" | "SVC" | "ERN" | "SZL" | "ETB" | "FKP" | "FJD" | "XPF" | "GMD" | "GEL" | "GHS" | "GIP" | "GTQ" | "GNF" | "GYD" | "HTG" | "HNL" | "HKD" | "HUF" | "ISK" | "IDR" | "IRR" | "IQD" | "ILS" | "JMD" | "JPY" | "JOD" | "KZT" | "KES" | "KPW" | "KRW" | "KWD" | "KGS" | "LAK" | "LBP" | "LSL" | "ZAR" | "LRD" | "LYD" | "CHF" | "MOP" | "MKD" | "MGA" | "MWK" | "MYR" | "MVR" | "MRU" | "MUR" | "MXN" | "MDL" | "MNT" | "MAD" | "MZN" | "MMK" | "NAD" | "NPR" | "NIO" | "NGN" | "AUD" | "OMR" | "PKR" | "PAB" | "PGK" | "PYG" | "PEN" | "PHP" | "PLN" | "QAR" | "RON" | "RUB" | "RWF" | "SHP" | "WST" | "STN" | "SAR" | "RSD" | "SCR" | "SLL" | "SGD" | "XSU" | "SBD" | "SOS" | "SSP" | "LKR" | "SDG" | "SRD" | "SEK" | "SYP" | "TWD" | "TJS" | "TZS" | "THB" | "TOP" | "TTD" | "TND" | "TRY" | "TMT" | "UGX" | "UAH" | "AED" | "UYU" | "UZS" | "VUV" | "VES" | "VND" | "YER" | "ZMW" | "ZWL";
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    calendar?: {
                        id: string;
                        value?: string;
                        iso?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    taxRate?: {
                        id: number;
                        rate: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    paymentTerm?: {
                        id: number;
                        value: 0 | 1 | 2 | 3 | 4;
                        x?: number;
                        y?: number;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    paymentMethod?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    sendingMode?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    defaultOpportunityTypeCreated?: number;
                    defaultPositioningSearchModule?: "resources" | "candidates";
                    filterPositioningSearchModule?: boolean;
                    smoothAdditionalData?: boolean;
                    profitabilityMethodOfCalculating?: "marginRate" | "brandRate";
                    showOwnOrderReference?: boolean;
                    defaultMail?: {
                        quotation?: {
                            "object": string;
                            body: string;
                        };
                        invoice?: {
                            "object": string;
                            body: string;
                        };
                        deliveryOrder?: {
                            "object": string;
                            body: string;
                        };
                        timesReports?: {
                            "object": string;
                            body: string;
                        };
                        expensesReports?: {
                            "object": string;
                            body: string;
                        };
                        timesReportsAndExpensesReports?: {
                            "object": string;
                            body: string;
                        };
                        waitingForValidationTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        waitingForValidationExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        waitingForValidationAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        validatedTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        validatedExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        validatedAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        rejectedTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        rejectedExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        rejectedAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        refusedTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        refusedExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        refusedAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        removalAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        signatureDocumentRequest?: {
                            "object": string;
                            body: string;
                        };
                        signatureDocumentReminder?: {
                            "object": string;
                            body: string;
                        };
                        signatureDocumentValidation?: {
                            "object": string;
                            body: string;
                        };
                    };
                    showLogoCompany?: boolean;
                    markdownTextDashboard?: string;
                    experience?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    training?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    tool?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    defaultAction?: {
                        pushResource?: string;
                        pushCandidate?: string;
                        pushContact?: string;
                    };
                    activityArea?: {
                        id: string;
                        value?: string;
                        option?: {
                            id: string;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    expertiseArea?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    duration?: {
                        id: number | number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    languageSpoken?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    languageLevel?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    availability?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    evaluation?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    mobilityArea?: {
                        id: string;
                        value?: string;
                        option?: {
                            id: string;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    origin?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    classification?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    source?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    criteria?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    situation?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    civility?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    defaultNationality?: string;
                    itemInvoice?: {
                        monthly?: {
                            id: "1" | 13 | 14 | "2" | 23 | 24 | "3" | "4";
                            value: string;
                            isEnabled?: boolean;
                        }[];
                        schedule?: {
                            id: "1" | "2" | "3" | "4";
                            value: string;
                            isEnabled?: boolean;
                        }[];
                    };
                    deliveryOrder?: {
                        id: number;
                        value?: string;
                        maskSignatureBlock: boolean;
                        insert?: {
                            value?: string;
                            optionLength?: number;
                            option?: string[];
                        }[];
                        isEnabled?: boolean;
                    }[];
                    sharingEntity?: {
                        credentials?: {
                            "object": string;
                            body: string;
                        };
                        account?: {
                            "object": string;
                            body: string;
                        };
                        resource?: {
                            "object": string;
                            body: string;
                        };
                        opportunity?: {
                            "object": string;
                            body: string;
                        };
                        candidate?: {
                            "object": string;
                            body: string;
                        };
                        contact?: {
                            "object": string;
                            body: string;
                        };
                        company?: {
                            "object": string;
                            body: string;
                        };
                        project?: {
                            "object": string;
                            body: string;
                        };
                        product?: {
                            "object": string;
                            body: string;
                        };
                        purchase?: {
                            "object": string;
                            body: string;
                        };
                        payment?: {
                            "object": string;
                            body: string;
                        };
                        positioning?: {
                            "object": string;
                            body: string;
                        };
                        delivery?: {
                            "object": string;
                            body: string;
                        };
                        groupment?: {
                            "object": string;
                            body: string;
                        };
                        inactivity?: {
                            "object": string;
                            body: string;
                        };
                        contract?: {
                            "object": string;
                            body: string;
                        };
                        advantage?: {
                            "object": string;
                            body: string;
                        };
                        invoice?: {
                            "object": string;
                            body: string;
                        };
                        order?: {
                            "object": string;
                            body: string;
                        };
                        timesheet?: {
                            "object": string;
                            body: string;
                        };
                        expenses?: {
                            "object": string;
                            body: string;
                        };
                        absencesRequest?: {
                            "object": string;
                            body: string;
                        };
                        action?: {
                            "object": string;
                            body: string;
                        };
                        quotation?: {
                            "object"?: string;
                            body?: string;
                            [key: string]: any;
                        };
                    };
                };
                country?: {
                    id: string;
                    iso?: string;
                    value?: string;
                    [key: string]: any;
                }[];
                nationality?: {
                    id: string;
                    value?: string;
                    [key: string]: any;
                }[];
                lastBackupDate?: string;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/backup-dictionary", {
        ...opts,
        method: "POST"
    });
}
export function deleteApplicationBackupDictionary(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/backup-dictionary", {
        ...opts,
        method: "DELETE"
    });
}
export function putApplicationBackupDictionary(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/backup-dictionary", {
        ...opts,
        method: "PUT"
    });
}
export function getApplicationBackupDictionary(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/backup-dictionary", {
        ...opts
    });
}
/**
 * Restore the last specific translations backup
 */
export function putApplicationRestoreDictionary(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/restore-dictionary", {
        ...opts,
        method: "PUT"
    });
}
export function deleteApplicationRestoreDictionary(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/restore-dictionary", {
        ...opts,
        method: "DELETE"
    });
}
export function postApplicationRestoreDictionary(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/restore-dictionary", {
        ...opts,
        method: "POST"
    });
}
export function getApplicationRestoreDictionary(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/restore-dictionary", {
        ...opts
    });
}
/**
 * Create a dabatase dump
 */
export function postApplicationDumpDatabase(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/dump-database", {
        ...opts,
        method: "POST"
    });
}
export function getApplicationDumpDatabase(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: Blob;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/dump-database", {
        ...opts
    });
}
export function deleteApplicationDumpDatabase(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/dump-database", {
        ...opts,
        method: "DELETE"
    });
}
export function putApplicationDumpDatabase(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/dump-database", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get the list of flags availables for searching or updating
 */
export function getApplicationFlags(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "flag";
                attributes?: {
                    name?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            }[];
            included?: {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/flags", {
        ...opts
    });
}
export function deleteApplicationFlags(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/flags", {
        ...opts,
        method: "DELETE"
    });
}
export function postApplicationFlags(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/flags", {
        ...opts,
        method: "POST"
    });
}
export function putApplicationFlags(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/flags", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get the list of perimeters availables for searching
 */
export function getApplicationPerimeters(body?: string, { module }: {
    "module"?: "actions" | "resources" | "candidates" | "products" | "opportunities" | "positionings" | "crm" | "projects" | "purchases" | "activityExpenses" | "billing" | "flags" | "reportingProductionPlans" | "reportingSynthesis" | "reportingResources" | "reportingCompanies" | "reportingProjects" | "companies" | "contacts" | "apps" | "logs" | "downloadCenter" | "appExtractPayroll" | "appAccountingPayroll" | "appExceptionalActivity" | "appSepa" | "appSpecialReporting" | "appSurvey";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "perimeters";
                attributes?: {
                    required?: boolean;
                };
                relationships?: {
                    agencies?: {
                        [key: string]: any;
                    };
                    businessUnits?: {
                        [key: string]: any;
                    };
                    poles?: {
                        [key: string]: any;
                    };
                    managers?: {
                        [key: string]: any;
                    };
                };
            };
            included?: ({
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    state?: boolean;
                };
            } | {
                id: string;
                "type": "businessunit";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                    state?: boolean;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/application/perimeters${QS.query(QS.explode({
        module
    }))}`, {
        ...opts,
        body
    });
}
export function deleteApplicationPerimeters(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/perimeters", {
        ...opts,
        method: "DELETE"
    });
}
export function postApplicationPerimeters(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/perimeters", {
        ...opts,
        method: "POST"
    });
}
export function putApplicationPerimeters(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/perimeters", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Read database thanks to a MySQL query
 */
export function postApplicationReadDatabase(body?: {
    query: string;
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                header?: string;
                value?: any;
            }[][];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/read-database", oazapfts.form({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteApplicationReadDatabase(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/read-database", {
        ...opts,
        method: "DELETE"
    });
}
export function putApplicationReadDatabase(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/read-database", {
        ...opts,
        method: "PUT"
    });
}
export function getApplicationReadDatabase(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/read-database", {
        ...opts
    });
}
/**
 * Get the specific settings
 */
export function getApplicationSettings(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                setting?: {
                    action?: {
                        forceMultiCreation?: boolean;
                        sort?: boolean;
                        contact?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        candidate?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        resource?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        opportunity?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        project?: {
                            id: number;
                            value?: string;
                            collaborative?: boolean;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        order?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        invoice?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                    };
                    state?: {
                        sort?: boolean;
                        candidate?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        resource?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        product?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        opportunity?: {
                            id: number;
                            value?: string;
                            active: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        positioning?: {
                            id: number;
                            value?: string;
                            active: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        project?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        delivery?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        contact?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        company?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        order?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        invoice?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        purchase?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        payment?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        quotation?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                    };
                    displayedColumns?: {
                        opportunity?: ("creationDate" | "title" | "contact" | "state" | "numberOfActivePositionings" | "place" | "startDate" | "duration" | "turnoverWeightedExcludingTax" | "mainManager" | "closingDate" | "answerDate" | "activityAreas" | "expertiseArea" | "tools" | "dueDate" | "origin" | "hrManager" | "pole" | "agency" | "turnoverEstimatedExcludingTax" | "estimatesExcludingTax")[];
                    };
                    cache?: {
                        reporting?: {
                            state?: boolean;
                            duration?: number;
                        };
                    };
                    additionalTurnoverTypes?: {
                        state?: boolean;
                    };
                    timezone?: "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Fort_Nelson" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Colombo" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kathmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qyzylorda" | "Asia/Riyadh" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ulaanbaatar" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faroe" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/Perth" | "Australia/Sydney" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Wake" | "Pacific/Wallis" | "UTC";
                    typeOf?: {
                        contract?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        purchase?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        resource?: {
                            id: number;
                            value?: string;
                            isExternal?: boolean;
                            isStructure?: boolean;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        activity?: {
                            id: 0 | 1 | 2 | 3 | 4;
                            value?: string;
                            isEnabled?: boolean;
                        }[];
                        delivery?: {
                            id: number;
                            scenario?: 0 | 1 | 2 | 3;
                            value?: string;
                            isEnabled?: boolean;
                        }[];
                        project?: {
                            id: number;
                            mode: 1 | 2 | 3 | 4;
                            value?: string;
                            isInternal: boolean;
                            activityType?: "workUnit" | "day";
                            scheduleProductionTurnover: boolean;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        subscription?: {
                            id: 0 | 1 | 2 | 3 | 4;
                            value?: string;
                            isEnabled?: boolean;
                        }[];
                        employee?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        workingTime?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        additionalTurnover?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                    };
                    contractEndReason?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    currency?: {
                        id: number;
                        value?: string;
                        "symbol"?: string;
                        iso?: "EUR" | "USD" | "GBP" | "AFN" | "ALL" | "DZD" | "AOA" | "XCD" | "ARS" | "AMD" | "AWG" | "AZN" | "BSD" | "BHD" | "BDT" | "BBD" | "BYN" | "BZD" | "XOF" | "BMD" | "INR" | "BTN" | "BOB" | "BAM" | "BWP" | "NOK" | "BRL" | "BND" | "BGN" | "BIF" | "CVE" | "KHR" | "CAD" | "KYD" | "CLP" | "CLF" | "CNY" | "COP" | "KMF" | "CDF" | "NZD" | "CRC" | "HRK" | "CUP" | "ANG" | "CZK" | "DKK" | "DJF" | "DOP" | "EGP" | "SVC" | "ERN" | "SZL" | "ETB" | "FKP" | "FJD" | "XPF" | "GMD" | "GEL" | "GHS" | "GIP" | "GTQ" | "GNF" | "GYD" | "HTG" | "HNL" | "HKD" | "HUF" | "ISK" | "IDR" | "IRR" | "IQD" | "ILS" | "JMD" | "JPY" | "JOD" | "KZT" | "KES" | "KPW" | "KRW" | "KWD" | "KGS" | "LAK" | "LBP" | "LSL" | "ZAR" | "LRD" | "LYD" | "CHF" | "MOP" | "MKD" | "MGA" | "MWK" | "MYR" | "MVR" | "MRU" | "MUR" | "MXN" | "MDL" | "MNT" | "MAD" | "MZN" | "MMK" | "NAD" | "NPR" | "NIO" | "NGN" | "AUD" | "OMR" | "PKR" | "PAB" | "PGK" | "PYG" | "PEN" | "PHP" | "PLN" | "QAR" | "RON" | "RUB" | "RWF" | "SHP" | "WST" | "STN" | "SAR" | "RSD" | "SCR" | "SLL" | "SGD" | "XSU" | "SBD" | "SOS" | "SSP" | "LKR" | "SDG" | "SRD" | "SEK" | "SYP" | "TWD" | "TJS" | "TZS" | "THB" | "TOP" | "TTD" | "TND" | "TRY" | "TMT" | "UGX" | "UAH" | "AED" | "UYU" | "UZS" | "VUV" | "VES" | "VND" | "YER" | "ZMW" | "ZWL";
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    calendar?: {
                        id: string;
                        value?: string;
                        iso?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    taxRate?: {
                        id: number;
                        rate: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    paymentTerm?: {
                        id: number;
                        value: 0 | 1 | 2 | 3 | 4;
                        x?: number;
                        y?: number;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    paymentMethod?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    sendingMode?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    defaultOpportunityTypeCreated?: number;
                    defaultPositioningSearchModule?: "resources" | "candidates";
                    filterPositioningSearchModule?: boolean;
                    smoothAdditionalData?: boolean;
                    profitabilityMethodOfCalculating?: "marginRate" | "brandRate";
                    showOwnOrderReference?: boolean;
                    defaultMail?: {
                        quotation?: {
                            "object": string;
                            body: string;
                        };
                        invoice?: {
                            "object": string;
                            body: string;
                        };
                        deliveryOrder?: {
                            "object": string;
                            body: string;
                        };
                        timesReports?: {
                            "object": string;
                            body: string;
                        };
                        expensesReports?: {
                            "object": string;
                            body: string;
                        };
                        timesReportsAndExpensesReports?: {
                            "object": string;
                            body: string;
                        };
                        waitingForValidationTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        waitingForValidationExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        waitingForValidationAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        validatedTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        validatedExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        validatedAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        rejectedTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        rejectedExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        rejectedAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        refusedTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        refusedExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        refusedAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        removalAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        signatureDocumentRequest?: {
                            "object": string;
                            body: string;
                        };
                        signatureDocumentReminder?: {
                            "object": string;
                            body: string;
                        };
                        signatureDocumentValidation?: {
                            "object": string;
                            body: string;
                        };
                    };
                    showLogoCompany?: boolean;
                    markdownTextDashboard?: string;
                    experience?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    training?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    tool?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    defaultAction?: {
                        pushResource?: string;
                        pushCandidate?: string;
                        pushContact?: string;
                    };
                    activityArea?: {
                        id: string;
                        value?: string;
                        option?: {
                            id: string;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    expertiseArea?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    duration?: {
                        id: number | number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    languageSpoken?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    languageLevel?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    availability?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    evaluation?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    mobilityArea?: {
                        id: string;
                        value?: string;
                        option?: {
                            id: string;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    origin?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    classification?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    source?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    criteria?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    situation?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    civility?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    defaultNationality?: string;
                    itemInvoice?: {
                        monthly?: {
                            id: "1" | 13 | 14 | "2" | 23 | 24 | "3" | "4";
                            value: string;
                            isEnabled?: boolean;
                        }[];
                        schedule?: {
                            id: "1" | "2" | "3" | "4";
                            value: string;
                            isEnabled?: boolean;
                        }[];
                    };
                    deliveryOrder?: {
                        id: number;
                        value?: string;
                        maskSignatureBlock: boolean;
                        insert?: {
                            value?: string;
                            optionLength?: number;
                            option?: string[];
                        }[];
                        isEnabled?: boolean;
                    }[];
                    sharingEntity?: {
                        credentials?: {
                            "object": string;
                            body: string;
                        };
                        account?: {
                            "object": string;
                            body: string;
                        };
                        resource?: {
                            "object": string;
                            body: string;
                        };
                        opportunity?: {
                            "object": string;
                            body: string;
                        };
                        candidate?: {
                            "object": string;
                            body: string;
                        };
                        contact?: {
                            "object": string;
                            body: string;
                        };
                        company?: {
                            "object": string;
                            body: string;
                        };
                        project?: {
                            "object": string;
                            body: string;
                        };
                        product?: {
                            "object": string;
                            body: string;
                        };
                        purchase?: {
                            "object": string;
                            body: string;
                        };
                        payment?: {
                            "object": string;
                            body: string;
                        };
                        positioning?: {
                            "object": string;
                            body: string;
                        };
                        delivery?: {
                            "object": string;
                            body: string;
                        };
                        groupment?: {
                            "object": string;
                            body: string;
                        };
                        inactivity?: {
                            "object": string;
                            body: string;
                        };
                        contract?: {
                            "object": string;
                            body: string;
                        };
                        advantage?: {
                            "object": string;
                            body: string;
                        };
                        invoice?: {
                            "object": string;
                            body: string;
                        };
                        order?: {
                            "object": string;
                            body: string;
                        };
                        timesheet?: {
                            "object": string;
                            body: string;
                        };
                        expenses?: {
                            "object": string;
                            body: string;
                        };
                        absencesRequest?: {
                            "object": string;
                            body: string;
                        };
                        action?: {
                            "object": string;
                            body: string;
                        };
                        quotation?: {
                            "object"?: string;
                            body?: string;
                            [key: string]: any;
                        };
                    };
                };
                country?: {
                    id: string;
                    iso?: string;
                    value?: string;
                    [key: string]: any;
                }[];
                nationality?: {
                    id: string;
                    value?: string;
                    [key: string]: any;
                }[];
                dashboard?: {
                    fiscalYearTerm?: string;
                    recruitmentsFunnelInterviewActions?: number[];
                    salesFunnelMeetingActions?: number[];
                };
                lastBackupDate?: string;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/settings", {
        ...opts
    });
}
/**
 * Update the specific settings
 */
export function putApplicationSettings(body?: {
    data?: {
        setting?: {
            action?: {
                forceMultiCreation?: boolean;
                sort?: boolean;
                contact?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                candidate?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                resource?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                opportunity?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                project?: {
                    id: number;
                    value?: string;
                    collaborative?: boolean;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                order?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                invoice?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
            };
            state?: {
                sort?: boolean;
                candidate?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                resource?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                product?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                opportunity?: {
                    id: number;
                    value?: string;
                    active: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                positioning?: {
                    id: number;
                    value?: string;
                    active: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                project?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                delivery?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                contact?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                company?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                order?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                invoice?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                purchase?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                payment?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                quotation?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
            };
            displayedColumns?: {
                opportunity?: ("creationDate" | "title" | "contact" | "state" | "numberOfActivePositionings" | "place" | "startDate" | "duration" | "turnoverWeightedExcludingTax" | "mainManager" | "closingDate" | "answerDate" | "activityAreas" | "expertiseArea" | "tools" | "dueDate" | "origin" | "hrManager" | "pole" | "agency" | "turnoverEstimatedExcludingTax" | "estimatesExcludingTax")[];
            };
            cache?: {
                reporting?: {
                    state?: boolean;
                    duration?: number;
                };
            };
            additionalTurnoverTypes?: {
                state?: boolean;
            };
            timezone?: "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Fort_Nelson" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Colombo" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kathmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qyzylorda" | "Asia/Riyadh" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ulaanbaatar" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faroe" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/Perth" | "Australia/Sydney" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Wake" | "Pacific/Wallis" | "UTC";
            typeOf?: {
                contract?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                purchase?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                resource?: {
                    id: number;
                    value?: string;
                    isExternal?: boolean;
                    isStructure?: boolean;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                activity?: {
                    id: 0 | 1 | 2 | 3 | 4;
                    value?: string;
                    isEnabled?: boolean;
                }[];
                delivery?: {
                    id: number;
                    scenario?: 0 | 1 | 2 | 3;
                    value?: string;
                    isEnabled?: boolean;
                }[];
                project?: {
                    id: number;
                    mode: 1 | 2 | 3 | 4;
                    value?: string;
                    isInternal: boolean;
                    activityType?: "workUnit" | "day";
                    scheduleProductionTurnover: boolean;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                subscription?: {
                    id: 0 | 1 | 2 | 3 | 4;
                    value?: string;
                    isEnabled?: boolean;
                }[];
                employee?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                workingTime?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                additionalTurnover?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
            };
            contractEndReason?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            currency?: {
                id: number;
                value?: string;
                "symbol"?: string;
                iso?: "EUR" | "USD" | "GBP" | "AFN" | "ALL" | "DZD" | "AOA" | "XCD" | "ARS" | "AMD" | "AWG" | "AZN" | "BSD" | "BHD" | "BDT" | "BBD" | "BYN" | "BZD" | "XOF" | "BMD" | "INR" | "BTN" | "BOB" | "BAM" | "BWP" | "NOK" | "BRL" | "BND" | "BGN" | "BIF" | "CVE" | "KHR" | "CAD" | "KYD" | "CLP" | "CLF" | "CNY" | "COP" | "KMF" | "CDF" | "NZD" | "CRC" | "HRK" | "CUP" | "ANG" | "CZK" | "DKK" | "DJF" | "DOP" | "EGP" | "SVC" | "ERN" | "SZL" | "ETB" | "FKP" | "FJD" | "XPF" | "GMD" | "GEL" | "GHS" | "GIP" | "GTQ" | "GNF" | "GYD" | "HTG" | "HNL" | "HKD" | "HUF" | "ISK" | "IDR" | "IRR" | "IQD" | "ILS" | "JMD" | "JPY" | "JOD" | "KZT" | "KES" | "KPW" | "KRW" | "KWD" | "KGS" | "LAK" | "LBP" | "LSL" | "ZAR" | "LRD" | "LYD" | "CHF" | "MOP" | "MKD" | "MGA" | "MWK" | "MYR" | "MVR" | "MRU" | "MUR" | "MXN" | "MDL" | "MNT" | "MAD" | "MZN" | "MMK" | "NAD" | "NPR" | "NIO" | "NGN" | "AUD" | "OMR" | "PKR" | "PAB" | "PGK" | "PYG" | "PEN" | "PHP" | "PLN" | "QAR" | "RON" | "RUB" | "RWF" | "SHP" | "WST" | "STN" | "SAR" | "RSD" | "SCR" | "SLL" | "SGD" | "XSU" | "SBD" | "SOS" | "SSP" | "LKR" | "SDG" | "SRD" | "SEK" | "SYP" | "TWD" | "TJS" | "TZS" | "THB" | "TOP" | "TTD" | "TND" | "TRY" | "TMT" | "UGX" | "UAH" | "AED" | "UYU" | "UZS" | "VUV" | "VES" | "VND" | "YER" | "ZMW" | "ZWL";
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            calendar?: {
                id: string;
                value?: string;
                iso?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            taxRate?: {
                id: number;
                rate: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            paymentTerm?: {
                id: number;
                value: 0 | 1 | 2 | 3 | 4;
                x?: number;
                y?: number;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            paymentMethod?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            sendingMode?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            defaultOpportunityTypeCreated?: number;
            defaultPositioningSearchModule?: "resources" | "candidates";
            filterPositioningSearchModule?: boolean;
            smoothAdditionalData?: boolean;
            profitabilityMethodOfCalculating?: "marginRate" | "brandRate";
            showOwnOrderReference?: boolean;
            defaultMail?: {
                quotation?: {
                    "object": string;
                    body: string;
                };
                invoice?: {
                    "object": string;
                    body: string;
                };
                deliveryOrder?: {
                    "object": string;
                    body: string;
                };
                timesReports?: {
                    "object": string;
                    body: string;
                };
                expensesReports?: {
                    "object": string;
                    body: string;
                };
                timesReportsAndExpensesReports?: {
                    "object": string;
                    body: string;
                };
                waitingForValidationTimesReport?: {
                    "object": string;
                    body: string;
                };
                waitingForValidationExpensesReport?: {
                    "object": string;
                    body: string;
                };
                waitingForValidationAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                validatedTimesReport?: {
                    "object": string;
                    body: string;
                };
                validatedExpensesReport?: {
                    "object": string;
                    body: string;
                };
                validatedAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                rejectedTimesReport?: {
                    "object": string;
                    body: string;
                };
                rejectedExpensesReport?: {
                    "object": string;
                    body: string;
                };
                rejectedAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                refusedTimesReport?: {
                    "object": string;
                    body: string;
                };
                refusedExpensesReport?: {
                    "object": string;
                    body: string;
                };
                refusedAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                removalAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                signatureDocumentRequest?: {
                    "object": string;
                    body: string;
                };
                signatureDocumentReminder?: {
                    "object": string;
                    body: string;
                };
                signatureDocumentValidation?: {
                    "object": string;
                    body: string;
                };
            };
            showLogoCompany?: boolean;
            markdownTextDashboard?: string;
            experience?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            training?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            tool?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            defaultAction?: {
                pushResource?: string;
                pushCandidate?: string;
                pushContact?: string;
            };
            activityArea?: {
                id: string;
                value?: string;
                option?: {
                    id: string;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            expertiseArea?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            duration?: {
                id: number | number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            languageSpoken?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            languageLevel?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            availability?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            evaluation?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            mobilityArea?: {
                id: string;
                value?: string;
                option?: {
                    id: string;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            origin?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            classification?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            source?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            criteria?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            situation?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            civility?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            defaultNationality?: string;
            itemInvoice?: {
                monthly?: {
                    id: "1" | 13 | 14 | "2" | 23 | 24 | "3" | "4";
                    value: string;
                    isEnabled?: boolean;
                }[];
                schedule?: {
                    id: "1" | "2" | "3" | "4";
                    value: string;
                    isEnabled?: boolean;
                }[];
            };
            deliveryOrder?: {
                id: number;
                value?: string;
                maskSignatureBlock: boolean;
                insert?: {
                    value?: string;
                    optionLength?: number;
                    option?: string[];
                }[];
                isEnabled?: boolean;
            }[];
            sharingEntity?: {
                credentials?: {
                    "object": string;
                    body: string;
                };
                account?: {
                    "object": string;
                    body: string;
                };
                resource?: {
                    "object": string;
                    body: string;
                };
                opportunity?: {
                    "object": string;
                    body: string;
                };
                candidate?: {
                    "object": string;
                    body: string;
                };
                contact?: {
                    "object": string;
                    body: string;
                };
                company?: {
                    "object": string;
                    body: string;
                };
                project?: {
                    "object": string;
                    body: string;
                };
                product?: {
                    "object": string;
                    body: string;
                };
                purchase?: {
                    "object": string;
                    body: string;
                };
                payment?: {
                    "object": string;
                    body: string;
                };
                positioning?: {
                    "object": string;
                    body: string;
                };
                delivery?: {
                    "object": string;
                    body: string;
                };
                groupment?: {
                    "object": string;
                    body: string;
                };
                inactivity?: {
                    "object": string;
                    body: string;
                };
                contract?: {
                    "object": string;
                    body: string;
                };
                advantage?: {
                    "object": string;
                    body: string;
                };
                invoice?: {
                    "object": string;
                    body: string;
                };
                order?: {
                    "object": string;
                    body: string;
                };
                timesheet?: {
                    "object": string;
                    body: string;
                };
                expenses?: {
                    "object": string;
                    body: string;
                };
                absencesRequest?: {
                    "object": string;
                    body: string;
                };
                action?: {
                    "object": string;
                    body: string;
                };
                quotation?: {
                    "object"?: string;
                    body?: string;
                    [key: string]: any;
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                setting?: {
                    action?: {
                        forceMultiCreation?: boolean;
                        sort?: boolean;
                        contact?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        candidate?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        resource?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        opportunity?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        project?: {
                            id: number;
                            value?: string;
                            collaborative?: boolean;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        order?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        invoice?: {
                            id: number;
                            value?: string;
                            isNotification?: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                    };
                    state?: {
                        sort?: boolean;
                        candidate?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        resource?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        product?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        opportunity?: {
                            id: number;
                            value?: string;
                            active: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        positioning?: {
                            id: number;
                            value?: string;
                            active: boolean;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        project?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        delivery?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        contact?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        company?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        order?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        invoice?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        purchase?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        payment?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        quotation?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                    };
                    displayedColumns?: {
                        opportunity?: ("creationDate" | "title" | "contact" | "state" | "numberOfActivePositionings" | "place" | "startDate" | "duration" | "turnoverWeightedExcludingTax" | "mainManager" | "closingDate" | "answerDate" | "activityAreas" | "expertiseArea" | "tools" | "dueDate" | "origin" | "hrManager" | "pole" | "agency" | "turnoverEstimatedExcludingTax" | "estimatesExcludingTax")[];
                    };
                    cache?: {
                        reporting?: {
                            state?: boolean;
                            duration?: number;
                        };
                    };
                    additionalTurnoverTypes?: {
                        state?: boolean;
                    };
                    timezone?: "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Fort_Nelson" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Colombo" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kathmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qyzylorda" | "Asia/Riyadh" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ulaanbaatar" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faroe" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/Perth" | "Australia/Sydney" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Wake" | "Pacific/Wallis" | "UTC";
                    typeOf?: {
                        contract?: {
                            id: number;
                            value?: string;
                            isEnabled?: boolean;
                            "delete"?: boolean;
                        }[];
                        purchase?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        resource?: {
                            id: number;
                            value?: string;
                            isExternal?: boolean;
                            isStructure?: boolean;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        activity?: {
                            id: 0 | 1 | 2 | 3 | 4;
                            value?: string;
                            isEnabled?: boolean;
                        }[];
                        delivery?: {
                            id: number;
                            scenario?: 0 | 1 | 2 | 3;
                            value?: string;
                            isEnabled?: boolean;
                        }[];
                        project?: {
                            id: number;
                            mode: 1 | 2 | 3 | 4;
                            value?: string;
                            isInternal: boolean;
                            activityType?: "workUnit" | "day";
                            scheduleProductionTurnover: boolean;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        subscription?: {
                            id: 0 | 1 | 2 | 3 | 4;
                            value?: string;
                            isEnabled?: boolean;
                        }[];
                        employee?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        workingTime?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        additionalTurnover?: {
                            id: number;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                    };
                    contractEndReason?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    currency?: {
                        id: number;
                        value?: string;
                        "symbol"?: string;
                        iso?: "EUR" | "USD" | "GBP" | "AFN" | "ALL" | "DZD" | "AOA" | "XCD" | "ARS" | "AMD" | "AWG" | "AZN" | "BSD" | "BHD" | "BDT" | "BBD" | "BYN" | "BZD" | "XOF" | "BMD" | "INR" | "BTN" | "BOB" | "BAM" | "BWP" | "NOK" | "BRL" | "BND" | "BGN" | "BIF" | "CVE" | "KHR" | "CAD" | "KYD" | "CLP" | "CLF" | "CNY" | "COP" | "KMF" | "CDF" | "NZD" | "CRC" | "HRK" | "CUP" | "ANG" | "CZK" | "DKK" | "DJF" | "DOP" | "EGP" | "SVC" | "ERN" | "SZL" | "ETB" | "FKP" | "FJD" | "XPF" | "GMD" | "GEL" | "GHS" | "GIP" | "GTQ" | "GNF" | "GYD" | "HTG" | "HNL" | "HKD" | "HUF" | "ISK" | "IDR" | "IRR" | "IQD" | "ILS" | "JMD" | "JPY" | "JOD" | "KZT" | "KES" | "KPW" | "KRW" | "KWD" | "KGS" | "LAK" | "LBP" | "LSL" | "ZAR" | "LRD" | "LYD" | "CHF" | "MOP" | "MKD" | "MGA" | "MWK" | "MYR" | "MVR" | "MRU" | "MUR" | "MXN" | "MDL" | "MNT" | "MAD" | "MZN" | "MMK" | "NAD" | "NPR" | "NIO" | "NGN" | "AUD" | "OMR" | "PKR" | "PAB" | "PGK" | "PYG" | "PEN" | "PHP" | "PLN" | "QAR" | "RON" | "RUB" | "RWF" | "SHP" | "WST" | "STN" | "SAR" | "RSD" | "SCR" | "SLL" | "SGD" | "XSU" | "SBD" | "SOS" | "SSP" | "LKR" | "SDG" | "SRD" | "SEK" | "SYP" | "TWD" | "TJS" | "TZS" | "THB" | "TOP" | "TTD" | "TND" | "TRY" | "TMT" | "UGX" | "UAH" | "AED" | "UYU" | "UZS" | "VUV" | "VES" | "VND" | "YER" | "ZMW" | "ZWL";
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    calendar?: {
                        id: string;
                        value?: string;
                        iso?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    taxRate?: {
                        id: number;
                        rate: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    paymentTerm?: {
                        id: number;
                        value: 0 | 1 | 2 | 3 | 4;
                        x?: number;
                        y?: number;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    paymentMethod?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    sendingMode?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    defaultOpportunityTypeCreated?: number;
                    defaultPositioningSearchModule?: "resources" | "candidates";
                    filterPositioningSearchModule?: boolean;
                    smoothAdditionalData?: boolean;
                    profitabilityMethodOfCalculating?: "marginRate" | "brandRate";
                    showOwnOrderReference?: boolean;
                    defaultMail?: {
                        quotation?: {
                            "object": string;
                            body: string;
                        };
                        invoice?: {
                            "object": string;
                            body: string;
                        };
                        deliveryOrder?: {
                            "object": string;
                            body: string;
                        };
                        timesReports?: {
                            "object": string;
                            body: string;
                        };
                        expensesReports?: {
                            "object": string;
                            body: string;
                        };
                        timesReportsAndExpensesReports?: {
                            "object": string;
                            body: string;
                        };
                        waitingForValidationTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        waitingForValidationExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        waitingForValidationAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        validatedTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        validatedExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        validatedAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        rejectedTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        rejectedExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        rejectedAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        refusedTimesReport?: {
                            "object": string;
                            body: string;
                        };
                        refusedExpensesReport?: {
                            "object": string;
                            body: string;
                        };
                        refusedAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        removalAbsencesReport?: {
                            "object": string;
                            body: string;
                        };
                        signatureDocumentRequest?: {
                            "object": string;
                            body: string;
                        };
                        signatureDocumentReminder?: {
                            "object": string;
                            body: string;
                        };
                        signatureDocumentValidation?: {
                            "object": string;
                            body: string;
                        };
                    };
                    showLogoCompany?: boolean;
                    markdownTextDashboard?: string;
                    experience?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    training?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    tool?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    defaultAction?: {
                        pushResource?: string;
                        pushCandidate?: string;
                        pushContact?: string;
                    };
                    activityArea?: {
                        id: string;
                        value?: string;
                        option?: {
                            id: string;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    expertiseArea?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    duration?: {
                        id: number | number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    languageSpoken?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    languageLevel?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    availability?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    evaluation?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    mobilityArea?: {
                        id: string;
                        value?: string;
                        option?: {
                            id: string;
                            value?: string;
                            "delete"?: boolean;
                            isEnabled?: boolean;
                        }[];
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    origin?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    classification?: {
                        id: string;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    source?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    criteria?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    situation?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    civility?: {
                        id: number;
                        value?: string;
                        "delete"?: boolean;
                        isEnabled?: boolean;
                    }[];
                    defaultNationality?: string;
                    itemInvoice?: {
                        monthly?: {
                            id: "1" | 13 | 14 | "2" | 23 | 24 | "3" | "4";
                            value: string;
                            isEnabled?: boolean;
                        }[];
                        schedule?: {
                            id: "1" | "2" | "3" | "4";
                            value: string;
                            isEnabled?: boolean;
                        }[];
                    };
                    deliveryOrder?: {
                        id: number;
                        value?: string;
                        maskSignatureBlock: boolean;
                        insert?: {
                            value?: string;
                            optionLength?: number;
                            option?: string[];
                        }[];
                        isEnabled?: boolean;
                    }[];
                    sharingEntity?: {
                        credentials?: {
                            "object": string;
                            body: string;
                        };
                        account?: {
                            "object": string;
                            body: string;
                        };
                        resource?: {
                            "object": string;
                            body: string;
                        };
                        opportunity?: {
                            "object": string;
                            body: string;
                        };
                        candidate?: {
                            "object": string;
                            body: string;
                        };
                        contact?: {
                            "object": string;
                            body: string;
                        };
                        company?: {
                            "object": string;
                            body: string;
                        };
                        project?: {
                            "object": string;
                            body: string;
                        };
                        product?: {
                            "object": string;
                            body: string;
                        };
                        purchase?: {
                            "object": string;
                            body: string;
                        };
                        payment?: {
                            "object": string;
                            body: string;
                        };
                        positioning?: {
                            "object": string;
                            body: string;
                        };
                        delivery?: {
                            "object": string;
                            body: string;
                        };
                        groupment?: {
                            "object": string;
                            body: string;
                        };
                        inactivity?: {
                            "object": string;
                            body: string;
                        };
                        contract?: {
                            "object": string;
                            body: string;
                        };
                        advantage?: {
                            "object": string;
                            body: string;
                        };
                        invoice?: {
                            "object": string;
                            body: string;
                        };
                        order?: {
                            "object": string;
                            body: string;
                        };
                        timesheet?: {
                            "object": string;
                            body: string;
                        };
                        expenses?: {
                            "object": string;
                            body: string;
                        };
                        absencesRequest?: {
                            "object": string;
                            body: string;
                        };
                        action?: {
                            "object": string;
                            body: string;
                        };
                        quotation?: {
                            "object"?: string;
                            body?: string;
                            [key: string]: any;
                        };
                    };
                };
                country?: {
                    id: string;
                    iso?: string;
                    value?: string;
                    [key: string]: any;
                }[];
                nationality?: {
                    id: string;
                    value?: string;
                    [key: string]: any;
                }[];
                dashboard?: {
                    fiscalYearTerm?: string;
                    recruitmentsFunnelInterviewActions?: number[];
                    salesFunnelMeetingActions?: number[];
                };
                lastBackupDate?: string;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/settings", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteApplicationSettings(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/settings", {
        ...opts,
        method: "DELETE"
    });
}
export function postApplicationSettings(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/settings", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get status
 */
export function getApplicationStatus(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/status", {
        ...opts
    });
}
export function deleteApplicationStatus(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/status", {
        ...opts,
        method: "DELETE"
    });
}
export function postApplicationStatus(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/status", {
        ...opts,
        method: "POST"
    });
}
export function putApplicationStatus(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/status", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get the types of days between 2 dates
 */
export function getApplicationWeekendAndBankHolidays(startDate: string, endDate: string, body?: string, { calendar }: {
    calendar?: string[];
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                date?: string;
                weekend?: boolean;
                bankHoliday?: boolean;
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/application/weekendAndBankHolidays${QS.query(QS.explode({
        calendar,
        startDate,
        endDate
    }))}`, {
        ...opts,
        body
    });
}
export function deleteApplicationWeekendAndBankHolidays(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/weekendAndBankHolidays", {
        ...opts,
        method: "DELETE"
    });
}
export function postApplicationWeekendAndBankHolidays(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/weekendAndBankHolidays", {
        ...opts,
        method: "POST"
    });
}
export function putApplicationWeekendAndBankHolidays(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/application/weekendAndBankHolidays", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Search installed apps
 */
export function getApps(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    code?: string;
                    title?: string;
                    description?: string;
                };
                relationships?: {
                    vendor?: {
                        data: {
                            id: string;
                            "type": "customer";
                        };
                    };
                };
            }[];
            included?: {
                id: string;
                "type": "customer";
                attributes?: {
                    name?: string;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps", {
        ...opts
    });
}
export function postApps(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteApps(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps", {
        ...opts,
        method: "DELETE"
    });
}
export function putApps(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get app's basic data
 */
export function getAppsById(body?: {
    urlCallback?: string;
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    code?: string;
                    url?: string;
                    integration?: "iFrame" | "module";
                    signedRequest?: string;
                    isRefreshTokenValidated?: boolean;
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/apps/${encodeURIComponent(id)}`, oazapfts.form({
        ...opts,
        body
    }));
}
export function putAppsById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    code?: string;
                    url?: string;
                    integration?: "iFrame" | "module";
                    signedRequest?: string;
                    isRefreshTokenValidated?: boolean;
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/apps/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteAppsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/apps/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postAppsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/apps/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Install App
 */
export function postAppsByAppCodeInstall(body?: {
    signedRequest: string;
}, { appCode }: {
    appCode?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            result: boolean;
            expirationDate?: string;
            errorMessage?: string;
            redirectToConfiguration?: boolean;
            visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/apps/${encodeURIComponent(appCode)}/install`, oazapfts.form({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteAppsByAppCodeInstall(body?: string, { appCode }: {
    appCode?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/apps/${encodeURIComponent(appCode)}/install`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function putAppsByAppCodeInstall(body?: string, { appCode }: {
    appCode?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/apps/${encodeURIComponent(appCode)}/install`, {
        ...opts,
        method: "PUT",
        body
    });
}
export function getAppsByAppCodeInstall(body?: string, { appCode }: {
    appCode?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/apps/${encodeURIComponent(appCode)}/install`, {
        ...opts,
        body
    });
}
/**
 * Uninstall App
 */
export function deleteAppsByAppCodeUninstall(body?: {
    signedRequest: string;
}, { appCode }: {
    appCode?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            result: boolean;
            errorMessage?: string;
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/apps/${encodeURIComponent(appCode)}/uninstall`, oazapfts.form({
        ...opts,
        method: "DELETE",
        body
    }));
}
export function postAppsByAppCodeUninstall(body?: string, { appCode }: {
    appCode?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/apps/${encodeURIComponent(appCode)}/uninstall`, {
        ...opts,
        method: "POST",
        body
    });
}
export function putAppsByAppCodeUninstall(body?: string, { appCode }: {
    appCode?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/apps/${encodeURIComponent(appCode)}/uninstall`, {
        ...opts,
        method: "PUT",
        body
    });
}
export function getAppsByAppCodeUninstall(body?: string, { appCode }: {
    appCode?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/apps/${encodeURIComponent(appCode)}/uninstall`, {
        ...opts,
        body
    });
}
export function deleteAppsAbsencesAccounts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/absences-accounts", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsAbsencesAccounts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/absences-accounts", {
        ...opts,
        method: "POST"
    });
}
export function putAppsAbsencesAccounts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/absences-accounts", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsAbsencesAccounts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/absences-accounts", {
        ...opts
    });
}
export function deleteAppsAccountingPayroll(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/accounting-payroll", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsAccountingPayroll(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/accounting-payroll", {
        ...opts,
        method: "POST"
    });
}
export function putAppsAccountingPayroll(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/accounting-payroll", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsAccountingPayroll(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/accounting-payroll", {
        ...opts
    });
}
export function deleteAppsAdvancedCandidates(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/advanced-candidates", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsAdvancedCandidates(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/advanced-candidates", {
        ...opts,
        method: "POST"
    });
}
export function putAppsAdvancedCandidates(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/advanced-candidates", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsAdvancedCandidates(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/advanced-candidates", {
        ...opts
    });
}
export function deleteAppsAdvancedProjects(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/advanced-projects", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsAdvancedProjects(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/advanced-projects", {
        ...opts,
        method: "POST"
    });
}
export function putAppsAdvancedProjects(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/advanced-projects", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsAdvancedProjects(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/advanced-projects", {
        ...opts
    });
}
export function deleteAppsAdvantages(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/advantages", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsAdvantages(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/advantages", {
        ...opts,
        method: "POST"
    });
}
export function putAppsAdvantages(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/advantages", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsAdvantages(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/advantages", {
        ...opts
    });
}
export function deleteAppsAnsweringValidators(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/answering-validators", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsAnsweringValidators(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/answering-validators", {
        ...opts,
        method: "POST"
    });
}
export function putAppsAnsweringValidators(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/answering-validators", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsAnsweringValidators(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/answering-validators", {
        ...opts
    });
}
export function deleteAppsBackupDatabase(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/backup-database", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsBackupDatabase(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/backup-database", {
        ...opts,
        method: "POST"
    });
}
export function putAppsBackupDatabase(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/backup-database", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsBackupDatabase(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/backup-database", {
        ...opts
    });
}
export function deleteAppsContracts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/contracts", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsContracts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/contracts", {
        ...opts,
        method: "POST"
    });
}
export function putAppsContracts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/contracts", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsContracts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/contracts", {
        ...opts
    });
}
export function deleteAppsCorporama(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/corporama", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsCorporama(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/corporama", {
        ...opts,
        method: "POST"
    });
}
export function putAppsCorporama(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/corporama", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsCorporama(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/corporama", {
        ...opts
    });
}
export function deleteAppsCorporateDocuments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/corporate-documents", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsCorporateDocuments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/corporate-documents", {
        ...opts,
        method: "POST"
    });
}
export function putAppsCorporateDocuments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/corporate-documents", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsCorporateDocuments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/corporate-documents", {
        ...opts
    });
}
export function getAppsCreateActivityDocuments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/create-activity-documents", {
        ...opts
    });
}
export function putAppsCreateActivityDocuments(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/create-activity-documents", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteAppsCreateActivityDocuments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/create-activity-documents", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsCreateActivityDocuments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/create-activity-documents", {
        ...opts,
        method: "POST"
    });
}
export function deleteAppsDataClosing(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/data-closing", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsDataClosing(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/data-closing", {
        ...opts,
        method: "POST"
    });
}
export function putAppsDataClosing(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/data-closing", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsDataClosing(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/data-closing", {
        ...opts
    });
}
export function deleteAppsDocTemplates(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/doc-templates", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsDocTemplates(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/doc-templates", {
        ...opts,
        method: "POST"
    });
}
export function putAppsDocTemplates(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/doc-templates", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsDocTemplates(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/doc-templates", {
        ...opts
    });
}
export function getAppsEmailing(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "appemailingresource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    email1?: string;
                    email2?: string;
                    email3?: string;
                    canReadResource?: boolean;
                };
                relationships?: {
                    resumes?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/emailing", {
        ...opts
    });
}
export function putAppsEmailing(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "appemailingresource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    email1?: string;
                    email2?: string;
                    email3?: string;
                    canReadResource?: boolean;
                };
                relationships?: {
                    resumes?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/emailing", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteAppsEmailing(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/emailing", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsEmailing(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/emailing", {
        ...opts,
        method: "POST"
    });
}
export function deleteAppsExceptionalActivity(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/exceptional-activity", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsExceptionalActivity(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/exceptional-activity", {
        ...opts,
        method: "POST"
    });
}
export function putAppsExceptionalActivity(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/exceptional-activity", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsExceptionalActivity(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/exceptional-activity", {
        ...opts
    });
}
export function getAppsExtractBi(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/extract-bi", {
        ...opts
    });
}
export function putAppsExtractBi(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/extract-bi", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteAppsExtractBi(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/extract-bi", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsExtractBi(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/extract-bi", {
        ...opts,
        method: "POST"
    });
}
export function deleteAppsExtractPayroll(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/extract-payroll", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsExtractPayroll(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/extract-payroll", {
        ...opts,
        method: "POST"
    });
}
export function putAppsExtractPayroll(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/extract-payroll", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsExtractPayroll(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/extract-payroll", {
        ...opts
    });
}
export function deleteAppsGcalendar(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/gcalendar", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsGcalendar(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/gcalendar", {
        ...opts,
        method: "POST"
    });
}
export function putAppsGcalendar(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/gcalendar", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsGcalendar(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/gcalendar", {
        ...opts
    });
}
export function deleteAppsGmail(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/gmail", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsGmail(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/gmail", {
        ...opts,
        method: "POST"
    });
}
export function putAppsGmail(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/gmail", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsGmail(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/gmail", {
        ...opts
    });
}
export function deleteAppsGviewer(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/gviewer", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsGviewer(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/gviewer", {
        ...opts,
        method: "POST"
    });
}
export function putAppsGviewer(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/gviewer", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsGviewer(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/gviewer", {
        ...opts
    });
}
export function deleteAppsHourAccounts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/hour-accounts", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsHourAccounts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/hour-accounts", {
        ...opts,
        method: "POST"
    });
}
export function putAppsHourAccounts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/hour-accounts", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsHourAccounts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/hour-accounts", {
        ...opts
    });
}
export function deleteAppsIntranetAccounts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/intranet-accounts", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsIntranetAccounts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/intranet-accounts", {
        ...opts,
        method: "POST"
    });
}
export function putAppsIntranetAccounts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/intranet-accounts", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsIntranetAccounts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/intranet-accounts", {
        ...opts
    });
}
export function deleteAppsMarkers(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/markers", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsMarkers(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/markers", {
        ...opts,
        method: "POST"
    });
}
export function putAppsMarkers(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/markers", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsMarkers(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/markers", {
        ...opts
    });
}
export function deleteAppsMicrosoft(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/microsoft", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsMicrosoft(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/microsoft", {
        ...opts,
        method: "POST"
    });
}
export function putAppsMicrosoft(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/microsoft", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsMicrosoft(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/microsoft", {
        ...opts
    });
}
export function deleteAppsNotifications(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/notifications", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsNotifications(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/notifications", {
        ...opts,
        method: "POST"
    });
}
export function putAppsNotifications(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/notifications", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsNotifications(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/notifications", {
        ...opts
    });
}
export function deleteAppsOrganizationCharts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/organization-charts", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsOrganizationCharts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/organization-charts", {
        ...opts,
        method: "POST"
    });
}
export function putAppsOrganizationCharts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/organization-charts", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsOrganizationCharts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/organization-charts", {
        ...opts
    });
}
export function deleteAppsPlanProduction(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/plan-production", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsPlanProduction(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/plan-production", {
        ...opts,
        method: "POST"
    });
}
export function putAppsPlanProduction(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/plan-production", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsPlanProduction(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/plan-production", {
        ...opts
    });
}
export function deleteAppsPostProduction(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/post-production", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsPostProduction(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/post-production", {
        ...opts,
        method: "POST"
    });
}
export function putAppsPostProduction(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/post-production", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsPostProduction(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/post-production", {
        ...opts
    });
}
export function deleteAppsQuotations(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/quotations", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsQuotations(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/quotations", {
        ...opts,
        method: "POST"
    });
}
export function putAppsQuotations(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/quotations", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsQuotations(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/quotations", {
        ...opts
    });
}
export function deleteAppsResourcePlanner(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/resource-planner", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsResourcePlanner(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/resource-planner", {
        ...opts,
        method: "POST"
    });
}
export function putAppsResourcePlanner(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/resource-planner", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsResourcePlanner(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/resource-planner", {
        ...opts
    });
}
export function getAppsSaasEditor(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/saas-editor", {
        ...opts
    });
}
export function putAppsSaasEditor(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/saas-editor", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteAppsSaasEditor(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/saas-editor", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsSaasEditor(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/saas-editor", {
        ...opts,
        method: "POST"
    });
}
export function deleteAppsSepa(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/sepa", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsSepa(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/sepa", {
        ...opts,
        method: "POST"
    });
}
export function putAppsSepa(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/sepa", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsSepa(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/sepa", {
        ...opts
    });
}
export function deleteAppsSpecialReporting(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/special-reporting", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsSpecialReporting(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/special-reporting", {
        ...opts,
        method: "POST"
    });
}
export function putAppsSpecialReporting(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/special-reporting", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsSpecialReporting(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/special-reporting", {
        ...opts
    });
}
export function deleteAppsSurvey(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/survey", {
        ...opts,
        method: "DELETE"
    });
}
export function postAppsSurvey(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/survey", {
        ...opts,
        method: "POST"
    });
}
export function putAppsSurvey(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/survey", {
        ...opts,
        method: "PUT"
    });
}
export function getAppsSurvey(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/apps/survey", {
        ...opts
    });
}
/**
 * Create an attached flag
 */
export function postAttachedFlags(body?: {
    data: {
        "type": "attachedflag";
        relationships: {
            dependsOn: {
                data: {
                    id: string;
                    "type": "resource";
                };
            } | {
                data: {
                    id: string;
                    "type": "candidate";
                };
            } | {
                data: {
                    id: string;
                    "type": "product";
                };
            } | {
                data: {
                    id: string;
                    "type": "opportunity";
                };
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            } | {
                data: {
                    id: string;
                    "type": "purchase";
                };
            } | {
                data: {
                    id: string;
                    "type": "order";
                };
            } | {
                data: {
                    id: string;
                    "type": "invoice";
                };
            } | {
                data: {
                    id: string;
                    "type": "positioning";
                };
            } | {
                data: {
                    id: string;
                    "type": "action";
                };
            } | {
                data: {
                    id: string;
                    "type": "contact";
                };
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            };
            flag: {
                data: {
                    id: string;
                    "type": "flag";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "attachedflag";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "positioning";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "action";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    flag?: {
                        data: {
                            id: string;
                            "type": "flag";
                        };
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/attached-flags", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
/**
 * Delete an attached flag
 */
export function deleteAttachedFlags(flag: number, body?: string, { company, opportunity, project, order, product, purchase, action, resource, candidate, positioning, contact, invoice }: {
    company?: number;
    opportunity?: number;
    project?: number;
    order?: number;
    product?: number;
    purchase?: number;
    action?: number;
    resource?: number;
    candidate?: number;
    positioning?: number;
    contact?: number;
    invoice?: number;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/attached-flags${QS.query(QS.explode({
        company,
        opportunity,
        project,
        order,
        product,
        purchase,
        action,
        resource,
        candidate,
        positioning,
        contact,
        invoice,
        flag
    }))}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function getAttachedFlags(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/attached-flags", {
        ...opts
    });
}
export function putAttachedFlags(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/attached-flags", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Search deliveries or purchases with a billing balance
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/billing-deliveries-purchases-balance.csv?keywords=PRJ1*
 *
 */
export function getBillingDeliveriesPurchasesBalance(body?: string, { keywords, projectTypes, projectStates, period, startDate, endDate, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    projectTypes?: number[];
    projectStates?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: ({
                id: string;
                "type": "delivery";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    title?: string;
                    numberOfCorrelatedOrders?: number;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    order?: {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    };
                };
            } | {
                id: string;
                "type": "purchase";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    title?: string;
                    numberOfCorrelatedOrders?: number;
                };
                relationships?: {
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    order?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    };
                };
            })[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    numberOfOrders?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    "number"?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/billing-deliveries-purchases-balance${QS.query(QS.explode({
        keywords,
        projectTypes,
        projectStates,
        period,
        startDate,
        endDate,
        flags,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
export function postBillingDeliveriesPurchasesBalance(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/billing-deliveries-purchases-balance", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteBillingDeliveriesPurchasesBalance(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/billing-deliveries-purchases-balance", {
        ...opts,
        method: "DELETE"
    });
}
export function putBillingDeliveriesPurchasesBalance(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/billing-deliveries-purchases-balance", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Search orders with a monthly billing balance
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/billing-monthly-balance.csv?keywords=BDC1*
 *
 */
export function getBillingMonthlyBalance(startMonth: string, body?: string, { keywords, projectTypes, orderPaymentMethods, orderStates, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    projectTypes?: number[];
    orderPaymentMethods?: number[];
    orderStates?: number[];
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                    turnoverProductionExcludingTax?: number;
                    turnoverInvoicedExcludingTax?: number;
                    deltaProductionExcludingTax?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "order";
                attributes?: {
                    date?: string;
                    "number"?: string;
                    reference?: string;
                    numberOfInvoices?: number;
                    turnoverProductionExcludingTax?: number;
                    turnoverInvoicedExcludingTax?: number;
                    deltaProductionExcludingTax?: number;
                    separateActivityExpensesAndPurchases?: boolean;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/billing-monthly-balance${QS.query(QS.explode({
        keywords,
        projectTypes,
        orderPaymentMethods,
        orderStates,
        startMonth,
        flags,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
export function postBillingMonthlyBalance(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/billing-monthly-balance", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteBillingMonthlyBalance(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/billing-monthly-balance", {
        ...opts,
        method: "DELETE"
    });
}
export function putBillingMonthlyBalance(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/billing-monthly-balance", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Search projects with a billing balance
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/billing-projects-balance.csv?keywords=PRJ1*
 *
 */
export function getBillingProjectsBalance(body?: string, { keywords, projectTypes, projectStates, period, startDate, endDate, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    projectTypes?: number[];
    projectStates?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                    turnoverOrderedExcludingTax?: number;
                    turnoverSignedExcludingTax?: number;
                    deltaOrderedExcludingTax?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "project";
                attributes?: {
                    creationDate?: string;
                    typeOf?: number;
                    mode?: number;
                    reference?: string;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    turnoverSignedExcludingTax?: number;
                    turnoverOrderedExcludingTax?: number;
                    deltaOrderedExcludingTax?: number;
                    numberOfOrders?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/billing-projects-balance${QS.query(QS.explode({
        keywords,
        projectTypes,
        projectStates,
        period,
        startDate,
        endDate,
        flags,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
export function postBillingProjectsBalance(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/billing-projects-balance", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteBillingProjectsBalance(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/billing-projects-balance", {
        ...opts,
        method: "DELETE"
    });
}
export function putBillingProjectsBalance(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/billing-projects-balance", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Search schedules with a billing balance
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/billing-schedules-balance.csv?keywords=BDC1*
 *
 */
export function getBillingSchedulesBalance(body?: string, { keywords, projectTypes, orderPaymentMethods, orderStates, period, startDate, endDate, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    projectTypes?: number[];
    orderPaymentMethods?: number[];
    orderStates?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                    turnoverInvoicedExcludingTax?: number;
                    turnoverTermOfPaymentExcludingTax?: number;
                    deltaInvoicedExcludingTax?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "schedule";
                attributes?: {
                    date?: string;
                    title?: string;
                    turnoverTermOfPaymentExcludingTax?: number;
                    turnoverInvoicedExcludingTax?: number;
                    deltaInvoicedExcludingTax?: number;
                    numberOfInvoices?: number;
                };
                relationships?: {
                    order?: {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    };
                    invoice?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "order";
                attributes?: {
                    "number"?: string;
                    reference?: string;
                    separateActivityExpensesAndPurchases?: boolean;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/billing-schedules-balance${QS.query(QS.explode({
        keywords,
        projectTypes,
        orderPaymentMethods,
        orderStates,
        period,
        startDate,
        endDate,
        flags,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
export function postBillingSchedulesBalance(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/billing-schedules-balance", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteBillingSchedulesBalance(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/billing-schedules-balance", {
        ...opts,
        method: "DELETE"
    });
}
export function putBillingSchedulesBalance(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/billing-schedules-balance", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Search business units
 */
export function getBusinessUnits(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "businessunit";
                attributes?: {
                    name?: string;
                };
                relationships?: {
                    includedManagers?: any[];
                };
            }[];
            included?: {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/business-units", {
        ...opts
    });
}
/**
 * Create a business units
 */
export function postBusinessUnits(body?: {
    data: {
        "type": "businessunit";
        attributes: {
            name: string;
        };
        relationships?: {
            includedManagers?: {
                data: {
                    id: string;
                    "type": "resource";
                }[];
            };
            excludedManagersInSearch?: {
                data: {
                    id: string;
                    "type": "resource";
                }[];
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                managers?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "businessunit";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                };
                relationships?: {
                    includedManagers?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    excludedManagersInSearch?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/business-units", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteBusinessUnits(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/business-units", {
        ...opts,
        method: "DELETE"
    });
}
export function putBusinessUnits(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/business-units", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty business unit's default information data
 */
export function getBusinessUnitsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                managers?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "businessunit";
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/business-units/default", {
        ...opts
    });
}
export function putBusinessUnitsDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                managers?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "businessunit";
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/business-units/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteBusinessUnitsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/business-units/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postBusinessUnitsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/business-units/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get business unit's basic data
 */
export function getBusinessUnitsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                managers?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "businessunit";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                };
                relationships?: {
                    includedManagers?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    excludedManagersInSearch?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/business-units/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the business unit
 */
export function deleteBusinessUnitsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/business-units/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to a business unit
 */
export function putBusinessUnitsById(body?: {
    data: {
        id: string;
        "type": "businessunit";
        attributes?: {
            name?: string;
        };
        relationships?: {
            includedManagers?: {
                data: {
                    id: string;
                    "type": "resource";
                }[];
            };
            excludedManagersInSearch?: {
                data: {
                    id: string;
                    "type": "resource";
                }[];
            };
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                managers?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "businessunit";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                };
                relationships?: {
                    includedManagers?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    excludedManagersInSearch?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/business-units/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postBusinessUnitsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/business-units/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search calendars
 */
export function getCalendars(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                iso: string;
                value: string;
                subCalendars?: {
                    iso: string;
                    value: string;
                }[];
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/calendars", {
        ...opts
    });
}
export function postCalendars(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/calendars", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteCalendars(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/calendars", {
        ...opts,
        method: "DELETE"
    });
}
export function putCalendars(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/calendars", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty calendar's default data
 */
export function getCalendarsDefault(body?: string, { year, iso }: {
    year?: number;
    iso?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                iso: string;
                value: string;
                name: string;
                year: number;
                weekend: (1 | 2 | 3 | 4 | 5 | 6 | 7)[];
                holidays: string[];
                publicHolidays: string[];
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/calendars/default${QS.query(QS.explode({
        year,
        iso
    }))}`, {
        ...opts,
        body
    });
}
export function putCalendarsDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                iso: string;
                value: string;
                name: string;
                year: number;
                weekend: (1 | 2 | 3 | 4 | 5 | 6 | 7)[];
                holidays: string[];
                publicHolidays: string[];
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/calendars/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteCalendarsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/calendars/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postCalendarsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/calendars/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get calendar's basic data
 */
export function getCalendarsById(body?: string, { year, iso, id }: {
    year?: number;
    iso?: string;
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                iso: string;
                value: string;
                name: string;
                year: number;
                weekend: (1 | 2 | 3 | 4 | 5 | 6 | 7)[];
                holidays: string[];
                publicHolidays: string[];
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/calendars/${encodeURIComponent(id)}${QS.query(QS.explode({
        year,
        iso
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Update basic data related to a calendar
 */
export function putCalendarsById(body?: {
    meta: {
        version: string;
        isLogged: boolean;
        language: "fr" | "en";
        [key: string]: any;
    };
    data: {
        id: string;
        year: number;
        weekend: (1 | 2 | 3 | 4 | 5 | 6 | 7)[];
        holidays: string[];
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                iso: string;
                value: string;
                name: string;
                year: number;
                weekend: (1 | 2 | 3 | 4 | 5 | 6 | 7)[];
                holidays: string[];
                publicHolidays: string[];
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/calendars/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteCalendarsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/calendars/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postCalendarsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/calendars/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search candidates
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/candidates.csv?keywords=CAND100*
 *
 */
export function getCandidates(body?: string, { keywords, keywordsType, returnMoreData, contractTypes, activityAreas, expertiseAreas, tools, mobilityAreas, experiences, trainings, period, startDate, endDate, flags, candidateStates, perimeterManagersType, availabilityTypes, languages, evaluations, sources, candidateTypes, onlyVisible, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    keywordsType?: string;
    returnMoreData?: string[];
    contractTypes?: number[];
    activityAreas?: string[];
    expertiseAreas?: string[];
    tools?: string[];
    mobilityAreas?: string;
    experiences?: number[];
    trainings?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    candidateStates?: number[];
    perimeterManagersType?: string;
    availabilityTypes?: number[];
    languages?: string[];
    evaluations?: string[];
    sources?: string[];
    candidateTypes?: number[];
    onlyVisible?: boolean;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                solr?: boolean;
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "candidate";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    civility?: number;
                    thumbnail?: string;
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                    state?: number;
                    isVisible?: boolean;
                    skills?: string;
                    mobilityAreas?: string[];
                    title?: string;
                    availability?: any;
                    email1?: string;
                    email2?: string;
                    email3?: string;
                    phone1?: string;
                    phone2?: string;
                    town?: string;
                    country?: string;
                    source?: {
                        typeOf: number;
                        detail: string;
                    };
                    numberOfResumes?: number;
                    numberOfActivePositionings?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    resume?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "document";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    previousAction?: {
                        data: {
                            id: string;
                            "type": "action";
                        };
                    };
                    nextAction?: {
                        data: {
                            id: string;
                            "type": "action";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    startDate?: string;
                    typeOf?: number;
                    text?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    startDate?: string;
                    typeOf?: number;
                    text?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/candidates${QS.query(QS.explode({
        keywords,
        keywordsType,
        returnMoreData,
        contractTypes,
        activityAreas,
        expertiseAreas,
        tools,
        mobilityAreas,
        experiences,
        trainings,
        period,
        startDate,
        endDate,
        flags,
        candidateStates,
        perimeterManagersType,
        availabilityTypes,
        languages,
        evaluations,
        sources,
        candidateTypes,
        onlyVisible,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a candidate
 */
export function postCandidates(body?: {
    data: {
        "type": "candidate";
        attributes: {
            creationDate?: string;
            civility?: number;
            firstName: string;
            lastName: string;
            state?: number;
            stateReason?: {
                typeOf?: number;
                detail?: string;
                [key: string]: any;
            };
            typeOf?: number;
            email1?: string;
            email2?: string;
            email3?: string;
            phone1?: string;
            phone2?: string;
            phone3?: string;
            fax?: string;
            address?: string;
            postcode?: string;
            town?: string;
            country?: string;
            source?: {
                typeOf: number;
                detail: string;
            };
            dateOfBirth?: string;
            mobilityAreas?: string[];
            globalEvaluation?: string;
            evaluations?: ({
                notations: {
                    criteria: number;
                    evaluation: string;
                }[];
                date: string;
                comments: string;
            } | {
                id: string;
                notations: {
                    criteria: number;
                    evaluation: string;
                }[];
                date: string;
                comments: string;
            })[];
            availability?: any;
            isVisible?: boolean;
            informationComments?: string;
            socialNetworks?: {
                network: "facebook" | "viadeo" | "linkedin" | "twitter";
                url: string;
            }[];
            importResumes?: boolean;
            importFiles?: boolean;
            importContractFiles?: boolean;
            importContract?: boolean;
            importFields?: any[];
        };
        relationships?: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            hrManager?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "candidate";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    civility?: number;
                    thumbnail?: string;
                    firstName?: string;
                    lastName?: string;
                    title?: string;
                    typeOf?: number;
                    state?: number;
                    stateReason?: {
                        typeOf?: number;
                        detail?: string;
                        [key: string]: any;
                    };
                    email1?: string;
                    email2?: string;
                    email3?: string;
                    phone1?: string;
                    phone2?: string;
                    phone3?: string;
                    fax?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    source?: {
                        typeOf: number;
                        detail: string;
                    };
                    dateOfBirth?: string;
                    mobilityAreas?: string[];
                    globalEvaluation?: string;
                    evaluations?: {
                        id: string;
                        notations: {
                            criteria: number;
                            evaluation: string;
                        }[];
                        date: string;
                        comments: string;
                        manager: {
                            id: string;
                            firstName: string;
                            lastName: string;
                        };
                    }[];
                    availability?: any;
                    isVisible?: boolean;
                    informationComments?: string;
                    socialNetworks?: {
                        network: "facebook" | "viadeo" | "linkedin" | "twitter";
                        url: string;
                    }[];
                };
                relationships?: {
                    resource?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    resumes?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                    state?: number;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/candidates", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteCandidates(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/candidates", {
        ...opts,
        method: "DELETE"
    });
}
export function putCandidates(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/candidates", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty candidate's default information data
 */
export function getCandidatesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "candidate";
                attributes?: {
                    civility?: number;
                    state?: number;
                    country?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/candidates/default", {
        ...opts
    });
}
export function putCandidatesDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "candidate";
                attributes?: {
                    civility?: number;
                    state?: number;
                    country?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/candidates/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteCandidatesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/candidates/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postCandidatesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/candidates/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get candidate's basic data
 */
export function getCandidatesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "candidate";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    civility?: number;
                    thumbnail?: string;
                    firstName?: string;
                    lastName?: string;
                    title?: string;
                    dateOfBirth?: string;
                    numberOfResumes?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/candidates/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
export function putCandidatesById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "candidate";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    civility?: number;
                    thumbnail?: string;
                    firstName?: string;
                    lastName?: string;
                    title?: string;
                    dateOfBirth?: string;
                    numberOfResumes?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/candidates/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteCandidatesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/candidates/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postCandidatesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/candidates/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Get resource's chart
 */
export function getChartsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "chart";
                attributes?: {
                    typeOf?: "funnel" | "pie" | "bar" | "gauge";
                    graph?: "myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin" | "chargedPeriodTurnoverProductionTurnoverSignedTurnover" | "periodTurnoverChargedMarginPeriodCharged";
                    target?: {
                        operator: "<" | "<=" | "=" | ">" | ">=";
                        value: number;
                    };
                    period?: "thisWeek" | "thisMonth" | "thisQuarterly" | "thisHalfYear" | "thisYear" | "thisFiscalPeriod";
                    values?: {
                        value: string;
                        scorecard: {
                            reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                            category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                            typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                            dictionaryId?: number;
                        };
                    }[];
                    groupedScorecards?: {
                        interview?: {
                            reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                            category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                            typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                            dictionaryId?: number;
                        }[];
                        meeting?: {
                            reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                            category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                            typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                            dictionaryId?: number;
                        }[];
                        clientPresentation?: {
                            reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                            category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                            typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                            dictionaryId?: number;
                        }[];
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/charts/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
export function putChartsById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "chart";
                attributes?: {
                    typeOf?: "funnel" | "pie" | "bar" | "gauge";
                    graph?: "myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin" | "chargedPeriodTurnoverProductionTurnoverSignedTurnover" | "periodTurnoverChargedMarginPeriodCharged";
                    target?: {
                        operator: "<" | "<=" | "=" | ">" | ">=";
                        value: number;
                    };
                    period?: "thisWeek" | "thisMonth" | "thisQuarterly" | "thisHalfYear" | "thisYear" | "thisFiscalPeriod";
                    values?: {
                        value: string;
                        scorecard: {
                            reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                            category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                            typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                            dictionaryId?: number;
                        };
                    }[];
                    groupedScorecards?: {
                        interview?: {
                            reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                            category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                            typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                            dictionaryId?: number;
                        }[];
                        meeting?: {
                            reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                            category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                            typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                            dictionaryId?: number;
                        }[];
                        clientPresentation?: {
                            reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                            category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                            typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                            dictionaryId?: number;
                        }[];
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/charts/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteChartsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/charts/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postChartsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/charts/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search companies
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/companies.csv?keywords=CSOC100*
 *
 */
export function getCompanies(body?: string, { keywords, keywordsType, returnMoreData, states, expertiseAreas, origins, period, startDate, endDate, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    keywordsType?: string;
    returnMoreData?: string[];
    states?: number[];
    expertiseAreas?: string[];
    origins?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                solr?: boolean;
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    expertiseArea?: string;
                    state?: number;
                    informationComments?: string;
                    thumbnail?: string;
                    website?: string;
                    phone1?: string;
                    town?: string;
                    country?: string;
                    creationDate?: string;
                    numberbOfActiveOpportunity?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    previousAction?: {
                        data: {
                            id: string;
                            "type": "action";
                        };
                    };
                    nextAction?: {
                        data: {
                            id: string;
                            "type": "action";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    startDate?: string;
                    typeOf?: number;
                    text?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    startDate?: string;
                    typeOf?: number;
                    text?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/companies${QS.query(QS.explode({
        keywords,
        keywordsType,
        returnMoreData,
        states,
        expertiseAreas,
        origins,
        period,
        startDate,
        endDate,
        flags,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a company
 */
export function postCompanies(body?: {
    data: {
        "type": "company";
        attributes: {
            creationDate?: string;
            name: string;
            state?: number;
            website?: string;
            phone1?: string;
            fax?: string;
            address?: string;
            postcode?: string;
            town?: string;
            country?: string;
            "number"?: string;
            origin?: {
                typeOf: number;
                detail: string;
            };
            staff?: number;
            expertiseArea?: string;
            informationComments?: string;
            departments?: string[];
            vatNumber?: string;
            registrationNumber?: string;
            legalStatus?: string;
            registeredOffice?: string;
            apeCode?: string;
            billingDetails?: ({
                name: string;
                contact: string;
                phone1: string;
                email1: string;
                email2: string;
                email3: string;
                address1: string;
                address2: string;
                address3: string;
                postcode: string;
                town: string;
                country: string;
                state: boolean;
            } | {
                id: string;
                name: string;
                contact: string;
                phone1: string;
                email1: string;
                email2: string;
                email3: string;
                address1: string;
                address2: string;
                address3: string;
                postcode: string;
                town: string;
                country: string;
                state: boolean;
            })[];
            socialNetworks?: {
                network: "facebook" | "viadeo" | "linkedin" | "twitter";
                url: string;
            }[];
        };
        relationships?: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
            influencers?: {
                data: {
                    id: string;
                    "type": "resource";
                }[];
            };
            parentCompany?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "company";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    thumbnail?: string;
                    state?: number;
                    website?: string;
                    phone1?: string;
                    fax?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    "number"?: string;
                    origin?: {
                        typeOf: number;
                        detail: string;
                    };
                    staff?: number;
                    expertiseArea?: string;
                    informationComments?: string;
                    departments?: string[];
                    vatNumber?: string;
                    registrationNumber?: string;
                    legalStatus?: string;
                    registeredOffice?: string;
                    apeCode?: string;
                    billingDetails?: {
                        id: string;
                        name: string;
                        contact: string;
                        phone1: string;
                        email1: string;
                        email2: string;
                        email3: string;
                        address1: string;
                        address2: string;
                        address3: string;
                        postcode: string;
                        town: string;
                        country: string;
                        state: boolean;
                        isUsed: boolean;
                        canEdit: boolean;
                        canDelete: boolean;
                    }[];
                    socialNetworks?: {
                        network: "facebook" | "viadeo" | "linkedin" | "twitter";
                        url: string;
                    }[];
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    influencers?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    parentCompany?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    subsidiaries?: {
                        data: {
                            id: string;
                            "type": "company";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    town?: string;
                    country?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/companies", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteCompanies(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/companies", {
        ...opts,
        method: "DELETE"
    });
}
export function putCompanies(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/companies", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty company's default information data
 */
export function getCompaniesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "company";
                attributes?: {
                    state?: number;
                    country?: string;
                    staff?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/companies/default", {
        ...opts
    });
}
export function putCompaniesDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "company";
                attributes?: {
                    state?: number;
                    country?: string;
                    staff?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/companies/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteCompaniesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/companies/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postCompaniesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/companies/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get company's basic data
 */
export function getCompaniesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "company";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    thumbnail?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/companies/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the company
 */
export function deleteCompaniesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/companies/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function putCompaniesById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "company";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    thumbnail?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/companies/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postCompaniesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/companies/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search threads
 */
export function getThreads(body?: string, { keywords, typeOf, period, startDate, endDate, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    typeOf?: string;
    period?: string;
    startDate?: string;
    endDate?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/threads${QS.query(QS.explode({
        keywords,
        typeOf,
        period,
        startDate,
        endDate,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a thread
 */
export function postThreads(body?: any, { parent }: {
    parent?: number;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/threads${QS.query(QS.explode({
        parent
    }))}`, oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteThreads(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/threads", {
        ...opts,
        method: "DELETE"
    });
}
export function putThreads(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/threads", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty thread's default basic data
 */
export function getThreadsDefault(typeOf: string, body?: string, { resource, candidate, project, contact, company, opportunity, order, invoice, product, purchase, payment, delivery, inactivity, groupment, action, positioning, timesReport, expensesReport, absencesReport, contract, advantage, quotation, thread }: {
    resource?: number;
    candidate?: number;
    project?: number;
    contact?: number;
    company?: number;
    opportunity?: number;
    order?: number;
    invoice?: number;
    product?: number;
    purchase?: number;
    payment?: number;
    delivery?: number;
    inactivity?: number;
    groupment?: number;
    action?: number;
    positioning?: number;
    timesReport?: number;
    expensesReport?: number;
    absencesReport?: number;
    contract?: number;
    advantage?: number;
    quotation?: number;
    thread?: number;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/threads/default${QS.query(QS.explode({
        typeOf,
        resource,
        candidate,
        project,
        contact,
        company,
        opportunity,
        order,
        invoice,
        product,
        purchase,
        payment,
        delivery,
        inactivity,
        groupment,
        action,
        positioning,
        timesReport,
        expensesReport,
        absencesReport,
        contract,
        advantage,
        quotation,
        thread
    }))}`, {
        ...opts,
        body
    });
}
export function putThreadsDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/threads/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteThreadsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/threads/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postThreadsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/threads/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get thread's basic data
 */
export function getThreadsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/threads/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete thread
 */
export function deleteThreadsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "appOauthRedirection" | "appError";
                    detail: string;
                    oauth_redirection?: string;
                    app_error?: string;
                    app?: {
                        id: string;
                        name: string;
                        code: string;
                    };
                }[];
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/threads/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update thread
 */
export function putThreadsById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/threads/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postThreadsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/threads/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search contacts
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/contacts.csv?keywords=CCON100*
 *
 */
export function getContacts(body?: string, { keywords, keywordsType, returnMoreData, states, activityAreas, tools, expertiseAreas, origins, period, startDate, endDate, flags, encoding, exportToDownloadCenter, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    keywordsType?: string;
    returnMoreData?: string[];
    states?: number[];
    activityAreas?: string[];
    tools?: string[];
    expertiseAreas?: string[];
    origins?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    exportToDownloadCenter?: boolean;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                solr?: boolean;
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "contact";
                attributes?: {
                    creationDate?: string;
                    civility?: number;
                    thumbnail?: string;
                    firstName?: string;
                    lastName?: string;
                    state?: number;
                    "function"?: string;
                    department?: string;
                    email1?: string;
                    email2?: string;
                    email3?: string;
                    phone1?: string;
                    phone2?: string;
                    town?: string;
                    country?: string;
                    canReadContact?: boolean;
                    canWriteContact?: boolean;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    lastAction?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "action";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    previousAction?: {
                        data: {
                            id: string;
                            "type": "action";
                        };
                    };
                    nextAction?: {
                        data: {
                            id: string;
                            "type": "action";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    expertiseArea?: string;
                    thumbnail?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    startDate?: string;
                    typeOf?: number;
                    text?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    startDate?: string;
                    typeOf?: number;
                    text?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    startDate?: string;
                    typeOf?: number;
                    text?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/contacts${QS.query(QS.explode({
        keywords,
        keywordsType,
        returnMoreData,
        states,
        activityAreas,
        tools,
        expertiseAreas,
        origins,
        period,
        startDate,
        endDate,
        flags,
        encoding,
        exportToDownloadCenter,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a contact
 */
export function postContacts(body?: {
    data: {
        "type": "contact";
        attributes: {
            creationDate?: string;
            civility?: number;
            firstName: string;
            lastName: string;
            state?: number;
            email1?: string;
            email2?: string;
            email3?: string;
            phone1?: string;
            phone2?: string;
            fax?: string;
            address?: string;
            postcode?: string;
            town?: string;
            country?: string;
            origin?: {
                typeOf: number;
                detail: string;
            };
            activityAreas?: string[];
            informationComments?: string;
            tools?: string[];
            department?: string;
            "function"?: string;
            socialNetworks?: {
                network: "facebook" | "viadeo" | "linkedin" | "twitter";
                url: string;
            }[];
        };
        relationships: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
            influencers?: {
                data: {
                    id: string;
                    "type": "resource";
                }[];
            };
            company: {
                data: {
                    id: string;
                    "type": "company";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "contact";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    civility?: number;
                    thumbnail?: string;
                    firstName?: string;
                    lastName?: string;
                    state?: number;
                    email1?: string;
                    email2?: string;
                    email3?: string;
                    phone1?: string;
                    phone2?: string;
                    fax?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    origin?: {
                        typeOf: number;
                        detail: string;
                    };
                    activityAreas?: string[];
                    informationComments?: string;
                    tools?: string[];
                    department?: string;
                    "function"?: string;
                    socialNetworks?: {
                        network: "facebook" | "viadeo" | "linkedin" | "twitter";
                        url: string;
                    }[];
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    influencers?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    phone1?: string;
                    postcode?: string;
                    website?: string;
                    registrationNumber?: string;
                    fax?: string;
                    town?: string;
                    address?: string;
                    country?: string;
                    state?: number;
                    staff?: number;
                    informationComments?: string;
                    departments?: string[];
                    expertiseArea?: string;
                };
                relationships?: {
                    parentCompany?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/contacts", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteContacts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/contacts", {
        ...opts,
        method: "DELETE"
    });
}
export function putContacts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/contacts", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty contact's default information data
 */
export function getContactsDefault(company: number, body?: string, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "contact";
                attributes?: {
                    state?: number;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    origin?: {
                        typeOf: number;
                        detail: string;
                    };
                    civility?: number;
                };
                relationships: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    company: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    phone1?: string;
                    postcode?: string;
                    website?: string;
                    registrationNumber?: string;
                    fax?: string;
                    town?: string;
                    address?: string;
                    country?: string;
                    state?: number;
                    staff?: number;
                    informationComments?: string;
                    departments?: string[];
                    expertiseArea?: string;
                };
                relationships?: {
                    parentCompany?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/contacts/default${QS.query(QS.explode({
        company
    }))}`, {
        ...opts,
        body
    });
}
export function putContactsDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "contact";
                attributes?: {
                    state?: number;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    origin?: {
                        typeOf: number;
                        detail: string;
                    };
                    civility?: number;
                };
                relationships: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    company: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    phone1?: string;
                    postcode?: string;
                    website?: string;
                    registrationNumber?: string;
                    fax?: string;
                    town?: string;
                    address?: string;
                    country?: string;
                    state?: number;
                    staff?: number;
                    informationComments?: string;
                    departments?: string[];
                    expertiseArea?: string;
                };
                relationships?: {
                    parentCompany?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/contacts/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteContactsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/contacts/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postContactsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/contacts/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get contact's basic data
 */
export function getContactsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "contact";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    civility?: number;
                    firstName?: string;
                    lastName?: string;
                    thumbnail?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/contacts/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the contact
 */
export function deleteContactsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/contacts/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function putContactsById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "contact";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    civility?: number;
                    firstName?: string;
                    lastName?: string;
                    thumbnail?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/contacts/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postContactsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/contacts/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search contracts
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/contracts.csv?keywords=CTR100*
 *
 */
export function getContracts(body?: string, { keywords, resourceTypes, contractTypes, excludeResourceTypes, resourceStates, period, startDate, endDate, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    resourceTypes?: number[];
    contractTypes?: number[];
    excludeResourceTypes?: number[];
    resourceStates?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "contract";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    typeOf?: number;
                    monthlySalary?: number;
                    monthlyExpenses?: number;
                    dailyExpenses?: number;
                    contractAverageDailyCost?: number;
                    employeeType?: number;
                    workingTimeType?: number;
                    classification?: string;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/contracts${QS.query(QS.explode({
        keywords,
        resourceTypes,
        contractTypes,
        excludeResourceTypes,
        resourceStates,
        period,
        startDate,
        endDate,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a contract
 */
export function postContracts(body?: {
    data: {
        "type": "contract";
        attributes?: {
            typeOf?: number;
            employeeType?: number;
            workingTimeType?: number;
            numberOfHoursPerWeek?: number;
            classification?: string;
            startDate?: string;
            endDate?: string;
            probationEndDate?: string;
            renewalProbationEndDate?: string;
            monthlySalary?: number;
            hourlySalary?: number;
            forceHourlySalary?: boolean;
            forceContractAverageDailyProductionCost?: boolean;
            contractAverageDailyProductionCost?: number;
            dailyExpenses?: number;
            monthlyExpenses?: number;
            numberOfWorkingDays?: number;
            chargeFactor?: number;
            expensesDetails?: ({
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
            } | {
                id: string;
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
            })[];
            advantageTypes?: {
                reference: number;
            }[];
            exceptionalScales?: {
                reference: number;
                exceptionalRules: {
                    reference: number;
                    priceExcludingTaxOrPriceRate: null | number;
                    grossCostOrSalaryRate: null | number;
                }[];
            }[];
            informationComments?: string;
            currency?: number;
            currencyAgency?: number;
            exchangeRate?: number;
            exchangeRateAgency?: number;
        };
        relationships: {
            dependsOn: {
                data: {
                    id: string;
                    "type": "resource";
                };
            } | {
                data: {
                    id: string;
                    "type": "candidate";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            parentContract?: {
                data: {
                    id: string;
                    "type": "contract";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "wrongContractAverageDailyCost" | "wrongContractAverageDailyCostCandidate";
                    detail: string;
                    databaseContractAverageDailyCost?: number;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "contract";
                attributes?: {
                    typeOf?: number;
                    creationDate?: string;
                    updateDate?: string;
                    employeeType?: number;
                    workingTimeType?: number;
                    numberOfHoursPerWeek?: number;
                    classification?: string;
                    startDate?: string;
                    endDate?: string;
                    endReason?: number;
                    probationEndDate?: string;
                    renewalProbationEndDate?: string;
                    monthlySalary?: number;
                    hourlySalary?: number;
                    forceHourlySalary?: boolean;
                    contractAverageDailyCost?: number;
                    contractAverageDailyProductionCost?: number;
                    forceContractAverageDailyProductionCost?: boolean;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    numberOfWorkingDays?: number;
                    chargeFactor?: number;
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                    }[];
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: null | number;
                            grossCostOrSalaryRate: null | number;
                        }[];
                    }[];
                    informationComments?: string;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    parentContract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    childContract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    currency?: number;
                    exchangeRate?: number;
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                        "default"?: boolean;
                    }[];
                    allowExceptionalScalesOnContracts?: boolean;
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules?: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: number;
                            grossCostOrSalaryRate: number;
                        }[];
                    }[];
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    startDate?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/contracts", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteContracts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/contracts", {
        ...opts,
        method: "DELETE"
    });
}
export function putContracts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/contracts", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty contract's default basic data
 */
export function getContractsDefault(body?: string, { resource, parentContract, candidate }: {
    resource?: number;
    parentContract?: number;
    candidate?: number;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "wrongContractAverageDailyCost" | "wrongContractAverageDailyCostCandidate";
                    detail: string;
                    databaseContractAverageDailyCost?: number;
                }[];
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "contract";
                attributes?: {
                    typeOf?: number;
                    employeeType?: number;
                    workingTimeType?: number;
                    numberOfHoursPerWeek?: number;
                    classification?: string;
                    startDate?: string;
                    endDate?: string;
                    monthlySalary?: number;
                    hourlySalary?: number;
                    forceHourlySalary?: boolean;
                    forceContractAverageDailyProductionCost?: boolean;
                    contractAverageDailyCost?: number;
                    contractAverageDailyProductionCost?: number;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    numberOfWorkingDays?: number;
                    chargeFactor?: number;
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                    }[];
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: null | number;
                            grossCostOrSalaryRate: null | number;
                        }[];
                    }[];
                    informationComments?: string;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    parentContract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    contractsSalaryType?: "monthly" | "annual";
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                        "default"?: boolean;
                    }[];
                    allowExceptionalScalesOnContracts?: boolean;
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules?: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: number;
                            grossCostOrSalaryRate: number;
                        }[];
                    }[];
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    startDate?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/contracts/default${QS.query(QS.explode({
        resource,
        parentContract,
        candidate
    }))}`, {
        ...opts,
        body
    });
}
export function putContractsDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "wrongContractAverageDailyCost" | "wrongContractAverageDailyCostCandidate";
                    detail: string;
                    databaseContractAverageDailyCost?: number;
                }[];
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "contract";
                attributes?: {
                    typeOf?: number;
                    employeeType?: number;
                    workingTimeType?: number;
                    numberOfHoursPerWeek?: number;
                    classification?: string;
                    startDate?: string;
                    endDate?: string;
                    monthlySalary?: number;
                    hourlySalary?: number;
                    forceHourlySalary?: boolean;
                    forceContractAverageDailyProductionCost?: boolean;
                    contractAverageDailyCost?: number;
                    contractAverageDailyProductionCost?: number;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    numberOfWorkingDays?: number;
                    chargeFactor?: number;
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                    }[];
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: null | number;
                            grossCostOrSalaryRate: null | number;
                        }[];
                    }[];
                    informationComments?: string;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    parentContract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    contractsSalaryType?: "monthly" | "annual";
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                        "default"?: boolean;
                    }[];
                    allowExceptionalScalesOnContracts?: boolean;
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules?: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: number;
                            grossCostOrSalaryRate: number;
                        }[];
                    }[];
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    startDate?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/contracts/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteContractsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/contracts/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postContractsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/contracts/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get contract's basic data
 */
export function getContractsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "wrongContractAverageDailyCost" | "wrongContractAverageDailyCostCandidate";
                    detail: string;
                    databaseContractAverageDailyCost?: number;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "contract";
                attributes?: {
                    typeOf?: number;
                    creationDate?: string;
                    updateDate?: string;
                    employeeType?: number;
                    workingTimeType?: number;
                    numberOfHoursPerWeek?: number;
                    classification?: string;
                    startDate?: string;
                    endDate?: string;
                    endReason?: number;
                    probationEndDate?: string;
                    renewalProbationEndDate?: string;
                    monthlySalary?: number;
                    hourlySalary?: number;
                    forceHourlySalary?: boolean;
                    contractAverageDailyCost?: number;
                    contractAverageDailyProductionCost?: number;
                    forceContractAverageDailyProductionCost?: boolean;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    numberOfWorkingDays?: number;
                    chargeFactor?: number;
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                    }[];
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: null | number;
                            grossCostOrSalaryRate: null | number;
                        }[];
                    }[];
                    informationComments?: string;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    parentContract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    childContract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    currency?: number;
                    exchangeRate?: number;
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                        "default"?: boolean;
                    }[];
                    allowExceptionalScalesOnContracts?: boolean;
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules?: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: number;
                            grossCostOrSalaryRate: number;
                        }[];
                    }[];
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    startDate?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/contracts/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the contract
 */
export function deleteContractsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/contracts/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to a contract
 */
export function putContractsById(body?: {
    data: {
        id: string;
        "type": "contract";
        attributes?: {
            typeOf?: number;
            employeeType?: number;
            workingTimeType?: number;
            numberOfHoursPerWeek?: number;
            classification?: string;
            startDate?: string;
            endDate?: string;
            probationEndDate?: string;
            renewalProbationEndDate?: string;
            monthlySalary?: number;
            hourlySalary?: number;
            forceHourlySalary?: boolean;
            forceContractAverageDailyProductionCost?: boolean;
            contractAverageDailyProductionCost?: number;
            dailyExpenses?: number;
            monthlyExpenses?: number;
            numberOfWorkingDays?: number;
            chargeFactor?: number;
            expensesDetails?: ({
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
            } | {
                id: string;
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
            })[];
            advantageTypes?: {
                reference: number;
            }[];
            exceptionalScales?: {
                reference: number;
                exceptionalRules: {
                    reference: number;
                    priceExcludingTaxOrPriceRate: null | number;
                    grossCostOrSalaryRate: null | number;
                }[];
            }[];
            informationComments?: string;
            currency?: number;
            currencyAgency?: number;
            exchangeRate?: number;
            exchangeRateAgency?: number;
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "wrongContractAverageDailyCost" | "wrongContractAverageDailyCostCandidate";
                    detail: string;
                    databaseContractAverageDailyCost?: number;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "contract";
                attributes?: {
                    typeOf?: number;
                    creationDate?: string;
                    updateDate?: string;
                    employeeType?: number;
                    workingTimeType?: number;
                    numberOfHoursPerWeek?: number;
                    classification?: string;
                    startDate?: string;
                    endDate?: string;
                    endReason?: number;
                    probationEndDate?: string;
                    renewalProbationEndDate?: string;
                    monthlySalary?: number;
                    hourlySalary?: number;
                    forceHourlySalary?: boolean;
                    contractAverageDailyCost?: number;
                    contractAverageDailyProductionCost?: number;
                    forceContractAverageDailyProductionCost?: boolean;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    numberOfWorkingDays?: number;
                    chargeFactor?: number;
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                    }[];
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: null | number;
                            grossCostOrSalaryRate: null | number;
                        }[];
                    }[];
                    informationComments?: string;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    parentContract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    childContract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    currency?: number;
                    exchangeRate?: number;
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                        "default"?: boolean;
                    }[];
                    allowExceptionalScalesOnContracts?: boolean;
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules?: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: number;
                            grossCostOrSalaryRate: number;
                        }[];
                    }[];
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    startDate?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/contracts/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postContractsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/contracts/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Get boondmanager contract's basic data
 */
export function getBoondmanagerContractsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "boondmanagercontract";
                attributes?: {
                    creationDate?: string;
                    documentLink?: string;
                    validatorDate?: string;
                    validatorFirstName?: string;
                    validatorLastName?: string;
                    validatorFunction?: string;
                    validatorState?: boolean;
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/boondmanager-contracts/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Update basic data related to a contract
 */
export function putBoondmanagerContractsById(body?: {
    data: {
        id: string;
        "type": "boondmanagercontract";
        attributes?: {
            validatorFirstName?: string;
            validatorLastName?: string;
            validatorFunction?: string;
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "boondmanagercontract";
                attributes?: {
                    creationDate?: string;
                    documentLink?: string;
                    validatorDate?: string;
                    validatorFirstName?: string;
                    validatorLastName?: string;
                    validatorFunction?: string;
                    validatorState?: boolean;
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/boondmanager-contracts/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteBoondmanagerContractsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/boondmanager-contracts/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postBoondmanagerContractsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/boondmanager-contracts/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Get resource's dashboard
 */
export function getDashboard(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "dashboard";
                attributes?: {
                    charts?: {
                        id: string;
                        typeOf: "funnel" | "pie" | "bar" | "gauge";
                    }[];
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/dashboard", {
        ...opts
    });
}
export function putDashboard(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "dashboard";
                attributes?: {
                    charts?: {
                        id: string;
                        typeOf: "funnel" | "pie" | "bar" | "gauge";
                    }[];
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/dashboard", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteDashboard(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/dashboard", {
        ...opts,
        method: "DELETE"
    });
}
export function postDashboard(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/dashboard", {
        ...opts,
        method: "POST"
    });
}
/**
 * Create a delivery
 */
export function postDeliveries(body?: {
    data: {
        "type": "delivery";
        attributes?: {
            startDate?: string;
            endDate?: string;
            title?: string;
            typeOf?: number;
            state?: number;
            averageDailyPriceExcludingTax?: number;
            forceAverageDailyPriceExcludingTax?: boolean;
            averageDailyContractCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            numberOfDaysFree?: number;
            informationComments?: string;
            conditions?: string;
            dailyExpenses?: number;
            monthlyExpenses?: number;
            numberOfWorkingDays?: number;
            weeklyWorkingHours?: number;
            averageHourlyPriceExcludingTax?: number;
            forceAverageHourlyPriceExcludingTax?: boolean;
            additionalTurnoverAndCosts?: {
                id: string;
                date: string;
                state: boolean;
                title: string;
                turnoverExcludingTax: number;
                costsExcludingTax: number;
                typeOf: number;
                purchase: {
                    data: null;
                } | {
                    id: string;
                    title?: string;
                    subscription: number;
                };
            }[];
            expensesDetails?: ({
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
                agency: {
                    id: string;
                };
            } | {
                id: string;
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
                agency: {
                    id: string;
                };
            })[];
            advantageTypes?: {
                reference: number;
                frequency?: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                category?: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                participationQuota?: number;
                agencyQuota?: number;
                employeeQuota?: number;
                agency?: {
                    id: string;
                };
            }[];
            exceptionalScales?: {
                reference: number;
                exceptionalRules: {
                    reference: number;
                    priceExcludingTaxOrPriceRate: null | number;
                    grossCostOrSalaryRate: null | number;
                }[];
                dependsOn: {
                    id: string;
                    "type": "agency";
                } | {
                    id: string;
                    "type": "company";
                };
            }[];
        };
        relationships: {
            project: {
                data: {
                    id: string;
                    "type": "project";
                };
            };
            dependsOn: {
                data: {
                    id: string;
                    "type": "resource";
                };
            } | {
                data: {
                    id: string;
                    "type": "product";
                };
            };
            contract?: {
                data: {
                    id: string;
                    "type": "contract";
                };
            };
            slave?: {
                data: {
                    id: string;
                    "type": "delivery";
                };
            };
            groupment?: {
                data: {
                    id: string;
                    "type": "groupment";
                };
            };
        };
    };
}, { forceTransferCreation, contact, company, projectTypeOf, opportunityTitle, addPositioning, sendMailToDependsOnManager, sendMailToProjectManager }: {
    forceTransferCreation?: boolean;
    contact?: number;
    company?: number;
    projectTypeOf?: number;
    opportunityTitle?: string;
    addPositioning?: boolean;
    sendMailToDependsOnManager?: boolean;
    sendMailToProjectManager?: boolean;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "delivery";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    title?: string;
                    typeOf?: number;
                    state?: number;
                    canShowAverageDailyContractCost?: boolean;
                    averageDailyPriceExcludingTax?: number;
                    forceAverageDailyPriceExcludingTax?: boolean;
                    averageDailyCost?: number;
                    averageDailyContractCost?: number;
                    numberOfDaysInvoicedOrQuantity?: number;
                    numberOfDaysFree?: number;
                    informationComments?: string;
                    conditions?: string;
                    turnoverSimulatedExcludingTax?: number;
                    costsSimulatedExcludingTax?: number;
                    marginSimulatedExcludingTax?: number;
                    profitabilitySimulated?: number;
                    occupationRate?: number;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    numberOfWorkingDays?: number;
                    weeklyWorkingHours?: number;
                    averageHourlyPriceExcludingTax?: number;
                    forceAverageHourlyPriceExcludingTax?: boolean;
                    additionalTurnoverAndCosts?: {
                        id: string;
                        date: string;
                        state: boolean;
                        title: string;
                        turnoverExcludingTax: number;
                        costsExcludingTax: number;
                        typeOf: number;
                        purchase: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            subscription: number;
                        };
                    }[];
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: null | number;
                            grossCostOrSalaryRate: null | number;
                        }[];
                        dependsOn: {
                            id: string;
                            "type": "agency";
                            name: string;
                            currency: number;
                            exchangeRate: number;
                            exceptionScales?: {
                                reference: number;
                                exceptionalRules?: {
                                    reference: number;
                                    name: string;
                                    priceExcludingTaxOrPriceRate: number;
                                    grossCostOrSalaryRate: number;
                                }[];
                            }[];
                        } | {
                            id: string;
                            "type": "company";
                            name: string;
                            exceptionScales?: {
                                reference: number;
                                exceptionalRules: {
                                    reference: number;
                                    name: string;
                                    priceExcludingTaxOrPriceRate: number;
                                    grossCostOrSalaryRate: number;
                                }[];
                            }[];
                        };
                        agency?: {
                            id: string;
                            name: string;
                            currency: number;
                            exchangeRate: number;
                            workUnitTypes: {
                                reference: number;
                                activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                name: string;
                            }[];
                        };
                    }[];
                    creationDate?: string;
                    updateDate?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                    contract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    purchase?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    };
                    groupment?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "groupment";
                        };
                    };
                    master?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    slave?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    contracts?: {
                        data: {
                            id: string;
                            "type": "contract";
                        }[];
                    };
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    name?: string;
                    subscription?: number;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                        state: boolean;
                    }[];
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules?: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: number;
                            grossCostOrSalaryRate: number;
                        }[];
                    }[];
                    exchangeRate?: number;
                    currency?: number;
                    allowAdvantagesOnProjects?: boolean;
                    allowExceptionalScalesOnProjects?: boolean;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    workUnitRate?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    technical?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: number;
                            grossCostOrSalaryRate: number;
                        }[];
                    }[];
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    contractAverageDailyCost?: number;
                    startDate?: string;
                    endDate?: string;
                    monthlySalary?: number;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
            } | {
                id: string;
                "type": "purchase";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/deliveries${QS.query(QS.explode({
        forceTransferCreation,
        contact,
        company,
        projectTypeOf,
        opportunityTitle,
        addPositioning,
        sendMailToDependsOnManager,
        sendMailToProjectManager
    }))}`, oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function getDeliveries(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/deliveries", {
        ...opts
    });
}
export function deleteDeliveries(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/deliveries", {
        ...opts,
        method: "DELETE"
    });
}
export function putDeliveries(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/deliveries", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get delivery's basic data
 */
export function getDeliveriesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "delivery";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    title?: string;
                    typeOf?: number;
                    state?: number;
                    canShowAverageDailyContractCost?: boolean;
                    averageDailyPriceExcludingTax?: number;
                    forceAverageDailyPriceExcludingTax?: boolean;
                    averageDailyCost?: number;
                    averageDailyContractCost?: number;
                    numberOfDaysInvoicedOrQuantity?: number;
                    numberOfDaysFree?: number;
                    informationComments?: string;
                    conditions?: string;
                    turnoverSimulatedExcludingTax?: number;
                    costsSimulatedExcludingTax?: number;
                    marginSimulatedExcludingTax?: number;
                    profitabilitySimulated?: number;
                    occupationRate?: number;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    numberOfWorkingDays?: number;
                    weeklyWorkingHours?: number;
                    averageHourlyPriceExcludingTax?: number;
                    forceAverageHourlyPriceExcludingTax?: boolean;
                    additionalTurnoverAndCosts?: {
                        id: string;
                        date: string;
                        state: boolean;
                        title: string;
                        turnoverExcludingTax: number;
                        costsExcludingTax: number;
                        typeOf: number;
                        purchase: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            subscription: number;
                        };
                    }[];
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: null | number;
                            grossCostOrSalaryRate: null | number;
                        }[];
                        dependsOn: {
                            id: string;
                            "type": "agency";
                            name: string;
                            currency: number;
                            exchangeRate: number;
                            exceptionScales?: {
                                reference: number;
                                exceptionalRules?: {
                                    reference: number;
                                    name: string;
                                    priceExcludingTaxOrPriceRate: number;
                                    grossCostOrSalaryRate: number;
                                }[];
                            }[];
                        } | {
                            id: string;
                            "type": "company";
                            name: string;
                            exceptionScales?: {
                                reference: number;
                                exceptionalRules: {
                                    reference: number;
                                    name: string;
                                    priceExcludingTaxOrPriceRate: number;
                                    grossCostOrSalaryRate: number;
                                }[];
                            }[];
                        };
                        agency?: {
                            id: string;
                            name: string;
                            currency: number;
                            exchangeRate: number;
                            workUnitTypes: {
                                reference: number;
                                activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                name: string;
                            }[];
                        };
                    }[];
                    creationDate?: string;
                    updateDate?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                    contract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    purchase?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    };
                    groupment?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "groupment";
                        };
                    };
                    master?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    slave?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    contracts?: {
                        data: {
                            id: string;
                            "type": "contract";
                        }[];
                    };
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    name?: string;
                    subscription?: number;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                        state: boolean;
                    }[];
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules?: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: number;
                            grossCostOrSalaryRate: number;
                        }[];
                    }[];
                    exchangeRate?: number;
                    currency?: number;
                    allowAdvantagesOnProjects?: boolean;
                    allowExceptionalScalesOnProjects?: boolean;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    workUnitRate?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    technical?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: number;
                            grossCostOrSalaryRate: number;
                        }[];
                    }[];
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    contractAverageDailyCost?: number;
                    startDate?: string;
                    endDate?: string;
                    monthlySalary?: number;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
            } | {
                id: string;
                "type": "purchase";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/deliveries/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the delivery
 */
export function deleteDeliveriesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/deliveries/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to a delivery
 */
export function putDeliveriesById(body?: {
    data: {
        id: string;
        "type": "delivery";
        attributes?: {
            startDate?: string;
            endDate?: string;
            title?: string;
            typeOf?: number;
            state?: number;
            averageDailyPriceExcludingTax?: number;
            forceAverageDailyPriceExcludingTax?: boolean;
            averageDailyContractCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            numberOfDaysFree?: number;
            informationComments?: string;
            conditions?: string;
            dailyExpenses?: number;
            monthlyExpenses?: number;
            numberOfWorkingDays?: number;
            weeklyWorkingHours?: number;
            averageHourlyPriceExcludingTax?: number;
            forceAverageHourlyPriceExcludingTax?: boolean;
            additionalTurnoverAndCosts?: {
                id: string;
                date: string;
                state: boolean;
                title: string;
                turnoverExcludingTax: number;
                costsExcludingTax: number;
                typeOf: number;
                purchase: {
                    data: null;
                } | {
                    id: string;
                    title?: string;
                    subscription: number;
                };
            }[];
            expensesDetails?: ({
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
                agency: {
                    id: string;
                };
            } | {
                id: string;
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
                agency: {
                    id: string;
                };
            })[];
            advantageTypes?: {
                reference: number;
                frequency?: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                category?: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                participationQuota?: number;
                agencyQuota?: number;
                employeeQuota?: number;
                agency?: {
                    id: string;
                };
            }[];
            exceptionalScales?: {
                reference: number;
                exceptionalRules: {
                    reference: number;
                    priceExcludingTaxOrPriceRate: null | number;
                    grossCostOrSalaryRate: null | number;
                }[];
                dependsOn: {
                    id: string;
                    "type": "agency";
                } | {
                    id: string;
                    "type": "company";
                };
            }[];
        };
        relationships?: {
            contract?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "contract";
                };
            };
            slave?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "delivery";
                };
            };
        };
    };
}, { contact, forceTransferCreation, company, projectTypeOf, opportunityTitle, id }: {
    contact?: number;
    forceTransferCreation?: boolean;
    company?: number;
    projectTypeOf?: number;
    opportunityTitle?: string;
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "delivery";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    title?: string;
                    typeOf?: number;
                    state?: number;
                    canShowAverageDailyContractCost?: boolean;
                    averageDailyPriceExcludingTax?: number;
                    forceAverageDailyPriceExcludingTax?: boolean;
                    averageDailyCost?: number;
                    averageDailyContractCost?: number;
                    numberOfDaysInvoicedOrQuantity?: number;
                    numberOfDaysFree?: number;
                    informationComments?: string;
                    conditions?: string;
                    turnoverSimulatedExcludingTax?: number;
                    costsSimulatedExcludingTax?: number;
                    marginSimulatedExcludingTax?: number;
                    profitabilitySimulated?: number;
                    occupationRate?: number;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    numberOfWorkingDays?: number;
                    weeklyWorkingHours?: number;
                    averageHourlyPriceExcludingTax?: number;
                    forceAverageHourlyPriceExcludingTax?: boolean;
                    additionalTurnoverAndCosts?: {
                        id: string;
                        date: string;
                        state: boolean;
                        title: string;
                        turnoverExcludingTax: number;
                        costsExcludingTax: number;
                        typeOf: number;
                        purchase: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            subscription: number;
                        };
                    }[];
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: null | number;
                            grossCostOrSalaryRate: null | number;
                        }[];
                        dependsOn: {
                            id: string;
                            "type": "agency";
                            name: string;
                            currency: number;
                            exchangeRate: number;
                            exceptionScales?: {
                                reference: number;
                                exceptionalRules?: {
                                    reference: number;
                                    name: string;
                                    priceExcludingTaxOrPriceRate: number;
                                    grossCostOrSalaryRate: number;
                                }[];
                            }[];
                        } | {
                            id: string;
                            "type": "company";
                            name: string;
                            exceptionScales?: {
                                reference: number;
                                exceptionalRules: {
                                    reference: number;
                                    name: string;
                                    priceExcludingTaxOrPriceRate: number;
                                    grossCostOrSalaryRate: number;
                                }[];
                            }[];
                        };
                        agency?: {
                            id: string;
                            name: string;
                            currency: number;
                            exchangeRate: number;
                            workUnitTypes: {
                                reference: number;
                                activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                name: string;
                            }[];
                        };
                    }[];
                    creationDate?: string;
                    updateDate?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                    contract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    purchase?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    };
                    groupment?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "groupment";
                        };
                    };
                    master?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    slave?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    contracts?: {
                        data: {
                            id: string;
                            "type": "contract";
                        }[];
                    };
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    name?: string;
                    subscription?: number;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    advantageTypes?: {
                        reference: number;
                        name: string;
                        frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                        category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                        participationQuota: number;
                        agencyQuota: number;
                        employeeQuota: number;
                        state: boolean;
                    }[];
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules?: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: number;
                            grossCostOrSalaryRate: number;
                        }[];
                    }[];
                    exchangeRate?: number;
                    currency?: number;
                    allowAdvantagesOnProjects?: boolean;
                    allowExceptionalScalesOnProjects?: boolean;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    workUnitRate?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    technical?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    exceptionalScales?: {
                        reference: number;
                        name: string;
                        workUnitTypes: {
                            reference: number;
                            name: string;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        }[];
                        exceptionalRules: {
                            reference: number;
                            name: string;
                            priceExcludingTaxOrPriceRate: number;
                            grossCostOrSalaryRate: number;
                        }[];
                    }[];
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    contractAverageDailyCost?: number;
                    startDate?: string;
                    endDate?: string;
                    monthlySalary?: number;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
            } | {
                id: string;
                "type": "purchase";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/deliveries/${encodeURIComponent(id)}${QS.query(QS.explode({
        contact,
        forceTransferCreation,
        company,
        projectTypeOf,
        opportunityTitle
    }))}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postDeliveriesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/deliveries/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search deliveries & groupments
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/deliveries-groupments.csv?keywords=MIS100*
 *
 */
export function getDeliveriesGroupments(body?: string, { keywords, projectTypes, projectStates, deliveryStates, expertiseAreas, activityAreas, transferType, sumAdditionalData, showGroupment, period, startDate, endDate, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    projectTypes?: number[];
    projectStates?: number[];
    deliveryStates?: number[];
    expertiseAreas?: string[];
    activityAreas?: string;
    transferType?: string;
    sumAdditionalData?: boolean;
    showGroupment?: boolean;
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                    turnoverSimulatedExcludingTax?: number;
                    marginSimulatedExcludingTax?: number;
                    profitabilitySimulated?: number;
                };
                [key: string]: any;
            };
            data: ({
                id: string;
                "type": "delivery";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    title?: string;
                    turnoverSimulatedExcludingTax?: number;
                    marginSimulatedExcludingTax?: number;
                    profitabilitySimulated?: number;
                    canReadDelivery?: boolean;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    groupment?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                };
            } | {
                id: string;
                "type": "groupment";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    title?: string;
                    turnoverSimulatedExcludingTax?: number;
                    marginSimulatedExcludingTax?: number;
                    profitabilitySimulated?: number;
                    canReadGroupment?: boolean;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            })[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/deliveries-groupments${QS.query(QS.explode({
        keywords,
        projectTypes,
        projectStates,
        deliveryStates,
        expertiseAreas,
        activityAreas,
        transferType,
        sumAdditionalData,
        showGroupment,
        period,
        startDate,
        endDate,
        flags,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
export function postDeliveriesGroupments(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/deliveries-groupments", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteDeliveriesGroupments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/deliveries-groupments", {
        ...opts,
        method: "DELETE"
    });
}
export function putDeliveriesGroupments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/deliveries-groupments", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Delete the device
 */
export function deleteDevicesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/devices/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function getDevicesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/devices/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
export function putDevicesById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/devices/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postDevicesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/devices/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Create a document
 */
export function postDocuments(body?: {
    parentType: string;
    parentId: number;
    expenseId?: number;
    qualify?: boolean;
    ocr?: boolean;
    file?: any;
    fileUrl?: string;
    parsing?: boolean;
    hash?: string;
    parsingData?: string;
    temporary?: boolean;
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                    category?: "other" | "signedProof" | "signatureRequested";
                    ocrData?: {
                        expenseSummary?: {
                            startDate?: string;
                            expenseType?: {
                                reference?: number;
                                taxRate?: number;
                                [key: string]: any;
                            };
                            amountExcludingTax?: number;
                            taxAmount?: number;
                            tax?: number;
                            currency?: number;
                            isKilometricExpense?: any;
                            [key: string]: any;
                        };
                        [key: string]: any;
                    }[];
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    [key: string]: any;
                };
            };
            included?: ({
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    canReadProject?: boolean;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/documents", oazapfts.multipart({
        ...opts,
        method: "POST",
        body
    }));
}
export function getDocuments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: Blob;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/documents", {
        ...opts
    });
}
export function deleteDocuments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/documents", {
        ...opts,
        method: "DELETE"
    });
}
export function putDocuments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/documents", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Search documents for app's viewer.
 *
 * You must have an app's viewer installed.
 *
 */
export function getDocumentsViewer(body?: string, { documents }: {
    documents?: string[];
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "appError";
                    detail: string;
                    app_error?: string;
                    app?: {
                        id: string;
                        name: string;
                        code: string;
                    };
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                    urlEmbedded?: string;
                    urlMain?: string;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/documents/viewer${QS.query(QS.explode({
        documents
    }))}`, {
        ...opts,
        body
    });
}
export function postDocumentsViewer(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/documents/viewer", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteDocumentsViewer(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/documents/viewer", {
        ...opts,
        method: "DELETE"
    });
}
export function putDocumentsViewer(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/documents/viewer", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get document content
 */
export function getDocumentsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: Blob;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/documents/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Update information data related to a document
 */
export function putDocumentsById(body?: {
    data: {
        id: string;
        "type": "document";
        attributes?: {
            name: string;
            category: "other" | "signedProof" | "signatureRequested";
        };
        relationships?: {
            project?: {
                data: {
                    id: string;
                    "type": "project";
                };
            };
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            data: {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                    category?: "other" | "signedProof" | "signatureRequested";
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    canReadProject?: boolean;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/documents/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
/**
 * Delete the document
 */
export function deleteDocumentsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/documents/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postDocumentsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/documents/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Manage download center
 *
 */
export function getDownloadCenter(body?: string, { perimeterManagers, folder }: {
    perimeterManagers?: number[];
    folder?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "downloadcenterfolder";
                attributes?: {
                    name?: string;
                    urlVisitor?: string;
                    isLocked?: any;
                };
                relationships?: {
                    files?: {
                        data: {
                            id: string;
                            "type": "downloadcenterfile";
                        }[];
                    };
                };
            }[];
            included?: {
                id: string;
                "type": "downloadcenterfile";
                attributes?: {
                    name?: string;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/download-center${QS.query(QS.explode({
        perimeterManagers,
        folder
    }))}`, {
        ...opts,
        body
    });
}
export function putDownloadCenter(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "downloadcenterfolder";
                attributes?: {
                    name?: string;
                    urlVisitor?: string;
                    isLocked?: any;
                };
                relationships?: {
                    files?: {
                        data: {
                            id: string;
                            "type": "downloadcenterfile";
                        }[];
                    };
                };
            }[];
            included?: {
                id: string;
                "type": "downloadcenterfile";
                attributes?: {
                    name?: string;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/download-center", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteDownloadCenter(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/download-center", {
        ...opts,
        method: "DELETE"
    });
}
export function postDownloadCenter(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/download-center", {
        ...opts,
        method: "POST"
    });
}
/**
 * Search download center's files
 *
 */
export function getDownloadCenterByPerimeterManagerAndFolder(body?: string, { key, customerCode, perimeterManager, folder }: {
    key?: string;
    customerCode?: string;
    perimeterManager?: string;
    folder?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "downloadcenterfolder";
                attributes?: {
                    name?: string;
                    urlVisitor?: string;
                };
                relationships?: {
                    files?: {
                        data: {
                            id: string;
                            "type": "downloadcenterfile";
                        }[];
                    };
                };
            };
            included?: {
                id: string;
                "type": "downloadcenterfile";
                attributes?: {
                    name?: string;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/download-center/${encodeURIComponent(perimeterManager)}/${encodeURIComponent(folder)}${QS.query(QS.explode({
        key,
        customerCode
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Delete the download center's folder
 */
export function deleteDownloadCenterByPerimeterManagerAndFolder(body?: string, { perimeterManager, folder }: {
    perimeterManager?: string;
    folder?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/download-center/${encodeURIComponent(perimeterManager)}/${encodeURIComponent(folder)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function putDownloadCenterByPerimeterManagerAndFolder(body?: any, { perimeterManager, folder }: {
    perimeterManager?: string;
    folder?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "downloadcenterfolder";
                attributes?: {
                    name?: string;
                    urlVisitor?: string;
                };
                relationships?: {
                    files?: {
                        data: {
                            id: string;
                            "type": "downloadcenterfile";
                        }[];
                    };
                };
            };
            included?: {
                id: string;
                "type": "downloadcenterfile";
                attributes?: {
                    name?: string;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/download-center/${encodeURIComponent(perimeterManager)}/${encodeURIComponent(folder)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postDownloadCenterByPerimeterManagerAndFolder(body?: string, { perimeterManager, folder }: {
    perimeterManager?: string;
    folder?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/download-center/${encodeURIComponent(perimeterManager)}/${encodeURIComponent(folder)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Delete sign request
 */
export function deleteSignatures(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/signatures", {
        ...opts,
        method: "DELETE"
    });
}
export function getSignatures(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/signatures", {
        ...opts
    });
}
export function putSignatures(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/signatures", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postSignatures(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/signatures", {
        ...opts,
        method: "POST"
    });
}
/**
 * Search expenses
 *
 * This API is accessible only if :
 * * x-JWT security scheme is used
 * * `allRights` into the payload is `true`
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/expenses.csv?keywords=TPS1*
 *
 */
export function getExpenses(body?: string, { keywords, activityType, category, resourceTypes, excludeResourceTypes, period, startDate, endDate, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    activityType?: "absence" | "internal" | "production";
    category?: "actual" | "fixed";
    resourceTypes?: number[];
    excludeResourceTypes?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "expense";
                attributes?: {
                    category?: "actual" | "fixed";
                    activityType?: "production" | "absence" | "internal";
                    expenseType?: {
                        reference: number;
                        taxRate: number;
                        name: string;
                    };
                    row?: number;
                    startDate?: string;
                    reinvoiced?: boolean;
                    amountIncludingTax?: number;
                    tax?: number;
                    numberOfKilometers?: number;
                    "number"?: number;
                    title?: string;
                    currency?: number;
                    exchangeRate?: number;
                    isKilometricExpense?: boolean;
                };
                relationships?: {
                    expensesReport?: {
                        data: {
                            id: string;
                            "type": "expensesreport";
                        };
                    };
                    delivery?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    batch?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "batch";
                        };
                    };
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "expensesreport";
                attributes?: {
                    term?: string;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                    ratePerKilometerType?: {
                        reference: number;
                        name: string;
                        amount: number;
                    };
                    advance?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "batch";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    workUnitRate?: number;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/expenses${QS.query(QS.explode({
        keywords,
        activityType,
        category,
        resourceTypes,
        excludeResourceTypes,
        period,
        startDate,
        endDate,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
export function postExpenses(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/expenses", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteExpenses(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/expenses", {
        ...opts,
        method: "DELETE"
    });
}
export function putExpenses(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/expenses", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Search expenses
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/expenses-reports.csv?keywords=EXP1*
 *
 */
export function getExpensesReports(startMonth: string, endMonth: string, body?: string, { keywords, perimeterAgenciesType, resourceTypes, validationStates, closed, encoding, extractType, exportToDownloadCenter, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    perimeterAgenciesType?: string;
    resourceTypes?: number[];
    validationStates?: ("waitingForValidation" | "validated" | "rejected")[];
    closed?: boolean;
    encoding?: string;
    extractType?: string;
    exportToDownloadCenter?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                canExportCertified?: boolean;
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "expensesreport";
                attributes?: {
                    term?: string;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                    paid?: boolean;
                    closed?: boolean;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/expenses-reports${QS.query(QS.explode({
        keywords,
        perimeterAgenciesType,
        resourceTypes,
        validationStates,
        closed,
        startMonth,
        endMonth,
        encoding,
        extractType,
        exportToDownloadCenter,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create an expenses
 */
export function postExpensesReports(body?: {
    data: {
        "type": "expensesreport";
        attributes: {
            term: string;
            informationComments?: string;
            ratePerKilometerType?: {
                reference: number;
                amount: number;
            };
            paid?: boolean;
            advance?: number;
            actualExpenses?: ({
                startDate: string;
                "number": number;
                title: string;
                currency?: number;
                exchangeRate?: number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                tax?: number;
                reinvoiced: boolean;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                "number": number;
                title: string;
                currency?: number;
                exchangeRate?: number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                tax?: number;
                reinvoiced: boolean;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            })[];
            fixedExpenses?: ({
                startDate: string;
                row: number | number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                row: number | number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            })[];
        };
        relationships: {
            resource: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "expensesOutsideContractDates" | "expensesOutsideDeliveryDates";
                    detail: string;
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title: string;
                        startDate: string;
                        endDate: string;
                    };
                }[];
                expectedValidatorsAllowedForValidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForUnvalidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForReject?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                isOcrEnabled?: boolean;
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "expensesreport";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    term?: string;
                    informationComments?: string;
                    closed?: boolean;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                    ratePerKilometerType?: {
                        reference: number;
                        name: string;
                        amount: number;
                    };
                    paid?: boolean;
                    advance?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    actualExpenses?: {
                        id: string;
                        startDate: string;
                        "number": number;
                        title: string;
                        currency: number;
                        exchangeRate: number;
                        numberOfKilometers: number;
                        amountIncludingTax: number;
                        tax: number;
                        reinvoiced: boolean;
                        isKilometricExpense: boolean;
                        activityType: "production" | "absence" | "internal";
                        file?: string;
                        expenseType: {
                            data: null;
                        } | {
                            reference: number;
                            taxRate: number;
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    fixedExpenses?: {
                        id: string;
                        startDate: string;
                        row: number;
                        numberOfKilometers: number;
                        amountIncludingTax: number;
                        isKilometricExpense: boolean;
                        activityType: "production" | "absence" | "internal";
                        expenseType: {
                            data: null;
                        } | {
                            reference: number;
                            taxRate: number;
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    projectsExpenses?: {
                        startDate: string;
                        row: number;
                        numberOfKilometers: number;
                        amountIncludingTax: number;
                        isKilometricExpense: boolean;
                        activityType: "production" | "absence" | "internal";
                        expenseType: {
                            data: null;
                        } | {
                            reference: number;
                            taxRate: number;
                            name: string;
                        };
                        delivery: {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        project: {
                            id: string;
                            reference?: string;
                        };
                    }[];
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    timesReport?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "timesreport";
                        };
                    };
                    orders?: {
                        data: {
                            id: string;
                            "type": "order";
                        }[];
                    };
                    projects?: {
                        data: {
                            id: string;
                            "type": "project";
                        }[];
                    };
                    validations?: {
                        data: {
                            id: string;
                            "type": "validation";
                        }[];
                    };
                    validationWorkflow?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    certification?: {
                        data: {
                            id: string;
                            "type": "expenseshistory";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    currency?: number;
                    exchangeRate?: number;
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    ratePerKilometerTypes?: {
                        reference: number;
                        name: string;
                        amount: number;
                    }[];
                    expensesLegals?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                };
            } | {
                id: string;
                "type": "batch";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
                relationships?: {
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveries?: any[];
                    batches?: any[];
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "validation";
                attributes?: {
                    date?: string;
                    state?: "waitingForValidation" | "validated" | "rejected";
                    reason?: string;
                };
                relationships?: {
                    realValidator?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    expectedValidator?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "timesreport";
                attributes?: {
                    regularTimes?: {
                        id: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    reference?: string;
                    "number"?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "expenseshistory";
                attributes?: {
                    updateDate?: string;
                    state?: 0 | 1 | 2;
                    errorMsg?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/expenses-reports", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteExpensesReports(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/expenses-reports", {
        ...opts,
        method: "DELETE"
    });
}
export function putExpensesReports(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/expenses-reports", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty expenses default basic data
 */
export function getExpensesReportsDefault(resource: number, term: string, body?: string, { agency }: {
    agency?: number;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "expensesOutsideContractDates" | "expensesOutsideDeliveryDates";
                    detail: string;
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title: string;
                        startDate: string;
                        endDate: string;
                    };
                }[];
                expectedValidatorsAllowedForValidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForUnvalidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForReject?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                isOcrEnabled?: boolean;
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "expensesreport";
                attributes?: {
                    term?: string;
                    ratePerKilometerType?: {
                        reference: number;
                        name: string;
                        amount: number;
                    };
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    fixedExpenses?: {
                        startDate: string;
                        row: number;
                        numberOfKilometers: number;
                        amountIncludingTax: number;
                        isKilometricExpense: boolean;
                        activityType: "production" | "absence" | "internal";
                        expenseType: {
                            data: null;
                        } | {
                            reference: number;
                            taxRate: number;
                            name: string;
                        };
                    }[];
                    projectsExpenses?: {
                        startDate: string;
                        row: number;
                        numberOfKilometers: number;
                        amountIncludingTax: number;
                        isKilometricExpense: boolean;
                        activityType: "production" | "absence" | "internal";
                        expenseType: {
                            data: null;
                        } | {
                            reference: number;
                            taxRate: number;
                            name: string;
                        };
                        delivery: {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        project: {
                            id: string;
                            reference?: string;
                        };
                    }[];
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    timesReport?: {
                        data: null;
                    } | {
                        id: string;
                        "type": "timesreport";
                    };
                    projects?: {
                        data: {
                            id: string;
                            "type": "project";
                        }[];
                    };
                    validationWorkflow?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    currency?: number;
                    exchangeRate?: number;
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    ratePerKilometerTypes?: {
                        reference: number;
                        name: string;
                        amount: number;
                    }[];
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                };
            } | {
                id: string;
                "type": "batch";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
                relationships?: {
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveries?: any[];
                    batches?: any[];
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "timesreport";
                relationships?: {
                    regularTimes?: {
                        id: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/expenses-reports/default${QS.query(QS.explode({
        resource,
        term,
        agency
    }))}`, {
        ...opts,
        body
    });
}
export function putExpensesReportsDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "expensesOutsideContractDates" | "expensesOutsideDeliveryDates";
                    detail: string;
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title: string;
                        startDate: string;
                        endDate: string;
                    };
                }[];
                expectedValidatorsAllowedForValidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForUnvalidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForReject?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                isOcrEnabled?: boolean;
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "expensesreport";
                attributes?: {
                    term?: string;
                    ratePerKilometerType?: {
                        reference: number;
                        name: string;
                        amount: number;
                    };
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    fixedExpenses?: {
                        startDate: string;
                        row: number;
                        numberOfKilometers: number;
                        amountIncludingTax: number;
                        isKilometricExpense: boolean;
                        activityType: "production" | "absence" | "internal";
                        expenseType: {
                            data: null;
                        } | {
                            reference: number;
                            taxRate: number;
                            name: string;
                        };
                    }[];
                    projectsExpenses?: {
                        startDate: string;
                        row: number;
                        numberOfKilometers: number;
                        amountIncludingTax: number;
                        isKilometricExpense: boolean;
                        activityType: "production" | "absence" | "internal";
                        expenseType: {
                            data: null;
                        } | {
                            reference: number;
                            taxRate: number;
                            name: string;
                        };
                        delivery: {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        project: {
                            id: string;
                            reference?: string;
                        };
                    }[];
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    timesReport?: {
                        data: null;
                    } | {
                        id: string;
                        "type": "timesreport";
                    };
                    projects?: {
                        data: {
                            id: string;
                            "type": "project";
                        }[];
                    };
                    validationWorkflow?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    currency?: number;
                    exchangeRate?: number;
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    ratePerKilometerTypes?: {
                        reference: number;
                        name: string;
                        amount: number;
                    }[];
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                };
            } | {
                id: string;
                "type": "batch";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
                relationships?: {
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveries?: any[];
                    batches?: any[];
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "timesreport";
                relationships?: {
                    regularTimes?: {
                        id: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/expenses-reports/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteExpensesReportsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/expenses-reports/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postExpensesReportsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/expenses-reports/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get expenses basic data
 */
export function getExpensesReportsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "expensesOutsideContractDates" | "expensesOutsideDeliveryDates";
                    detail: string;
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title: string;
                        startDate: string;
                        endDate: string;
                    };
                }[];
                expectedValidatorsAllowedForValidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForUnvalidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForReject?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                isOcrEnabled?: boolean;
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "expensesreport";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    term?: string;
                    informationComments?: string;
                    closed?: boolean;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                    ratePerKilometerType?: {
                        reference: number;
                        name: string;
                        amount: number;
                    };
                    paid?: boolean;
                    advance?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    actualExpenses?: {
                        id: string;
                        startDate: string;
                        "number": number;
                        title: string;
                        currency: number;
                        exchangeRate: number;
                        numberOfKilometers: number;
                        amountIncludingTax: number;
                        tax: number;
                        reinvoiced: boolean;
                        isKilometricExpense: boolean;
                        activityType: "production" | "absence" | "internal";
                        file?: string;
                        expenseType: {
                            data: null;
                        } | {
                            reference: number;
                            taxRate: number;
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    fixedExpenses?: {
                        id: string;
                        startDate: string;
                        row: number;
                        numberOfKilometers: number;
                        amountIncludingTax: number;
                        isKilometricExpense: boolean;
                        activityType: "production" | "absence" | "internal";
                        expenseType: {
                            data: null;
                        } | {
                            reference: number;
                            taxRate: number;
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    projectsExpenses?: {
                        startDate: string;
                        row: number;
                        numberOfKilometers: number;
                        amountIncludingTax: number;
                        isKilometricExpense: boolean;
                        activityType: "production" | "absence" | "internal";
                        expenseType: {
                            data: null;
                        } | {
                            reference: number;
                            taxRate: number;
                            name: string;
                        };
                        delivery: {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        project: {
                            id: string;
                            reference?: string;
                        };
                    }[];
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    timesReport?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "timesreport";
                        };
                    };
                    orders?: {
                        data: {
                            id: string;
                            "type": "order";
                        }[];
                    };
                    projects?: {
                        data: {
                            id: string;
                            "type": "project";
                        }[];
                    };
                    validations?: {
                        data: {
                            id: string;
                            "type": "validation";
                        }[];
                    };
                    validationWorkflow?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    certification?: {
                        data: {
                            id: string;
                            "type": "expenseshistory";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    currency?: number;
                    exchangeRate?: number;
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    ratePerKilometerTypes?: {
                        reference: number;
                        name: string;
                        amount: number;
                    }[];
                    expensesLegals?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                };
            } | {
                id: string;
                "type": "batch";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
                relationships?: {
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveries?: any[];
                    batches?: any[];
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "validation";
                attributes?: {
                    date?: string;
                    state?: "waitingForValidation" | "validated" | "rejected";
                    reason?: string;
                };
                relationships?: {
                    realValidator?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    expectedValidator?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "timesreport";
                attributes?: {
                    regularTimes?: {
                        id: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    reference?: string;
                    "number"?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "expenseshistory";
                attributes?: {
                    updateDate?: string;
                    state?: 0 | 1 | 2;
                    errorMsg?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/expenses-reports/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the expenses
 */
export function deleteExpensesReportsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/expenses-reports/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to an expenses
 */
export function putExpensesReportsById(body?: {
    data: {
        id: string;
        "type": "expensesreport";
        attributes?: {
            informationComments?: string;
            ratePerKilometerType?: {
                reference: number;
                amount: number;
            };
            paid?: boolean;
            advance?: number;
            actualExpenses?: ({
                startDate: string;
                "number": number;
                title: string;
                currency?: number;
                exchangeRate?: number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                tax?: number;
                reinvoiced: boolean;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                "number": number;
                title: string;
                currency?: number;
                exchangeRate?: number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                tax?: number;
                reinvoiced: boolean;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            })[];
            fixedExpenses?: ({
                startDate: string;
                row: number | number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                row: number | number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            })[];
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "expensesOutsideContractDates" | "expensesOutsideDeliveryDates";
                    detail: string;
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title: string;
                        startDate: string;
                        endDate: string;
                    };
                }[];
                expectedValidatorsAllowedForValidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForUnvalidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForReject?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                isOcrEnabled?: boolean;
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "expensesreport";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    term?: string;
                    informationComments?: string;
                    closed?: boolean;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                    ratePerKilometerType?: {
                        reference: number;
                        name: string;
                        amount: number;
                    };
                    paid?: boolean;
                    advance?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    actualExpenses?: {
                        id: string;
                        startDate: string;
                        "number": number;
                        title: string;
                        currency: number;
                        exchangeRate: number;
                        numberOfKilometers: number;
                        amountIncludingTax: number;
                        tax: number;
                        reinvoiced: boolean;
                        isKilometricExpense: boolean;
                        activityType: "production" | "absence" | "internal";
                        file?: string;
                        expenseType: {
                            data: null;
                        } | {
                            reference: number;
                            taxRate: number;
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    fixedExpenses?: {
                        id: string;
                        startDate: string;
                        row: number;
                        numberOfKilometers: number;
                        amountIncludingTax: number;
                        isKilometricExpense: boolean;
                        activityType: "production" | "absence" | "internal";
                        expenseType: {
                            data: null;
                        } | {
                            reference: number;
                            taxRate: number;
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    projectsExpenses?: {
                        startDate: string;
                        row: number;
                        numberOfKilometers: number;
                        amountIncludingTax: number;
                        isKilometricExpense: boolean;
                        activityType: "production" | "absence" | "internal";
                        expenseType: {
                            data: null;
                        } | {
                            reference: number;
                            taxRate: number;
                            name: string;
                        };
                        delivery: {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        project: {
                            id: string;
                            reference?: string;
                        };
                    }[];
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    timesReport?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "timesreport";
                        };
                    };
                    orders?: {
                        data: {
                            id: string;
                            "type": "order";
                        }[];
                    };
                    projects?: {
                        data: {
                            id: string;
                            "type": "project";
                        }[];
                    };
                    validations?: {
                        data: {
                            id: string;
                            "type": "validation";
                        }[];
                    };
                    validationWorkflow?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    certification?: {
                        data: {
                            id: string;
                            "type": "expenseshistory";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    currency?: number;
                    exchangeRate?: number;
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    ratePerKilometerTypes?: {
                        reference: number;
                        name: string;
                        amount: number;
                    }[];
                    expensesLegals?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                };
            } | {
                id: string;
                "type": "batch";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
                relationships?: {
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveries?: any[];
                    batches?: any[];
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "validation";
                attributes?: {
                    date?: string;
                    state?: "waitingForValidation" | "validated" | "rejected";
                    reason?: string;
                };
                relationships?: {
                    realValidator?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    expectedValidator?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "timesreport";
                attributes?: {
                    regularTimes?: {
                        id: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    reference?: string;
                    "number"?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "expenseshistory";
                attributes?: {
                    updateDate?: string;
                    state?: 0 | 1 | 2;
                    errorMsg?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/expenses-reports/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postExpensesReportsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/expenses-reports/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search flags
 */
export function getFlags(body?: string, { perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "flag";
                attributes?: {
                    name?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            }[];
            included?: {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/flags${QS.query(QS.explode({
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a flag
 */
export function postFlags(body?: {
    data: {
        "type": "flag";
        attributes: {
            name: string;
        };
        relationships: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "flag";
                attributes?: {
                    name?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/flags", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteFlags(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/flags", {
        ...opts,
        method: "DELETE"
    });
}
export function putFlags(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/flags", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get flag's basic data
 */
export function getFlagsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "flag";
                attributes?: {
                    name?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/flags/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the flag
 */
export function deleteFlagsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/flags/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to a flag
 */
export function putFlagsById(body?: {
    data: {
        id: string;
        "type": "flag";
        attributes?: {
            name?: string;
        };
        relationships?: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "flag";
                attributes?: {
                    name?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/flags/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postFlagsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/flags/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Log out user
 */
export function deleteGoogleById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/google/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postGoogleById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/google/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
export function putGoogleById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/google/${encodeURIComponent(id)}`, {
        ...opts,
        method: "PUT",
        body
    });
}
export function getGoogleById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/google/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Create a groupment
 */
export function postGroupments(body?: {
    data: {
        "type": "groupment";
        attributes?: {
            startDate?: string;
            endDate?: string;
            title?: string;
            averageDailyPriceExcludingTax?: number;
            averageDailyCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            informationComments?: string;
            loadDistribution?: "manual" | "proportional" | "weighted";
            deliveries?: {
                delivery: {
                    id: string;
                    title: string;
                    startDate: string;
                    endDate: string;
                    averageDailyPriceExcludingTax?: number;
                    averageDailyCost: number;
                    additionalTurnoverExcludingTax?: number;
                    additionalCostsExcludingTax?: number;
                    dependsOn?: {
                        id: string;
                        firstName: string;
                        lastName: string;
                    };
                    groupment?: {
                        data: null;
                    } | {
                        id: string;
                    };
                };
                weighting: number;
                schedule: number;
            }[];
        };
        relationships: {
            project: {
                data: {
                    id: string;
                    "type": "project";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "groupment";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    title?: string;
                    averageDailyPriceExcludingTax?: number;
                    averageDailyCost?: number;
                    numberOfDaysInvoicedOrQuantity?: number;
                    numberOfDaysFree?: number;
                    informationComments?: string;
                    turnoverSimulatedExcludingTax?: number;
                    costsSimulatedExcludingTax?: number;
                    marginSimulatedExcludingTax?: number;
                    profitabilitySimulated?: number;
                    loadDistribution?: "manual" | "proportional" | "weighted";
                    deliveries?: {
                        delivery: {
                            id: string;
                            title: string;
                            startDate: string;
                            endDate: string;
                            averageDailyPriceExcludingTax?: number;
                            averageDailyCost: number;
                            additionalTurnoverExcludingTax?: number;
                            additionalCostsExcludingTax?: number;
                            dependsOn?: {
                                id: string;
                                firstName: string;
                                lastName: string;
                            };
                            groupment?: {
                                data: null;
                            } | {
                                id: string;
                            };
                        };
                        weighting: number;
                        schedule: number;
                    }[];
                    creationDate?: string;
                    updateDate?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    exchangeRate?: number;
                    currency?: number;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                    averageDailyCost?: number;
                    averageDailyPriceExcludingTax?: number;
                    additionalTurnoverExcludingTax?: number;
                    additionalCostsExcludingTax?: number;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    groupment?: {
                        data: {
                            id: string;
                            "type": "groupment";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    workUnitRate?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    technical?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    deliveries?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        }[];
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/groupments", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function getGroupments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/groupments", {
        ...opts
    });
}
export function deleteGroupments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/groupments", {
        ...opts,
        method: "DELETE"
    });
}
export function putGroupments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/groupments", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty groupment's default information data
 */
export function getGroupmentsDefault(project: number, body?: string, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "groupment";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    loadDistribution?: "manual" | "proportional" | "weighted";
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    exchangeRate?: number;
                    currency?: number;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                    averageDailyCost?: number;
                    averageDailyPriceExcludingTax?: number;
                    additionalTurnoverExcludingTax?: number;
                    additionalCostsExcludingTax?: number;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    groupment?: {
                        data: {
                            id: string;
                            "type": "groupment";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    startDate?: string;
                    endDate?: string;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    workUnitRate?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    technical?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    deliveries?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        }[];
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/groupments/default${QS.query(QS.explode({
        project
    }))}`, {
        ...opts,
        body
    });
}
export function putGroupmentsDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "groupment";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    loadDistribution?: "manual" | "proportional" | "weighted";
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    exchangeRate?: number;
                    currency?: number;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                    averageDailyCost?: number;
                    averageDailyPriceExcludingTax?: number;
                    additionalTurnoverExcludingTax?: number;
                    additionalCostsExcludingTax?: number;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    groupment?: {
                        data: {
                            id: string;
                            "type": "groupment";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    startDate?: string;
                    endDate?: string;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    workUnitRate?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    technical?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    deliveries?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        }[];
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/groupments/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteGroupmentsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/groupments/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postGroupmentsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/groupments/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get groupment's basic data
 */
export function getGroupmentsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "groupment";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    title?: string;
                    averageDailyPriceExcludingTax?: number;
                    averageDailyCost?: number;
                    numberOfDaysInvoicedOrQuantity?: number;
                    numberOfDaysFree?: number;
                    informationComments?: string;
                    turnoverSimulatedExcludingTax?: number;
                    costsSimulatedExcludingTax?: number;
                    marginSimulatedExcludingTax?: number;
                    profitabilitySimulated?: number;
                    loadDistribution?: "manual" | "proportional" | "weighted";
                    deliveries?: {
                        delivery: {
                            id: string;
                            title: string;
                            startDate: string;
                            endDate: string;
                            averageDailyPriceExcludingTax?: number;
                            averageDailyCost: number;
                            additionalTurnoverExcludingTax?: number;
                            additionalCostsExcludingTax?: number;
                            dependsOn?: {
                                id: string;
                                firstName: string;
                                lastName: string;
                            };
                            groupment?: {
                                data: null;
                            } | {
                                id: string;
                            };
                        };
                        weighting: number;
                        schedule: number;
                    }[];
                    creationDate?: string;
                    updateDate?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    exchangeRate?: number;
                    currency?: number;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                    averageDailyCost?: number;
                    averageDailyPriceExcludingTax?: number;
                    additionalTurnoverExcludingTax?: number;
                    additionalCostsExcludingTax?: number;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    groupment?: {
                        data: {
                            id: string;
                            "type": "groupment";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    workUnitRate?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    technical?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    deliveries?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        }[];
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/groupments/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the groupment
 */
export function deleteGroupmentsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/groupments/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to a groupment
 */
export function putGroupmentsById(body?: {
    data: {
        id: string;
        "type": "groupment";
        attributes?: {
            startDate?: string;
            endDate?: string;
            title?: string;
            averageDailyPriceExcludingTax?: number;
            averageDailyCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            informationComments?: string;
            loadDistribution?: "manual" | "proportional" | "weighted";
            deliveries?: {
                delivery: {
                    id: string;
                    title: string;
                    startDate: string;
                    endDate: string;
                    averageDailyPriceExcludingTax?: number;
                    averageDailyCost: number;
                    additionalTurnoverExcludingTax?: number;
                    additionalCostsExcludingTax?: number;
                    dependsOn?: {
                        id: string;
                        firstName: string;
                        lastName: string;
                    };
                    groupment?: {
                        data: null;
                    } | {
                        id: string;
                    };
                };
                weighting: number;
                schedule: number;
            }[];
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "groupment";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    title?: string;
                    averageDailyPriceExcludingTax?: number;
                    averageDailyCost?: number;
                    numberOfDaysInvoicedOrQuantity?: number;
                    numberOfDaysFree?: number;
                    informationComments?: string;
                    turnoverSimulatedExcludingTax?: number;
                    costsSimulatedExcludingTax?: number;
                    marginSimulatedExcludingTax?: number;
                    profitabilitySimulated?: number;
                    loadDistribution?: "manual" | "proportional" | "weighted";
                    deliveries?: {
                        delivery: {
                            id: string;
                            title: string;
                            startDate: string;
                            endDate: string;
                            averageDailyPriceExcludingTax?: number;
                            averageDailyCost: number;
                            additionalTurnoverExcludingTax?: number;
                            additionalCostsExcludingTax?: number;
                            dependsOn?: {
                                id: string;
                                firstName: string;
                                lastName: string;
                            };
                            groupment?: {
                                data: null;
                            } | {
                                id: string;
                            };
                        };
                        weighting: number;
                        schedule: number;
                    }[];
                    creationDate?: string;
                    updateDate?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    exchangeRate?: number;
                    currency?: number;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                    averageDailyCost?: number;
                    averageDailyPriceExcludingTax?: number;
                    additionalTurnoverExcludingTax?: number;
                    additionalCostsExcludingTax?: number;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    groupment?: {
                        data: {
                            id: string;
                            "type": "groupment";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    workUnitRate?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    technical?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    deliveries?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        }[];
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/groupments/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postGroupmentsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/groupments/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Create an inactivity
 */
export function postInactivities(body?: {
    data: {
        "type": "delivery";
        attributes?: {
            startDate?: string;
            endDate?: string;
            title?: string;
            averageDailyContractCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            informationComments?: string;
            dailyExpenses?: number;
            monthlyExpenses?: number;
            numberOfWorkingDays?: number;
            expensesDetails?: {
                id: string;
                expenseType: {
                    reference: number;
                    name: string;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
                agency: {
                    id: string;
                    name: string;
                };
            }[];
            currency?: number;
            exchangeRate?: number;
            currencyAgency?: number;
            exchangeRateAgency?: number;
            inactivityType?: "internal" | "absence";
        };
        relationships: {
            resource: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            contract?: {
                data: {
                    id: string;
                    "type": "contract";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "inactivity";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    title?: string;
                    averageDailyCost?: number;
                    averageDailyContractCost?: number;
                    numberOfDaysInvoicedOrQuantity?: number;
                    informationComments?: string;
                    costsSimulatedExcludingTax?: number;
                    occupationRate?: number;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    numberOfWorkingDays?: number;
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                    inactivityType?: "internal" | "absence";
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    creationDate?: string;
                    updateDate?: string;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    contract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    contracts?: {
                        data: {
                            id: string;
                            "type": "contract";
                        }[];
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    exchangeRate?: number;
                    currency?: number;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    contractAverageDailyCost?: number;
                    monthlySalary?: number;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/inactivities", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function getInactivities(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/inactivities", {
        ...opts
    });
}
export function deleteInactivities(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/inactivities", {
        ...opts,
        method: "DELETE"
    });
}
export function putInactivities(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/inactivities", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty inactivity's default information data
 */
export function getInactivitiesDefault(resource: number, body?: string, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/inactivities/default${QS.query(QS.explode({
        resource
    }))}`, {
        ...opts,
        body
    });
}
export function putInactivitiesDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/inactivities/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteInactivitiesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/inactivities/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postInactivitiesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/inactivities/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get inactivity's basic data
 */
export function getInactivitiesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "inactivity";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    title?: string;
                    averageDailyCost?: number;
                    averageDailyContractCost?: number;
                    numberOfDaysInvoicedOrQuantity?: number;
                    informationComments?: string;
                    costsSimulatedExcludingTax?: number;
                    occupationRate?: number;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    numberOfWorkingDays?: number;
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                    inactivityType?: "internal" | "absence";
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    creationDate?: string;
                    updateDate?: string;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    contract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    contracts?: {
                        data: {
                            id: string;
                            "type": "contract";
                        }[];
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    exchangeRate?: number;
                    currency?: number;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    contractAverageDailyCost?: number;
                    monthlySalary?: number;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/inactivities/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the inactivity
 */
export function deleteInactivitiesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/inactivities/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to an inactivity
 */
export function putInactivitiesById(body?: {
    data: {
        id: string;
        "type": "inactivity";
        attributes?: {
            startDate?: string;
            endDate?: string;
            title?: string;
            averageDailyContractCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            informationComments?: string;
            dailyExpenses?: number;
            monthlyExpenses?: number;
            numberOfWorkingDays?: number;
            expensesDetails?: {
                id: string;
                expenseType: {
                    reference: number;
                    name: string;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
                agency: {
                    id: string;
                    name: string;
                };
            }[];
            currency?: number;
            exchangeRate?: number;
            currencyAgency?: number;
            exchangeRateAgency?: number;
            inactivityType?: "internal" | "absence";
        };
        relationships?: {
            contract?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "contract";
                };
            };
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "inactivity";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    title?: string;
                    averageDailyCost?: number;
                    averageDailyContractCost?: number;
                    numberOfDaysInvoicedOrQuantity?: number;
                    informationComments?: string;
                    costsSimulatedExcludingTax?: number;
                    occupationRate?: number;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    numberOfWorkingDays?: number;
                    expensesDetails?: {
                        id: string;
                        expenseType: {
                            reference: number;
                            name: string;
                        };
                        periodicity: "daily" | "monthly";
                        netAmount: number;
                        agency: {
                            id: string;
                            name: string;
                        };
                    }[];
                    inactivityType?: "internal" | "absence";
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    creationDate?: string;
                    updateDate?: string;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    contract?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    contracts?: {
                        data: {
                            id: string;
                            "type": "contract";
                        }[];
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    calendar?: string;
                    expenseTypes?: {
                        reference: number;
                        name: string;
                        taxRate: number;
                    }[];
                    exchangeRate?: number;
                    currency?: number;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    contractAverageDailyCost?: number;
                    monthlySalary?: number;
                    dailyExpenses?: number;
                    monthlyExpenses?: number;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/inactivities/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postInactivitiesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/inactivities/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search invoices
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/invoices.csv?keywords=FACT1*
 *
 */
export function getInvoices(body?: string, { keywords, projectTypes, paymentMethods, states, closed, creditNote, period, startDate, endDate, flags, encoding, extractType, exportToDownloadCenter, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    projectTypes?: number[];
    paymentMethods?: number[];
    states?: number[];
    closed?: boolean;
    creditNote?: boolean;
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    extractType?: string;
    exportToDownloadCenter?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                    turnoverInvoicedExcludingTax?: number;
                    turnoverInvoicedIncludingTax?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "invoice";
                attributes?: {
                    date?: string;
                    expectedPaymentDate?: string;
                    turnoverInvoicedExcludingTax?: number;
                    turnoverInvoicedIncludingTax?: number;
                    isCreditNote?: boolean;
                    reference?: string;
                    state?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    paymentMethod?: number;
                    closed?: boolean;
                };
                relationships?: {
                    order?: {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    };
                    schedule?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "schedule";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "order";
                attributes?: {
                    "number"?: string;
                    reference?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                };
                relationships?: {
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "schedule";
                attributes?: {
                    date?: string;
                    title?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/invoices${QS.query(QS.explode({
        keywords,
        projectTypes,
        paymentMethods,
        states,
        closed,
        creditNote,
        period,
        startDate,
        endDate,
        flags,
        encoding,
        extractType,
        exportToDownloadCenter,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create an invoice
 */
export function postInvoices(body?: {
    data: {
        "type": "invoice";
        attributes?: {
            date?: string;
            startDate?: string;
            endDate?: string;
            reference?: string;
            state?: number;
            performedPaymentDate?: string;
            paymentMethod?: number;
            currency?: number;
            exchangeRate?: number;
            isCreditNote?: boolean;
            currencyAgency?: number;
            exchangeRateAgency?: number;
            discountRate?: number;
            showCommentsOnPDF?: boolean;
            invoiceRecords?: ({
                invoiceRecordType: null | {
                    reference: number;
                };
                description: string;
                amountExcludingTax: number;
                quantity: number;
                taxRates: number[];
            } | {
                id: string;
                invoiceRecordType: null | {
                    reference: number;
                };
                description: string;
                amountExcludingTax: number;
                quantity: number;
                taxRates: number[];
            })[];
        };
        relationships: {
            order: {
                data: {
                    id: string;
                    "type": "order";
                };
            };
            schedule?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "schedule";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code?: "invoiceDateModified";
                    detail?: string;
                    date?: string;
                    [key: string]: any;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "invoice";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    date?: string;
                    startDate?: string;
                    endDate?: string;
                    reference?: string;
                    expectedPaymentDate?: string;
                    state?: number;
                    performedPaymentDate?: string;
                    paymentMethod?: number;
                    informationComments?: string;
                    isCreditNote?: boolean;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    currencyName?: string;
                    currencySymbol?: string;
                    exchangeRateAgency?: number;
                    discountRate?: number;
                    closed?: boolean;
                    locked?: boolean;
                    orderLegals?: string;
                    orderPaymentTerm?: number;
                    bankDetailDescription?: string;
                    bankDetailBic?: string;
                    bankDetailIban?: string;
                    agencyName?: string;
                    agencyVatNumber?: string;
                    agencyRegistrationNumber?: string;
                    agencyAddress?: string;
                    agencyPostcode?: string;
                    agencyTown?: string;
                    agencyCountry?: string;
                    agencyApeCode?: string;
                    agencyEmail?: string;
                    agencyPhone?: string;
                    agencyRegisteredOffice?: string;
                    agencyLegalStatus?: string;
                    factorName?: string;
                    factorSiren?: string;
                    factorNic?: string;
                    factorLegalStatus?: string;
                    factorRegisteredOffice?: string;
                    factorVatNumber?: string;
                    factorAddress?: string;
                    factorPostcode?: string;
                    factorTown?: string;
                    factorCountry?: string;
                    factorApeCode?: string;
                    billingDetailName?: string;
                    billingDetailContact?: string;
                    billingDetailAddress1?: string;
                    billingDetailAddress2?: string;
                    billingDetailAddress3?: string;
                    billingDetailPostcode?: string;
                    billingDetailTown?: string;
                    billingDetailCountry?: string;
                    headOfficeName?: string;
                    headOfficeContact?: string;
                    headOfficeAddress1?: string;
                    headOfficeAddress2?: string;
                    headOfficeAddress3?: string;
                    headOfficePostcode?: string;
                    headOfficeTown?: string;
                    headOfficeCountry?: string;
                    activityDetails?: {
                        resource: {
                            id: string;
                            firstName: string;
                            lastName: string;
                            regularTimes: {
                                workUnitType: {
                                    reference: number;
                                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                    name: string;
                                };
                                agency: {
                                    id: string;
                                    name: string;
                                };
                                averageDailyPriceExcludingTax: number;
                                numberOfWorkingDays: number;
                                numberOfWorkUnits: number;
                            }[];
                            exceptionalTimes: {
                                workUnitType: {
                                    reference: number;
                                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                    name: string;
                                };
                                agency: {
                                    id: string;
                                    name: string;
                                };
                                priceExcludingTax: number;
                                duration: number;
                            }[];
                            exceptionalCalendars: {
                                workUnitType: {
                                    reference: number;
                                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                    name: string;
                                };
                                agency: {
                                    id: string;
                                    name: string;
                                };
                                priceExcludingTax: number;
                                duration: number;
                            }[];
                            timesReports: {
                                id: string;
                                term: string;
                            }[];
                            expensesReports: {
                                id: string;
                                term: string;
                            }[];
                        };
                    }[];
                    turnoverInvoicedExcludingTax?: number;
                    turnoverInvoicedIncludingTax?: number;
                    totalExcludingTax?: number;
                    totalIncludingTax?: number;
                    showCommentsOnPDF?: boolean;
                    invoiceRecords?: {
                        id: string;
                        invoiceRecordType: null | {
                            reference: number;
                            name: string;
                        };
                        description: string;
                        amountExcludingTax: number;
                        totalDiscountExcludingTax?: string;
                        totalDiscountIncludingTax?: string;
                        totalAmountExcludingTax?: string;
                        totalAmountIncludingTax?: string;
                        quantity: number;
                        turnoverExcludingTax: string;
                        turnoverIncludingTax: string;
                        taxRate: number;
                        taxRates: number[];
                    }[];
                };
                relationships?: {
                    order?: {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    };
                    schedule?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "schedule";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    registrationNumber?: string;
                    legalStatus?: string;
                    registeredOffice?: string;
                    vatNumber?: string;
                    "number"?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    apeCode?: string;
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "detail";
                attributes?: {
                    name?: string;
                    contact?: string;
                    phone1?: string;
                    email1?: string;
                    email2?: string;
                    email3?: string;
                    address1?: string;
                    address2?: string;
                    address3?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                };
            } | {
                id: string;
                "type": "bankdetail";
                attributes?: {
                    description?: string;
                    iban?: string;
                    bic?: string;
                };
            } | {
                id: string;
                "type": "schedule";
                attributes?: {
                    date?: string;
                    title?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    workUnitRate?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    invoiceRecordTypes?: {
                        reference: number;
                        name: string;
                    }[];
                    name?: string;
                    email1?: string;
                    phone1?: string;
                    registrationNumber?: string;
                    legalStatus?: string;
                    registeredOffice?: string;
                    vatNumber?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    apeCode?: string;
                    invoicesLogo?: string;
                    ordersDistinguishHeadOffice?: boolean;
                    invoicesLockingStates?: number[];
                    ordersAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    reference?: string;
                    "number"?: string;
                    legals?: string;
                    paymentTerm?: number;
                    schedules?: {
                        id: string;
                        date: string;
                        title: string;
                    }[];
                    billingInstructions?: string;
                    sendingMode?: number;
                    typeOf?: "schedule" | "monthly";
                    taxRate?: number;
                    taxRates?: number[];
                    showFooterOnPDF?: boolean;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    billingDetail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "detail";
                        };
                    };
                    headOffice?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "detail";
                        };
                    };
                    bankDetail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "bankdetail";
                        };
                    };
                    factor?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/invoices", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteInvoices(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/invoices", {
        ...opts,
        method: "DELETE"
    });
}
export function putInvoices(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/invoices", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty invoice's default information data
 */
export function getInvoicesDefault(order: number, body?: string, { isCreditNote, schedule, term, autoFillItemsWithTimesExpensesPurchases }: {
    isCreditNote?: boolean;
    schedule?: number;
    term?: string;
    autoFillItemsWithTimesExpensesPurchases?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "invoice";
                attributes?: {
                    date?: string;
                    isCreditNote?: boolean;
                    startDate?: string;
                    endDate?: string;
                    expectedPaymentDate?: string;
                    state?: number;
                    hasAttachment?: boolean;
                    paymentMethod?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    discountRate?: number;
                    turnoverInvoicedExcludingTax?: number;
                    turnoverInvoicedIncludingTax?: number;
                    totalExcludingTax?: number;
                    totalIncludingTax?: number;
                    activityDetails?: {
                        resource: {
                            id: string;
                            firstName: string;
                            lastName: string;
                            regularTimes: {
                                workUnitType: {
                                    reference: number;
                                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                    name: string;
                                };
                                agency: {
                                    id: string;
                                    name: string;
                                };
                                averageDailyPriceExcludingTax: number;
                                numberOfWorkingDays: number;
                                numberOfWorkUnits: number;
                            }[];
                            exceptionalTimes: {
                                workUnitType: {
                                    reference: number;
                                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                    name: string;
                                };
                                agency: {
                                    id: string;
                                    name: string;
                                };
                                priceExcludingTax: number;
                                duration: number;
                            }[];
                            exceptionalCalendars: {
                                workUnitType: {
                                    reference: number;
                                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                    name: string;
                                };
                                agency: {
                                    id: string;
                                    name: string;
                                };
                                priceExcludingTax: number;
                                duration: number;
                            }[];
                            timesReports: {
                                id: string;
                                term: string;
                            }[];
                            expensesReports: {
                                id: string;
                                term: string;
                            }[];
                        };
                    }[];
                    invoiceRecords?: ({
                        invoiceRecordType: null | {
                            reference: number;
                        };
                        description: string;
                        amountExcludingTax: number;
                        quantity: number;
                        taxRates: number[];
                    } | {
                        id: string;
                        invoiceRecordType: null | {
                            reference: number;
                        };
                        description: string;
                        amountExcludingTax: number;
                        quantity: number;
                        taxRates: number[];
                    })[];
                    informationComments?: string;
                    showCommentsOnPDF?: boolean;
                };
                relationships?: {
                    order?: {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    };
                    schedule?: {
                        data: {
                            id: string;
                            "type": "schedule";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    registrationNumber?: string;
                    legalStatus?: string;
                    registeredOffice?: string;
                    vatNumber?: string;
                    "number"?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    apeCode?: string;
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "detail";
                attributes?: {
                    name?: string;
                    contact?: string;
                    phone1?: string;
                    email1?: string;
                    email2?: string;
                    email3?: string;
                    address1?: string;
                    address2?: string;
                    address3?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                };
            } | {
                id: string;
                "type": "bankdetail";
                attributes?: {
                    description?: string;
                    iban?: string;
                    bic?: string;
                };
            } | {
                id: string;
                "type": "schedule";
                attributes?: {
                    date?: string;
                    title?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    invoiceRecordTypes?: {
                        reference: number;
                        name: string;
                    }[];
                    name?: string;
                    email1?: string;
                    phone1?: string;
                    registrationNumber?: string;
                    legalStatus?: string;
                    registeredOffice?: string;
                    invoicesLockingStates?: number[];
                    ordersDistinguishHeadOffice?: boolean;
                    vatNumber?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    apeCode?: string;
                    ordersAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    reference?: string;
                    "number"?: string;
                    legals?: string;
                    paymentTerm?: number;
                    schedules?: {
                        id: string;
                        date: string;
                        title: string;
                    }[];
                    typeOf?: "schedule" | "monthly";
                    taxRate?: number;
                    taxRates?: number[];
                    showFooterOnPDF?: boolean;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    billingDetail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "detail";
                        };
                    };
                    headOffice?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "detail";
                        };
                    };
                    bankDetail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "bankdetail";
                        };
                    };
                    factor?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/invoices/default${QS.query(QS.explode({
        order,
        isCreditNote,
        schedule,
        term,
        autoFillItemsWithTimesExpensesPurchases
    }))}`, {
        ...opts,
        body
    });
}
export function putInvoicesDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "invoice";
                attributes?: {
                    date?: string;
                    isCreditNote?: boolean;
                    startDate?: string;
                    endDate?: string;
                    expectedPaymentDate?: string;
                    state?: number;
                    hasAttachment?: boolean;
                    paymentMethod?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    discountRate?: number;
                    turnoverInvoicedExcludingTax?: number;
                    turnoverInvoicedIncludingTax?: number;
                    totalExcludingTax?: number;
                    totalIncludingTax?: number;
                    activityDetails?: {
                        resource: {
                            id: string;
                            firstName: string;
                            lastName: string;
                            regularTimes: {
                                workUnitType: {
                                    reference: number;
                                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                    name: string;
                                };
                                agency: {
                                    id: string;
                                    name: string;
                                };
                                averageDailyPriceExcludingTax: number;
                                numberOfWorkingDays: number;
                                numberOfWorkUnits: number;
                            }[];
                            exceptionalTimes: {
                                workUnitType: {
                                    reference: number;
                                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                    name: string;
                                };
                                agency: {
                                    id: string;
                                    name: string;
                                };
                                priceExcludingTax: number;
                                duration: number;
                            }[];
                            exceptionalCalendars: {
                                workUnitType: {
                                    reference: number;
                                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                    name: string;
                                };
                                agency: {
                                    id: string;
                                    name: string;
                                };
                                priceExcludingTax: number;
                                duration: number;
                            }[];
                            timesReports: {
                                id: string;
                                term: string;
                            }[];
                            expensesReports: {
                                id: string;
                                term: string;
                            }[];
                        };
                    }[];
                    invoiceRecords?: ({
                        invoiceRecordType: null | {
                            reference: number;
                        };
                        description: string;
                        amountExcludingTax: number;
                        quantity: number;
                        taxRates: number[];
                    } | {
                        id: string;
                        invoiceRecordType: null | {
                            reference: number;
                        };
                        description: string;
                        amountExcludingTax: number;
                        quantity: number;
                        taxRates: number[];
                    })[];
                    informationComments?: string;
                    showCommentsOnPDF?: boolean;
                };
                relationships?: {
                    order?: {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    };
                    schedule?: {
                        data: {
                            id: string;
                            "type": "schedule";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    registrationNumber?: string;
                    legalStatus?: string;
                    registeredOffice?: string;
                    vatNumber?: string;
                    "number"?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    apeCode?: string;
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "detail";
                attributes?: {
                    name?: string;
                    contact?: string;
                    phone1?: string;
                    email1?: string;
                    email2?: string;
                    email3?: string;
                    address1?: string;
                    address2?: string;
                    address3?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                };
            } | {
                id: string;
                "type": "bankdetail";
                attributes?: {
                    description?: string;
                    iban?: string;
                    bic?: string;
                };
            } | {
                id: string;
                "type": "schedule";
                attributes?: {
                    date?: string;
                    title?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    invoiceRecordTypes?: {
                        reference: number;
                        name: string;
                    }[];
                    name?: string;
                    email1?: string;
                    phone1?: string;
                    registrationNumber?: string;
                    legalStatus?: string;
                    registeredOffice?: string;
                    invoicesLockingStates?: number[];
                    ordersDistinguishHeadOffice?: boolean;
                    vatNumber?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    apeCode?: string;
                    ordersAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    reference?: string;
                    "number"?: string;
                    legals?: string;
                    paymentTerm?: number;
                    schedules?: {
                        id: string;
                        date: string;
                        title: string;
                    }[];
                    typeOf?: "schedule" | "monthly";
                    taxRate?: number;
                    taxRates?: number[];
                    showFooterOnPDF?: boolean;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    billingDetail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "detail";
                        };
                    };
                    headOffice?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "detail";
                        };
                    };
                    bankDetail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "bankdetail";
                        };
                    };
                    factor?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/invoices/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteInvoicesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/invoices/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postInvoicesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/invoices/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get invoice's basic data
 */
export function getInvoicesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "invoice";
                attributes?: {
                    date?: string;
                    creationDate?: string;
                    reference?: string;
                    isCreditNote?: boolean;
                    closed?: boolean;
                    hasAttachment?: boolean;
                };
                relationships?: {
                    order?: {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    workUnitRate?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    "number"?: string;
                    reference?: string;
                    typeOf?: "schedule" | "monthly";
                    schedules?: {
                        id: string;
                        date: string;
                        title: string;
                        turnoverQuotaExcludingTax: number;
                        turnoverTermOfPaymentExcludingTax: number;
                        forceTermOfPaymentExcludingTax: boolean;
                        invoices?: {
                            id: string;
                        }[];
                    }[];
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/invoices/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the invoice
 */
export function deleteInvoicesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/invoices/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function putInvoicesById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "invoice";
                attributes?: {
                    date?: string;
                    creationDate?: string;
                    reference?: string;
                    isCreditNote?: boolean;
                    closed?: boolean;
                    hasAttachment?: boolean;
                };
                relationships?: {
                    order?: {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    workUnitRate?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    "number"?: string;
                    reference?: string;
                    typeOf?: "schedule" | "monthly";
                    schedules?: {
                        id: string;
                        date: string;
                        title: string;
                        turnoverQuotaExcludingTax: number;
                        turnoverTermOfPaymentExcludingTax: number;
                        forceTermOfPaymentExcludingTax: boolean;
                        invoices?: {
                            id: string;
                        }[];
                    }[];
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/invoices/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postInvoicesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/invoices/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search logs entity (Resource, Candidate, Project, Opportunity, Order, Invoice, Contact)
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/logs.csv?keywords=COMP100*
 *
 */
export function getLogs(body?: string, { keywords, logTypes, logActions, logAuths, period, startDate, endDate, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    logTypes?: string[];
    logActions?: string[];
    logAuths?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "log";
                attributes?: {
                    creationDate?: string;
                    typeOf?: "global" | "resource" | "advantage" | "contract" | "action" | "actiontemplate" | "inactivity" | "timesreport" | "expensesreport" | "absencesreport" | "product" | "candidate" | "opportunity" | "positioning" | "company" | "contact" | "project" | "delivery" | "groupment" | "purchase" | "payment" | "order" | "invoice" | "businessunit" | "pole" | "role" | "agency" | "app" | "customer" | "quotation" | "device" | "savedsearch" | "validation" | "webhook" | "flag" | "thread" | "target";
                    action?: string;
                    text?: string;
                    auth?: "normal" | "basic" | "xjwtapp" | "xjwtclient";
                    content?: {
                        [key: string]: any;
                    };
                    numberOfFiles?: number;
                    canReadLog?: boolean;
                    canReadDependsOn?: boolean;
                    isEntityDeleted?: boolean;
                };
                relationships?: {
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdFromApp?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    file?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "document";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "advantage";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "action";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "inactivity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "groupment";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "timesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "expensesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "absencesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "positioning";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "payment";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "businessunit";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "role";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "customer";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "quotation";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "device";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "validation";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "actiontemplate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "flag";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "thread";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "savedsearch";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "webhook";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "target";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    reference?: string;
                    title?: string;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    title?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    reference?: string;
                    title?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    "number"?: string;
                    name?: string;
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    reference?: string;
                    "number"?: string;
                };
            } | {
                id: string;
                "type": "invoice";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "timesreport";
                attributes?: {
                    term?: string;
                };
            } | {
                id: string;
                "type": "expensesreport";
                attributes?: {
                    term?: string;
                };
            } | {
                id: string;
                "type": "absencesreport";
                attributes?: {
                    creationDate?: string;
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    reference?: string;
                    name?: string;
                };
            } | {
                id: string;
                "type": "businessunit";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "role";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "customer";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "quotation";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "device";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "actiontemplate";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "flag";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "thread";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "savedsearch";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "webhook";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "target";
                attributes?: {
                    name?: "commercial" | "humanResources" | "recruitment" | "activityExpenses" | "billing" | "global";
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "validation";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/logs${QS.query(QS.explode({
        keywords,
        logTypes,
        logActions,
        logAuths,
        period,
        startDate,
        endDate,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
export function postLogs(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/logs", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteLogs(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/logs", {
        ...opts,
        method: "DELETE"
    });
}
export function putLogs(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/logs", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get log's basic data
 */
export function getLogsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "log";
                attributes?: {
                    creationDate?: string;
                    typeOf?: "global" | "resource" | "advantage" | "contract" | "action" | "actiontemplate" | "inactivity" | "timesreport" | "expensesreport" | "absencesreport" | "product" | "candidate" | "opportunity" | "positioning" | "company" | "contact" | "project" | "delivery" | "groupment" | "purchase" | "payment" | "order" | "invoice" | "businessunit" | "pole" | "role" | "agency" | "app" | "customer" | "quotation" | "device" | "savedsearch" | "validation" | "webhook" | "flag" | "thread" | "target";
                    action?: string;
                    text?: string;
                    auth?: "normal" | "basic" | "xjwtapp" | "xjwtclient";
                    content?: {
                        [key: string]: any;
                    };
                    numberOfFiles?: number;
                    canReadLog?: boolean;
                    canReadDependsOn?: boolean;
                    isEntityDeleted?: boolean;
                };
                relationships?: {
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdFromApp?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "advantage";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "action";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "inactivity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "groupment";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "timesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "expensesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "absencesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "positioning";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "payment";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "businessunit";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "role";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "customer";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "quotation";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "device";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "validation";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "actiontemplate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "flag";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "thread";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    "number"?: string;
                };
            } | {
                id: string;
                "type": "invoice";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "timesreport";
                attributes?: {
                    term?: string;
                };
            } | {
                id: string;
                "type": "expensesreport";
                attributes?: {
                    term?: string;
                };
            } | {
                id: string;
                "type": "absencesreport";
                attributes?: {
                    creationDate?: string;
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "businessunit";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "role";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "customer";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "quotation";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "device";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "actiontemplate";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "flag";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "thread";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "savedsearch";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "webhook";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "target";
                attributes?: {
                    name?: "commercial" | "humanResources" | "recruitment" | "activityExpenses" | "billing" | "global";
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/logs/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
export function putLogsById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "log";
                attributes?: {
                    creationDate?: string;
                    typeOf?: "global" | "resource" | "advantage" | "contract" | "action" | "actiontemplate" | "inactivity" | "timesreport" | "expensesreport" | "absencesreport" | "product" | "candidate" | "opportunity" | "positioning" | "company" | "contact" | "project" | "delivery" | "groupment" | "purchase" | "payment" | "order" | "invoice" | "businessunit" | "pole" | "role" | "agency" | "app" | "customer" | "quotation" | "device" | "savedsearch" | "validation" | "webhook" | "flag" | "thread" | "target";
                    action?: string;
                    text?: string;
                    auth?: "normal" | "basic" | "xjwtapp" | "xjwtclient";
                    content?: {
                        [key: string]: any;
                    };
                    numberOfFiles?: number;
                    canReadLog?: boolean;
                    canReadDependsOn?: boolean;
                    isEntityDeleted?: boolean;
                };
                relationships?: {
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdFromApp?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "advantage";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "action";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "inactivity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "groupment";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "timesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "expensesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "absencesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "positioning";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "payment";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "businessunit";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "role";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "customer";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "quotation";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "device";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "validation";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "actiontemplate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "flag";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "thread";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    "number"?: string;
                };
            } | {
                id: string;
                "type": "invoice";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "timesreport";
                attributes?: {
                    term?: string;
                };
            } | {
                id: string;
                "type": "expensesreport";
                attributes?: {
                    term?: string;
                };
            } | {
                id: string;
                "type": "absencesreport";
                attributes?: {
                    creationDate?: string;
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "businessunit";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "role";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "customer";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "quotation";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "device";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "actiontemplate";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "flag";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "thread";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "savedsearch";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "webhook";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "target";
                attributes?: {
                    name?: "commercial" | "humanResources" | "recruitment" | "activityExpenses" | "billing" | "global";
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/logs/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteLogsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/logs/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postLogsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/logs/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search marketplace's apps
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/invoices.csv?keywords=FACT1*
 *
 */
export function getMarketplace(body?: string, { keywords, categories, onlyMyApps, validations, visibilities, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    categories?: string[];
    onlyMyApps?: boolean;
    validations?: string[];
    visibilities?: string[];
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    isInstalled?: boolean;
                    logo?: string;
                    code?: string;
                    integration?: "iFrame" | "module";
                    website?: string;
                    isValidated?: boolean;
                    isPublic?: boolean;
                    title?: string;
                    description?: string;
                };
                relationships?: {
                    vendor?: {
                        data: {
                            id: string;
                            "type": "vendor";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "vendor";
                attributes?: {
                    name?: string;
                    logo?: string;
                    isOwner?: boolean;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/marketplace${QS.query(QS.explode({
        keywords,
        categories,
        onlyMyApps,
        validations,
        visibilities,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a marketplace's apps
 */
export function postMarketplace(body?: {
    data: {
        "type": "app";
        attributes: {
            name: string;
            title?: string;
            category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
            code: string;
            url?: string;
            website?: string;
            testimoniesUrl?: string;
            termsOfUseUrl?: string;
            description?: string;
            price?: string;
            logo?: string;
            isPublic?: boolean;
            tokenSecurity?: "permanent" | "temporary";
            isValidated?: boolean;
            hasConfigurationPage?: boolean;
            apisAllowed?: {
                page: "application/dictionary" | "application/perimeters" | "application/flags" | "application/assignments" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absencesReports" | "expensesReports" | "timesReports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources" | "accounts" | "dashboard" | "accounts/(id}" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "timesReports/@id" | "expensesReports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                event: "read" | "create" | "update" | "delete";
            }[];
            customersAllowed?: string[];
            hostsAllowed?: string[];
            buttonsSetting?: {
                page: "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries-inactivities" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absences-reports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries-groupments" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absences-reports" | "expenses-reports" | "times-reports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources";
                title: string;
                "function": string;
            }[];
            iFramesSetting?: {
                page: "dashboard" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                scrolling: boolean;
                height: number;
                isHalfWidth: boolean;
                "function": string;
            }[];
            triggersSetting?: {
                page: "actions/@id" | "candidates/@id" | "resources/@id" | "products/@id" | "contracts/@id" | "advantages/@id" | "opportunities/@id" | "projects/@id" | "positionings/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "times-reports/@id" | "expenses-reports/@id" | "absences-reports/@id" | "purchases/@id" | "payments/@id" | "orders/@id" | "invoices/@id" | "contacts/@id" | "companies/@id";
                event: "create" | "update" | "delete";
                "function": string;
            }[];
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "app";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    title?: string;
                    category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                    code?: string;
                    key?: string;
                    url?: string;
                    integration?: "iFrame" | "module";
                    website?: string;
                    testimoniesUrl?: string;
                    termsOfUseUrl?: string;
                    description?: string;
                    price?: string;
                    logo?: string;
                    isPublic?: boolean;
                    tokenSecurity?: "permanent" | "temporary";
                    isRefreshTokenValidated?: boolean;
                    isValidated?: boolean;
                    isInstalled?: boolean;
                    isBoondManagerApp?: boolean;
                    hasConfigurationPage?: boolean;
                    apisAllowed?: {
                        page: "application/dictionary" | "application/perimeters" | "application/flags" | "application/assignments" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absencesReports" | "expensesReports" | "timesReports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources" | "accounts" | "dashboard" | "accounts/(id}" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "timesReports/@id" | "expensesReports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                        event: "read" | "create" | "update" | "delete";
                    }[];
                    customersAllowed?: string[];
                    hostsAllowed?: string[];
                    buttonsSetting?: {
                        page: "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries-inactivities" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absences-reports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries-groupments" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absences-reports" | "expenses-reports" | "times-reports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources";
                        title: string;
                        "function": string;
                    }[];
                    iFramesSetting?: {
                        page: "dashboard" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                        scrolling: boolean;
                        height: number;
                        isHalfWidth: boolean;
                        "function": string;
                    }[];
                    triggersSetting?: {
                        page: "actions/@id" | "candidates/@id" | "resources/@id" | "products/@id" | "contracts/@id" | "advantages/@id" | "opportunities/@id" | "projects/@id" | "positionings/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "times-reports/@id" | "expenses-reports/@id" | "absences-reports/@id" | "purchases/@id" | "payments/@id" | "orders/@id" | "invoices/@id" | "contacts/@id" | "companies/@id";
                        event: "create" | "update" | "delete";
                        "function": string;
                    }[];
                    visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
                };
                relationships?: {
                    vendor?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "vendor";
                attributes?: {
                    name?: string;
                    email1?: string;
                    phone1?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    website?: string;
                    isOwner?: boolean;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/marketplace", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteMarketplace(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/marketplace", {
        ...opts,
        method: "DELETE"
    });
}
export function putMarketplace(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/marketplace", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty marketplace's App default information data
 */
export function getMarketplaceDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "action";
                attributes?: {
                    category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                    isPublic?: boolean;
                    tokenSecurity?: "permanent" | "temporary";
                };
                relationships?: {
                    vendor?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "vendor";
                attributes?: {
                    name?: string;
                    email1?: string;
                    phone1?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    website?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/marketplace/default", {
        ...opts
    });
}
export function putMarketplaceDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "action";
                attributes?: {
                    category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                    isPublic?: boolean;
                    tokenSecurity?: "permanent" | "temporary";
                };
                relationships?: {
                    vendor?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "vendor";
                attributes?: {
                    name?: string;
                    email1?: string;
                    phone1?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    website?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/marketplace/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteMarketplaceDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/marketplace/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postMarketplaceDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/marketplace/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get marketplace's App basic data
 */
export function getMarketplaceById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "app";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    title?: string;
                    category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                    code?: string;
                    key?: string;
                    url?: string;
                    integration?: "iFrame" | "module";
                    website?: string;
                    testimoniesUrl?: string;
                    termsOfUseUrl?: string;
                    description?: string;
                    price?: string;
                    logo?: string;
                    isPublic?: boolean;
                    tokenSecurity?: "permanent" | "temporary";
                    isRefreshTokenValidated?: boolean;
                    isValidated?: boolean;
                    isInstalled?: boolean;
                    isBoondManagerApp?: boolean;
                    hasConfigurationPage?: boolean;
                    apisAllowed?: {
                        page: "application/dictionary" | "application/perimeters" | "application/flags" | "application/assignments" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absencesReports" | "expensesReports" | "timesReports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources" | "accounts" | "dashboard" | "accounts/(id}" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "timesReports/@id" | "expensesReports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                        event: "read" | "create" | "update" | "delete";
                    }[];
                    customersAllowed?: string[];
                    hostsAllowed?: string[];
                    buttonsSetting?: {
                        page: "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries-inactivities" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absences-reports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries-groupments" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absences-reports" | "expenses-reports" | "times-reports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources";
                        title: string;
                        "function": string;
                    }[];
                    iFramesSetting?: {
                        page: "dashboard" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                        scrolling: boolean;
                        height: number;
                        isHalfWidth: boolean;
                        "function": string;
                    }[];
                    triggersSetting?: {
                        page: "actions/@id" | "candidates/@id" | "resources/@id" | "products/@id" | "contracts/@id" | "advantages/@id" | "opportunities/@id" | "projects/@id" | "positionings/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "times-reports/@id" | "expenses-reports/@id" | "absences-reports/@id" | "purchases/@id" | "payments/@id" | "orders/@id" | "invoices/@id" | "contacts/@id" | "companies/@id";
                        event: "create" | "update" | "delete";
                        "function": string;
                    }[];
                    visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
                };
                relationships?: {
                    vendor?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "vendor";
                attributes?: {
                    name?: string;
                    email1?: string;
                    phone1?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    website?: string;
                    isOwner?: boolean;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/marketplace/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete a marketplace's App
 */
export function deleteMarketplaceById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/marketplace/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to a marketplace's App
 */
export function putMarketplaceById(body?: {
    data: {
        id: string;
        "type": "app";
        attributes?: {
            name?: string;
            title?: string;
            category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
            url?: string;
            website?: string;
            testimoniesUrl?: string;
            termsOfUseUrl?: string;
            description?: string;
            price?: string;
            logo?: string;
            isPublic?: boolean;
            tokenSecurity?: "permanent" | "temporary";
            isValidated?: boolean;
            hasConfigurationPage?: boolean;
            apisAllowed?: {
                page: "application/dictionary" | "application/perimeters" | "application/flags" | "application/assignments" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absencesReports" | "expensesReports" | "timesReports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources" | "accounts" | "dashboard" | "accounts/(id}" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "timesReports/@id" | "expensesReports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                event: "read" | "create" | "update" | "delete";
            }[];
            customersAllowed?: string[];
            hostsAllowed?: string[];
            buttonsSetting?: {
                page: "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries-inactivities" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absences-reports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries-groupments" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absences-reports" | "expenses-reports" | "times-reports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources";
                title: string;
                "function": string;
            }[];
            iFramesSetting?: {
                page: "dashboard" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                scrolling: boolean;
                height: number;
                isHalfWidth: boolean;
                "function": string;
            }[];
            triggersSetting?: {
                page: "actions/@id" | "candidates/@id" | "resources/@id" | "products/@id" | "contracts/@id" | "advantages/@id" | "opportunities/@id" | "projects/@id" | "positionings/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "times-reports/@id" | "expenses-reports/@id" | "absences-reports/@id" | "purchases/@id" | "payments/@id" | "orders/@id" | "invoices/@id" | "contacts/@id" | "companies/@id";
                event: "create" | "update" | "delete";
                "function": string;
            }[];
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "app";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    title?: string;
                    category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                    code?: string;
                    key?: string;
                    url?: string;
                    integration?: "iFrame" | "module";
                    website?: string;
                    testimoniesUrl?: string;
                    termsOfUseUrl?: string;
                    description?: string;
                    price?: string;
                    logo?: string;
                    isPublic?: boolean;
                    tokenSecurity?: "permanent" | "temporary";
                    isRefreshTokenValidated?: boolean;
                    isValidated?: boolean;
                    isInstalled?: boolean;
                    isBoondManagerApp?: boolean;
                    hasConfigurationPage?: boolean;
                    apisAllowed?: {
                        page: "application/dictionary" | "application/perimeters" | "application/flags" | "application/assignments" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absencesReports" | "expensesReports" | "timesReports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources" | "accounts" | "dashboard" | "accounts/(id}" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "timesReports/@id" | "expensesReports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                        event: "read" | "create" | "update" | "delete";
                    }[];
                    customersAllowed?: string[];
                    hostsAllowed?: string[];
                    buttonsSetting?: {
                        page: "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries-inactivities" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absences-reports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries-groupments" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absences-reports" | "expenses-reports" | "times-reports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources";
                        title: string;
                        "function": string;
                    }[];
                    iFramesSetting?: {
                        page: "dashboard" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                        scrolling: boolean;
                        height: number;
                        isHalfWidth: boolean;
                        "function": string;
                    }[];
                    triggersSetting?: {
                        page: "actions/@id" | "candidates/@id" | "resources/@id" | "products/@id" | "contracts/@id" | "advantages/@id" | "opportunities/@id" | "projects/@id" | "positionings/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "times-reports/@id" | "expenses-reports/@id" | "absences-reports/@id" | "purchases/@id" | "payments/@id" | "orders/@id" | "invoices/@id" | "contacts/@id" | "companies/@id";
                        event: "create" | "update" | "delete";
                        "function": string;
                    }[];
                    visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
                };
                relationships?: {
                    vendor?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "vendor";
                attributes?: {
                    name?: string;
                    email1?: string;
                    phone1?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    website?: string;
                    isOwner?: boolean;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/marketplace/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postMarketplaceById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/marketplace/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Get marketplace's App access
 */
export function getMarketplaceByIdConfigure(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/marketplace/${encodeURIComponent(id)}/configure`, {
        ...opts,
        body
    });
}
/**
 * Update marketplace's App access
 */
export function putMarketplaceByIdConfigure(body?: {
    data: {
        id: string;
        "type": "app";
        attributes?: {
            visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/marketplace/${encodeURIComponent(id)}/configure`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteMarketplaceByIdConfigure(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/marketplace/${encodeURIComponent(id)}/configure`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postMarketplaceByIdConfigure(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/marketplace/${encodeURIComponent(id)}/configure`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Get marketplace's App access
 */
export function getMarketplaceByAppCodeConfigure(appCode: string, body?: string, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/marketplace/${encodeURIComponent(appCode)}/configure`, {
        ...opts,
        body
    });
}
/**
 * Update marketplace's App access
 */
export function putMarketplaceByAppCodeConfigure(appCode: string, body?: {
    data: {
        id: string;
        "type": "app";
        attributes?: {
            visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/marketplace/${encodeURIComponent(appCode)}/configure`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteMarketplaceByAppCodeConfigure(appCode: string, body?: string, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/marketplace/${encodeURIComponent(appCode)}/configure`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postMarketplaceByAppCodeConfigure(appCode: string, body?: string, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/marketplace/${encodeURIComponent(appCode)}/configure`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Refresh App token
 */
export function postMarketplaceRefreshToken(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "app";
                attributes?: {
                    appRefreshToken?: string;
                    appToken?: string;
                    createdAt?: string;
                    expiresIn?: number;
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/marketplace/refresh-token", {
        ...opts,
        method: "POST"
    });
}
export function deleteMarketplaceRefreshToken(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/marketplace/refresh-token", {
        ...opts,
        method: "DELETE"
    });
}
export function putMarketplaceRefreshToken(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/marketplace/refresh-token", {
        ...opts,
        method: "PUT"
    });
}
export function getMarketplaceRefreshToken(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/marketplace/refresh-token", {
        ...opts
    });
}
/**
 * Log out user
 */
export function deleteMicrosoftById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/microsoft/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postMicrosoftById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/microsoft/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
export function putMicrosoftById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/microsoft/${encodeURIComponent(id)}`, {
        ...opts,
        method: "PUT",
        body
    });
}
export function getMicrosoftById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/microsoft/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Search opportunities
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/opportunities.csv?keywords=AO100*
 *
 */
export function getOpportunities(body?: string, { keywords, returnMoreData, perimeterManagersType, positioningStates, period, startDate, endDate, opportunityStates, opportunityTypes, expertiseAreas, activityAreas, tools, places, durations, origins, flags, onlyVisible, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    returnMoreData?: string[];
    perimeterManagersType?: string;
    positioningStates?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    opportunityStates?: number[];
    opportunityTypes?: string[];
    expertiseAreas?: string[];
    activityAreas?: string;
    tools?: string[];
    places?: string[];
    durations?: number[];
    origins?: string[];
    flags?: number[];
    onlyVisible?: boolean;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                    turnoverWeightedExcludingTax?: number;
                    turnoverEstimatedExcludingTax?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "opportunity";
                attributes?: {
                    creationDate?: string;
                    title?: string;
                    reference?: string;
                    typeOf?: number;
                    mode?: 1 | 2 | 3 | 4;
                    state?: number;
                    place?: string;
                    isVisible?: boolean;
                    startDate?: string | "immediate";
                    closingDate?: string;
                    answerDate?: string;
                    duration?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    turnoverWeightedExcludingTax?: number;
                    estimatesExcludingTax?: number;
                    turnoverEstimatedExcludingTax?: number;
                    expertiseArea?: string;
                    activityAreas?: string[];
                    origin?: {
                        typeOf: number;
                        detail: string;
                    };
                    tools?: string[];
                    numberOfActivePositionings?: number;
                    canShowContact?: boolean;
                    canShowCompany?: boolean;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    thumbnail?: string;
                    canReadContact?: boolean;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    thumbnail?: string;
                    canReadCompany?: boolean;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/opportunities${QS.query(QS.explode({
        keywords,
        returnMoreData,
        perimeterManagersType,
        positioningStates,
        period,
        startDate,
        endDate,
        opportunityStates,
        opportunityTypes,
        expertiseAreas,
        activityAreas,
        tools,
        places,
        durations,
        origins,
        flags,
        onlyVisible,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create an opportunity
 */
export function postOpportunities(body?: {
    data: {
        "type": "opportunity";
        attributes: {
            creationDate?: string;
            title: string;
            reference?: string;
            state?: number;
            stateReason?: {
                typeOf?: number;
                detail?: string;
                [key: string]: any;
            };
            typeOf?: number;
            origin?: {
                typeOf: number;
                detail: string;
            };
            expertiseArea?: string;
            activityAreas?: string[];
            tools?: string[];
            place?: string;
            duration?: number;
            estimatesExcludingTax?: number;
            turnoverEstimatedExcludingTax?: number;
            weighting?: number;
            isVisible?: boolean;
            startDate?: string | "immediate";
            currency?: number;
            exchangeRate?: number;
            currencyAgency?: number;
            exchangeRateAgency?: number;
        };
        relationships?: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
            company?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            };
            contact?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "contact";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "opportunity";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    workUnitRate?: number;
                    title?: string;
                    reference?: string;
                    state?: number;
                    stateReason?: {
                        typeOf?: number;
                        detail?: string;
                        [key: string]: any;
                    };
                    typeOf?: number;
                    mode?: 1 | 2 | 3 | 4;
                    origin?: {
                        typeOf: number;
                        detail: string;
                    };
                    description?: string;
                    criteria?: string;
                    expertiseArea?: string;
                    activityAreas?: string[];
                    tools?: string[];
                    place?: string;
                    duration?: number;
                    turnoverWeightedExcludingTax?: number;
                    estimatesExcludingTax?: number;
                    turnoverEstimatedExcludingTax?: number;
                    weighting?: number;
                    isVisible?: boolean;
                    startDate?: string | "immediate";
                    closingDate?: string;
                    answerDate?: string;
                    validateSimulation?: boolean;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    numberOfProjects?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    workUnitRateOnProjectsAndOpportunities?: number;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/opportunities", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteOpportunities(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/opportunities", {
        ...opts,
        method: "DELETE"
    });
}
export function putOpportunities(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/opportunities", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty opportunity's default information data
 */
export function getOpportunitiesDefault(body?: string, { contact, company, typeOf }: {
    contact?: number;
    company?: number;
    typeOf?: number;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "opportunity";
                attributes?: {
                    state?: number;
                    stateReason?: {
                        typeOf?: number;
                        detail?: string;
                        [key: string]: any;
                    };
                    typeOf?: number;
                    mode?: 1 | 2 | 3 | 4;
                    startDate?: string | "immediate";
                    activityAreas?: string[];
                    expertiseArea?: string;
                    place?: string;
                    tools?: string[];
                    answerDate?: string;
                    closingDate?: string;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                    origin?: {
                        typeOf: number;
                        detail: string;
                    };
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/opportunities/default${QS.query(QS.explode({
        contact,
        company,
        typeOf
    }))}`, {
        ...opts,
        body
    });
}
export function putOpportunitiesDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "opportunity";
                attributes?: {
                    state?: number;
                    stateReason?: {
                        typeOf?: number;
                        detail?: string;
                        [key: string]: any;
                    };
                    typeOf?: number;
                    mode?: 1 | 2 | 3 | 4;
                    startDate?: string | "immediate";
                    activityAreas?: string[];
                    expertiseArea?: string;
                    place?: string;
                    tools?: string[];
                    answerDate?: string;
                    closingDate?: string;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                    origin?: {
                        typeOf: number;
                        detail: string;
                    };
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/opportunities/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteOpportunitiesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/opportunities/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postOpportunitiesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/opportunities/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get opportunity's basic data
 */
export function getOpportunitiesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "opportunity";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    title?: string;
                    reference?: string;
                    typeOf?: number;
                    mode?: 1 | 2 | 3 | 4;
                    state?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    workUnitRate?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
                included?: ({
                    id: string;
                    "type": "company";
                    attributes?: {
                        name?: string;
                    };
                })[];
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/opportunities/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the opportunity
 */
export function deleteOpportunitiesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/opportunities/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function putOpportunitiesById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "opportunity";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    title?: string;
                    reference?: string;
                    typeOf?: number;
                    mode?: 1 | 2 | 3 | 4;
                    state?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    workUnitRate?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
                included?: ({
                    id: string;
                    "type": "company";
                    attributes?: {
                        name?: string;
                    };
                })[];
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/opportunities/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postOpportunitiesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/opportunities/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search orders
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/orders.csv?keywords=BDC1*
 *
 */
export function getOrders(body?: string, { keywords, projectTypes, paymentMethods, states, period, startDate, endDate, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    projectTypes?: number[];
    paymentMethods?: number[];
    states?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                    turnoverInvoicedExcludingTax?: number;
                    turnoverOrderedExcludingTax?: number;
                    deltaInvoicedExcludingTax?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "order";
                attributes?: {
                    date?: string;
                    "number"?: string;
                    reference?: string;
                    customerAgreement?: boolean;
                    turnoverInvoicedExcludingTax?: number;
                    turnoverOrderedExcludingTax?: number;
                    deltaInvoicedExcludingTax?: number;
                    state?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/orders${QS.query(QS.explode({
        keywords,
        projectTypes,
        paymentMethods,
        states,
        period,
        startDate,
        endDate,
        flags,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create an order
 */
export function postOrders(body?: {
    data: {
        "type": "order";
        attributes: {
            date?: string;
            "number": string;
            customerAgreement?: boolean;
            state?: number;
            typeOf?: "schedule" | "monthly";
            reference?: string;
            language?: "fr" | "en";
            paymentMethod?: number;
            paymentTerm?: number;
            taxRates?: number[];
            turnoverOrderedExcludingTax?: number;
            informationComments?: string;
            legals?: string;
            createInvoiceAutomatically?: boolean;
            copyCommentsOnNewInvoice?: boolean;
            showCommentsOnPDF?: boolean;
            showFactorOnPDF?: boolean;
            showCompanyVATNumberOnPDF?: boolean;
            showCompanyNumberOnPDF?: boolean;
            showBankDetailsOnPDF?: boolean;
            showProjectReferenceOnPDF?: boolean;
            showResourcesNameOnPDF?: boolean;
            showAverageDailyPriceOnPDF?: boolean;
            showNumberOfWorkingDaysOnPDF?: boolean;
            showFooterOnPDF?: boolean;
            separateActivityExpensesAndPurchases?: boolean;
            groupDeliveries?: boolean;
            schedules?: ({
                date: string;
                title: string;
                turnoverQuotaExcludingTax: number;
                turnoverTermOfPaymentExcludingTax: number;
                forceTermOfPaymentExcludingTax: boolean;
            } | {
                id: string;
                date: string;
                title: string;
                turnoverQuotaExcludingTax: number;
                turnoverTermOfPaymentExcludingTax: number;
                forceTermOfPaymentExcludingTax: boolean;
            })[];
        };
        relationships: {
            project: {
                data: {
                    id: string;
                    "type": "project";
                };
            };
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            bankDetail?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "bankdetail";
                };
            };
            billingDetail?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "detail";
                };
            };
            factor?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            };
            deliveriesPurchases?: {
                data: ({
                    id: string;
                    "type": "delivery";
                } | {
                    id: string;
                    "type": "purchase";
                })[];
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "noBillingDetail" | "noBankDetail" | "orderHasNoCompany";
                    detail: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "order";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    date?: string;
                    "number"?: string;
                    customerAgreement?: boolean;
                    state?: number;
                    typeOf?: "schedule" | "monthly";
                    reference?: string;
                    startDate?: string;
                    endDate?: string;
                    language?: "fr" | "en";
                    paymentMethod?: number;
                    paymentTerm?: number;
                    sendingMode?: number;
                    billingInstructions?: string;
                    taxRate?: number;
                    taxRates?: number[];
                    turnoverOrderedExcludingTax?: number;
                    informationComments?: string;
                    legals?: string;
                    createInvoiceAutomatically?: boolean;
                    copyCommentsOnNewInvoice?: boolean;
                    showCommentsOnPDF?: boolean;
                    showFactorOnPDF?: boolean;
                    showCompanyVATNumberOnPDF?: boolean;
                    showCompanyNumberOnPDF?: boolean;
                    showBankDetailsOnPDF?: boolean;
                    showProjectReferenceOnPDF?: boolean;
                    showResourcesNameOnPDF?: boolean;
                    showAverageDailyPriceOnPDF?: boolean;
                    showNumberOfWorkingDaysOnPDF?: boolean;
                    showFooterOnPDF?: boolean;
                    separateActivityExpensesAndPurchases?: boolean;
                    groupDeliveries?: boolean;
                    monitorSignedTimesheets?: boolean;
                    blockInvoiceGeneration?: boolean;
                    attachSignedTimesheetsToEmail?: boolean;
                    schedules?: {
                        id: string;
                        date: string;
                        title: string;
                        turnoverQuotaExcludingTax: number;
                        turnoverTermOfPaymentExcludingTax: number;
                        forceTermOfPaymentExcludingTax: boolean;
                        invoices?: {
                            id: string;
                        }[];
                    }[];
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    bankDetail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "bankdetail";
                        };
                    };
                    billingDetail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "detail";
                        };
                    };
                    headOffice?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "detail";
                        };
                    };
                    factor?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveriesPurchases?: {
                        data: ({
                            id: string;
                            "type": "delivery";
                        } | {
                            id: string;
                            "type": "purchase";
                        })[];
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    banksDetails?: {
                        id: string;
                        description: string;
                        iban: string;
                        bic: string;
                        isDefault: boolean;
                    }[];
                    ordersDistinguishHeadOffice?: boolean;
                    ordersAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    "number"?: string;
                    vatNumber?: string;
                    billingDetails?: {
                        id: string;
                        name: string;
                        contact: string;
                        phone1: string;
                        email1: string;
                        email2: string;
                        email3: string;
                        address1: string;
                        address2: string;
                        address3: string;
                        postcode: string;
                        town: string;
                        country: string;
                        state: boolean;
                        isUsed: boolean;
                        canEdit: boolean;
                        canDelete: boolean;
                    }[];
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    canReadCompany?: boolean;
                    canWriteCompany?: boolean;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveries?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        }[];
                    };
                    purchases?: {
                        data: {
                            id: string;
                            "type": "purchase";
                        }[];
                    };
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                };
            } | {
                id: string;
                "type": "purchase";
                attributes?: {
                    title?: string;
                    reference?: string;
                    date?: string;
                    startDate?: string;
                    endDate?: string;
                    subscription?: number;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/orders", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteOrders(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/orders", {
        ...opts,
        method: "DELETE"
    });
}
export function putOrders(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/orders", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty order's default information data
 */
export function getOrdersDefault(project: number, body?: string, { deliveries, purchases }: {
    deliveries?: number[];
    purchases?: number[];
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "order";
                attributes?: {
                    date?: string;
                    startDate?: string;
                    endDate?: string;
                    state?: number;
                    typeOf?: "schedule" | "monthly";
                    language?: "fr" | "en";
                    paymentMethod?: number;
                    paymentTerm?: number;
                    taxRate?: number;
                    taxRates?: number[];
                    turnoverOrderedExcludingTax?: number;
                    legals?: string;
                    createInvoiceAutomatically?: boolean;
                    copyCommentsOnNewInvoice?: boolean;
                    showCommentsOnPDF?: boolean;
                    showFactorOnPDF?: boolean;
                    showCompanyVATNumberOnPDF?: boolean;
                    showCompanyNumberOnPDF?: boolean;
                    showBankDetailsOnPDF?: boolean;
                    showProjectReferenceOnPDF?: boolean;
                    showResourcesNameOnPDF?: boolean;
                    showAverageDailyPriceOnPDF?: boolean;
                    showNumberOfWorkingDaysOnPDF?: boolean;
                    showFooterOnPDF?: boolean;
                    separateActivityExpensesAndPurchases?: boolean;
                    groupDeliveries?: boolean;
                    monitorSignedTimesheets?: boolean;
                    blockInvoiceGeneration?: boolean;
                    attachSignedTimesheetsToEmail?: boolean;
                    schedules?: {
                        id: string;
                        date: string;
                        title: string;
                        turnoverQuotaExcludingTax: number;
                        turnoverTermOfPaymentExcludingTax: number;
                        forceTermOfPaymentExcludingTax: boolean;
                        invoices?: {
                            id: string;
                        }[];
                    }[];
                    billingInstructions?: string;
                    sendingMode?: number;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    bankDetail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "bankdetail";
                        };
                    };
                    billingDetail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "detail";
                        };
                    };
                    headOffice?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "detail";
                        };
                    };
                    factor?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveriesPurchases?: {
                        data: ({
                            id: string;
                            "type": "delivery";
                        } | {
                            id: string;
                            "type": "purchase";
                        })[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    ordersDistinguishHeadOffice?: boolean;
                    ordersSeparateActivityExpensesAndPurchases?: boolean;
                    ordersGroupDeliveries?: boolean;
                    ordersMonitorSignedTimesheets?: boolean;
                    ordersBlockInvoiceGeneration?: boolean;
                    ordersAttachSignedTimesheetsToEmail?: boolean;
                    ordersAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    vatNumber?: string;
                    billingDetails?: {
                        id: string;
                        name: string;
                        contact: string;
                        phone1: string;
                        email1: string;
                        email2: string;
                        email3: string;
                        address1: string;
                        address2: string;
                        address3: string;
                        postcode: string;
                        town: string;
                        country: string;
                        state: boolean;
                        isUsed: boolean;
                        canEdit: boolean;
                        canDelete: boolean;
                    }[];
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    canReadCompany?: boolean;
                    canWriteCompany?: boolean;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveries?: any[];
                    purchases?: any[];
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                };
            } | {
                id: string;
                "type": "purchase";
                attributes?: {
                    title?: string;
                    reference?: string;
                    date?: string;
                    startDate?: string;
                    endDate?: string;
                    subscription?: number;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/orders/default${QS.query(QS.explode({
        project,
        deliveries,
        purchases
    }))}`, {
        ...opts,
        body
    });
}
export function putOrdersDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "order";
                attributes?: {
                    date?: string;
                    startDate?: string;
                    endDate?: string;
                    state?: number;
                    typeOf?: "schedule" | "monthly";
                    language?: "fr" | "en";
                    paymentMethod?: number;
                    paymentTerm?: number;
                    taxRate?: number;
                    taxRates?: number[];
                    turnoverOrderedExcludingTax?: number;
                    legals?: string;
                    createInvoiceAutomatically?: boolean;
                    copyCommentsOnNewInvoice?: boolean;
                    showCommentsOnPDF?: boolean;
                    showFactorOnPDF?: boolean;
                    showCompanyVATNumberOnPDF?: boolean;
                    showCompanyNumberOnPDF?: boolean;
                    showBankDetailsOnPDF?: boolean;
                    showProjectReferenceOnPDF?: boolean;
                    showResourcesNameOnPDF?: boolean;
                    showAverageDailyPriceOnPDF?: boolean;
                    showNumberOfWorkingDaysOnPDF?: boolean;
                    showFooterOnPDF?: boolean;
                    separateActivityExpensesAndPurchases?: boolean;
                    groupDeliveries?: boolean;
                    monitorSignedTimesheets?: boolean;
                    blockInvoiceGeneration?: boolean;
                    attachSignedTimesheetsToEmail?: boolean;
                    schedules?: {
                        id: string;
                        date: string;
                        title: string;
                        turnoverQuotaExcludingTax: number;
                        turnoverTermOfPaymentExcludingTax: number;
                        forceTermOfPaymentExcludingTax: boolean;
                        invoices?: {
                            id: string;
                        }[];
                    }[];
                    billingInstructions?: string;
                    sendingMode?: number;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    bankDetail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "bankdetail";
                        };
                    };
                    billingDetail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "detail";
                        };
                    };
                    headOffice?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "detail";
                        };
                    };
                    factor?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveriesPurchases?: {
                        data: ({
                            id: string;
                            "type": "delivery";
                        } | {
                            id: string;
                            "type": "purchase";
                        })[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    ordersDistinguishHeadOffice?: boolean;
                    ordersSeparateActivityExpensesAndPurchases?: boolean;
                    ordersGroupDeliveries?: boolean;
                    ordersMonitorSignedTimesheets?: boolean;
                    ordersBlockInvoiceGeneration?: boolean;
                    ordersAttachSignedTimesheetsToEmail?: boolean;
                    ordersAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    vatNumber?: string;
                    billingDetails?: {
                        id: string;
                        name: string;
                        contact: string;
                        phone1: string;
                        email1: string;
                        email2: string;
                        email3: string;
                        address1: string;
                        address2: string;
                        address3: string;
                        postcode: string;
                        town: string;
                        country: string;
                        state: boolean;
                        isUsed: boolean;
                        canEdit: boolean;
                        canDelete: boolean;
                    }[];
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    canReadCompany?: boolean;
                    canWriteCompany?: boolean;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveries?: any[];
                    purchases?: any[];
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                };
            } | {
                id: string;
                "type": "purchase";
                attributes?: {
                    title?: string;
                    reference?: string;
                    date?: string;
                    startDate?: string;
                    endDate?: string;
                    subscription?: number;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/orders/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteOrdersDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/orders/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postOrdersDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/orders/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get order's basic data
 */
export function getOrdersById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "order";
                attributes?: {
                    date?: string;
                    "number"?: string;
                    reference?: string;
                    typeOf?: "schedule" | "monthly";
                    schedules?: {
                        id: string;
                        date: string;
                        title: string;
                        turnoverQuotaExcludingTax: number;
                        turnoverTermOfPaymentExcludingTax: number;
                        forceTermOfPaymentExcludingTax: boolean;
                        invoices?: {
                            id: string;
                        }[];
                    }[];
                    startDate?: string;
                    endDate?: string;
                    separateActivityExpensesAndPurchases?: boolean;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/orders/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the order
 */
export function deleteOrdersById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/orders/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function putOrdersById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "order";
                attributes?: {
                    date?: string;
                    "number"?: string;
                    reference?: string;
                    typeOf?: "schedule" | "monthly";
                    schedules?: {
                        id: string;
                        date: string;
                        title: string;
                        turnoverQuotaExcludingTax: number;
                        turnoverTermOfPaymentExcludingTax: number;
                        forceTermOfPaymentExcludingTax: boolean;
                        invoices?: {
                            id: string;
                        }[];
                    }[];
                    startDate?: string;
                    endDate?: string;
                    separateActivityExpensesAndPurchases?: boolean;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/orders/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postOrdersById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/orders/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search payments
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/payments.csv?keywords=ACH1*
 *
 */
export function getPayments(body?: string, { keywords, subscriptionTypes, purchaseTypes, paymentStates, paymentMethods, period, startDate, endDate, flags, encoding, exportToDownloadCenter, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    subscriptionTypes?: number[];
    purchaseTypes?: number[];
    paymentStates?: number[];
    paymentMethods?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    exportToDownloadCenter?: boolean;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                    amountExcludingTax?: number;
                    amountIncludingTax?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "payment";
                attributes?: {
                    date?: string;
                    performedDate?: string;
                    expectedDate?: string;
                    state?: number;
                    "number"?: string;
                    amountExcludingTax?: number;
                    amountIncludingTax?: number;
                    numberOfFiles?: number;
                };
                relationships?: {
                    purchase?: {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    };
                    file?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "document";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "purchase";
                attributes?: {
                    title?: string;
                    subscription?: number;
                    typeOf?: number;
                    reference?: string;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/payments${QS.query(QS.explode({
        keywords,
        subscriptionTypes,
        purchaseTypes,
        paymentStates,
        paymentMethods,
        period,
        startDate,
        endDate,
        flags,
        encoding,
        exportToDownloadCenter,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a payment
 */
export function postPayments(body?: {
    data: {
        "type": "positioning";
        attributes?: {
            date?: string;
            state?: number;
            paymentMethod?: number;
            taxRates?: number[];
            startDate?: string;
            endDate?: string;
            "number"?: string;
            performedDate?: string;
            amountExcludingTax?: number;
            informationComments?: string;
        };
        relationships: {
            purchase: {
                data: {
                    id: string;
                    "type": "purchase";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "payment";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    date?: string;
                    state?: number;
                    paymentMethod?: number;
                    taxRate?: number;
                    taxRates?: number[];
                    startDate?: string;
                    endDate?: string;
                    "number"?: string;
                    expectedDate?: string;
                    performedDate?: string;
                    amountExcludingTax?: number;
                    amountIncludingTax?: number;
                    informationComments?: string;
                    activityDetails?: {
                        resource: {
                            id: string;
                            firstName: string;
                            lastName: string;
                            averageDailyCost: number;
                            costsProduction: number;
                            numberOfWorkingDays?: number;
                            timesReports: {
                                id: string;
                                term: string;
                            }[];
                            expensesReports: {
                                id: string;
                                term: string;
                            }[];
                        };
                    }[];
                };
                relationships?: {
                    purchase?: {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "purchase";
                attributes?: {
                    title?: string;
                    reference?: string;
                    subscription?: number;
                    typeOf?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    paymentTerm?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    additionalTurnoverAndCosts?: {
                        data: null;
                    } | {
                        data?: {
                            id: string;
                            "type": "additionalturnoverandcost";
                        };
                        [key: string]: any;
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    purchasesAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "additionalturnoverandcost";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/payments", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deletePayments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/payments", {
        ...opts,
        method: "DELETE"
    });
}
export function putPayments(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/payments", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty payment's default basic data
 */
export function getPaymentsDefault(purchase: number, body?: string, { term }: {
    term?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "payment";
                attributes?: {
                    date?: string;
                    state?: number;
                    paymentMethod?: number;
                    taxRate?: number;
                    taxRates?: number[];
                    startDate?: string;
                    endDate?: string;
                    expectedDate?: string;
                    amountExcludingTax?: number;
                    amountIncludingTax?: number;
                };
                relationships?: {
                    purchase?: {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
            } | {
                id: string;
                "type": "purchase";
                attributes?: {
                    title?: string;
                    reference?: string;
                    typeOf?: number;
                    subscription?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    paymentTerm?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    purchasesAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/payments/default${QS.query(QS.explode({
        purchase,
        term
    }))}`, {
        ...opts,
        body
    });
}
export function putPaymentsDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "payment";
                attributes?: {
                    date?: string;
                    state?: number;
                    paymentMethod?: number;
                    taxRate?: number;
                    taxRates?: number[];
                    startDate?: string;
                    endDate?: string;
                    expectedDate?: string;
                    amountExcludingTax?: number;
                    amountIncludingTax?: number;
                };
                relationships?: {
                    purchase?: {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
            } | {
                id: string;
                "type": "purchase";
                attributes?: {
                    title?: string;
                    reference?: string;
                    typeOf?: number;
                    subscription?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    paymentTerm?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    purchasesAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/payments/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deletePaymentsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/payments/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postPaymentsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/payments/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get payment's basic data
 */
export function getPaymentsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "payment";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    date?: string;
                    state?: number;
                    paymentMethod?: number;
                    taxRate?: number;
                    taxRates?: number[];
                    startDate?: string;
                    endDate?: string;
                    "number"?: string;
                    expectedDate?: string;
                    performedDate?: string;
                    amountExcludingTax?: number;
                    amountIncludingTax?: number;
                    informationComments?: string;
                    activityDetails?: {
                        resource: {
                            id: string;
                            firstName: string;
                            lastName: string;
                            averageDailyCost: number;
                            costsProduction: number;
                            numberOfWorkingDays?: number;
                            timesReports: {
                                id: string;
                                term: string;
                            }[];
                            expensesReports: {
                                id: string;
                                term: string;
                            }[];
                        };
                    }[];
                };
                relationships?: {
                    purchase?: {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "purchase";
                attributes?: {
                    title?: string;
                    reference?: string;
                    subscription?: number;
                    typeOf?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    paymentTerm?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    additionalTurnoverAndCosts?: {
                        data: null;
                    } | {
                        data?: {
                            id: string;
                            "type": "additionalturnoverandcost";
                        };
                        [key: string]: any;
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    purchasesAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "additionalturnoverandcost";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/payments/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the payment
 */
export function deletePaymentsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/payments/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to a payment
 */
export function putPaymentsById(body?: {
    data: {
        id: string;
        "type": "payment";
        attributes?: {
            date?: string;
            state?: number;
            paymentMethod?: number;
            taxRates?: number[];
            startDate?: string;
            endDate?: string;
            "number"?: string;
            performedDate?: string;
            amountExcludingTax?: number;
            informationComments?: string;
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "payment";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    date?: string;
                    state?: number;
                    paymentMethod?: number;
                    taxRate?: number;
                    taxRates?: number[];
                    startDate?: string;
                    endDate?: string;
                    "number"?: string;
                    expectedDate?: string;
                    performedDate?: string;
                    amountExcludingTax?: number;
                    amountIncludingTax?: number;
                    informationComments?: string;
                    activityDetails?: {
                        resource: {
                            id: string;
                            firstName: string;
                            lastName: string;
                            averageDailyCost: number;
                            costsProduction: number;
                            numberOfWorkingDays?: number;
                            timesReports: {
                                id: string;
                                term: string;
                            }[];
                            expensesReports: {
                                id: string;
                                term: string;
                            }[];
                        };
                    }[];
                };
                relationships?: {
                    purchase?: {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "purchase";
                attributes?: {
                    title?: string;
                    reference?: string;
                    subscription?: number;
                    typeOf?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    paymentTerm?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    additionalTurnoverAndCosts?: {
                        data: null;
                    } | {
                        data?: {
                            id: string;
                            "type": "additionalturnoverandcost";
                        };
                        [key: string]: any;
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    purchasesAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "additionalturnoverandcost";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/payments/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postPaymentsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/payments/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search poles
 */
export function getPoles(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                    state?: boolean;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/poles", {
        ...opts
    });
}
/**
 * Create a pole
 */
export function postPoles(body?: {
    data: {
        "type": "pole";
        attributes: {
            name: string;
            state?: boolean;
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "pole";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    state?: boolean;
                };
                relationships?: {
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/poles", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deletePoles(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/poles", {
        ...opts,
        method: "DELETE"
    });
}
export function putPoles(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/poles", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get pole's basic data
 */
export function getPolesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "pole";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    state?: boolean;
                };
                relationships?: {
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/poles/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the pole
 */
export function deletePolesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/poles/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to a pole
 */
export function putPolesById(body?: {
    data: {
        id: string;
        "type": "pole";
        attributes?: {
            name?: string;
            state?: boolean;
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "pole";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    state?: boolean;
                };
                relationships?: {
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/poles/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postPolesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/poles/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search positionings
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/positionings.csv?keywords=POS100*
 *
 */
export function getPositionings(body?: string, { keywords, perimeterManagersType, positioningType, entityTypes, opportunityTypes, positioningStates, opportunityStates, returnMoreData, period, startDate, endDate, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    perimeterManagersType?: string;
    positioningType?: string;
    entityTypes?: number[];
    opportunityTypes?: number[];
    positioningStates?: number[];
    opportunityStates?: number[];
    returnMoreData?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "positioning";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    state?: number;
                    startDate?: string;
                    endDate?: string;
                    informationComments?: string;
                    canReadPositioning?: boolean;
                    canShowDependsOn?: boolean;
                    canShowOpportunity?: boolean;
                    canShowUpdateDate?: boolean;
                    canShowState?: boolean;
                    canShowCreationDate?: boolean;
                    canShowStartDate?: boolean;
                    canShowEndDate?: boolean;
                    canShowInformationComments?: boolean;
                };
                relationships?: {
                    createdBy?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    creator?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    thumbnail?: string;
                    typeOf?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                    thumbnail?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                    typeOf?: number;
                    mode?: 1 | 2 | 3 | 4;
                    isVisible?: boolean;
                    canShowContact?: boolean;
                    canShowCompany?: boolean;
                    currency?: number;
                    canReadOpportunity?: boolean;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    reference?: string;
                    subscription?: number;
                    name?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    canReadContact?: boolean;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    canReadCompany?: boolean;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | ({
                data: null;
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            }))[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/positionings${QS.query(QS.explode({
        keywords,
        perimeterManagersType,
        positioningType,
        entityTypes,
        opportunityTypes,
        positioningStates,
        opportunityStates,
        returnMoreData,
        period,
        startDate,
        endDate,
        flags,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a positioning.
 *
 * If state is `won` it will attach this positioning to a new project or an existing one.
 *
 */
export function postPositionings(body?: {
    data: {
        "type": "positioning";
        attributes?: {
            state?: number;
            stateReason?: {
                typeOf?: number;
                detail?: string;
                [key: string]: any;
            };
            startDate?: string;
            endDate?: string;
            averageDailyPriceExcludingTax?: number;
            averageDailyCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            numberOfDaysFree?: number;
            informationComments?: string;
            includedInSimulation?: boolean;
            additionalTurnoverAndCosts?: {
                id: string;
                title: string;
                turnoverExcludingTax: number;
                costsExcludingTax: number;
                typeOf: number;
            }[];
        };
        relationships: {
            opportunity: {
                data: {
                    id: string;
                    "type": "opportunity";
                };
            };
            project?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            };
            dependsOn: {
                data: {
                    id: string;
                    "type": "resource";
                };
            } | {
                data: {
                    id: string;
                    "type": "candidate";
                };
            } | {
                data: {
                    id: string;
                    "type": "product";
                };
            };
        };
    };
}, { sendMailToDependsOnManager, sendMailToOpportunityManager }: {
    sendMailToDependsOnManager?: boolean;
    sendMailToOpportunityManager?: boolean;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "positioning";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    state?: number;
                    startDate?: string;
                    endDate?: string;
                    averageDailyPriceExcludingTax?: number;
                    averageDailyCost?: number;
                    numberOfDaysInvoicedOrQuantity?: number;
                    numberOfDaysFree?: number;
                    informationComments?: string;
                    includedInSimulation?: boolean;
                    additionalTurnoverAndCosts?: {
                        id: string;
                        title: string;
                        turnoverExcludingTax: number;
                        costsExcludingTax: number;
                        typeOf: number;
                    }[];
                    turnoverSimulatedExcludingTax?: number;
                    costsSimulatedExcludingTax?: number;
                    marginSimulatedExcludingTax?: number;
                    profitabilitySimulated?: number;
                    occupationRate?: number;
                };
                relationships?: {
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    name?: string;
                    subscription?: number;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    calendar?: string;
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                    typeOf?: number;
                    mode?: 1 | 2 | 3 | 4;
                    state?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    canShowContact?: boolean;
                    canShowCompany?: boolean;
                    workUnitRate?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/positionings${QS.query(QS.explode({
        sendMailToDependsOnManager,
        sendMailToOpportunityManager
    }))}`, oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deletePositionings(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/positionings", {
        ...opts,
        method: "DELETE"
    });
}
export function putPositionings(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/positionings", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get positioning's basic data
 */
export function getPositioningsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "positioning";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    state?: number;
                    startDate?: string;
                    endDate?: string;
                    averageDailyPriceExcludingTax?: number;
                    averageDailyCost?: number;
                    numberOfDaysInvoicedOrQuantity?: number;
                    numberOfDaysFree?: number;
                    informationComments?: string;
                    includedInSimulation?: boolean;
                    additionalTurnoverAndCosts?: {
                        id: string;
                        title: string;
                        turnoverExcludingTax: number;
                        costsExcludingTax: number;
                        typeOf: number;
                    }[];
                    turnoverSimulatedExcludingTax?: number;
                    costsSimulatedExcludingTax?: number;
                    marginSimulatedExcludingTax?: number;
                    profitabilitySimulated?: number;
                    occupationRate?: number;
                };
                relationships?: {
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    name?: string;
                    subscription?: number;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    calendar?: string;
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                    typeOf?: number;
                    mode?: 1 | 2 | 3 | 4;
                    state?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    canShowContact?: boolean;
                    canShowCompany?: boolean;
                    workUnitRate?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/positionings/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the positioning
 */
export function deletePositioningsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/positionings/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to a positioning.
 *
 * If state is `won` it will attach this positioning to a new project or an existing one.
 *
 */
export function putPositioningsById(body?: {
    data: {
        id: string;
        "type": "positioning";
        attributes?: {
            state?: number;
            stateReason?: {
                typeOf?: number;
                detail?: string;
                [key: string]: any;
            };
            startDate?: string;
            endDate?: string;
            averageDailyPriceExcludingTax?: number;
            averageDailyCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            numberOfDaysFree?: number;
            informationComments?: string;
            includedInSimulation?: boolean;
            additionalTurnoverAndCosts?: ({
                title: string;
                turnoverExcludingTax: number;
                costsExcludingTax: number;
                typeOf: number;
            } | {
                id: string;
                title: string;
                turnoverExcludingTax: number;
                costsExcludingTax: number;
                typeOf: number;
            })[];
        };
        relationships?: {
            project?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            };
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "positioning";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    state?: number;
                    startDate?: string;
                    endDate?: string;
                    averageDailyPriceExcludingTax?: number;
                    averageDailyCost?: number;
                    numberOfDaysInvoicedOrQuantity?: number;
                    numberOfDaysFree?: number;
                    informationComments?: string;
                    includedInSimulation?: boolean;
                    additionalTurnoverAndCosts?: {
                        id: string;
                        title: string;
                        turnoverExcludingTax: number;
                        costsExcludingTax: number;
                        typeOf: number;
                    }[];
                    turnoverSimulatedExcludingTax?: number;
                    costsSimulatedExcludingTax?: number;
                    marginSimulatedExcludingTax?: number;
                    profitabilitySimulated?: number;
                    occupationRate?: number;
                };
                relationships?: {
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    name?: string;
                    subscription?: number;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    calendar?: string;
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                    typeOf?: number;
                    mode?: 1 | 2 | 3 | 4;
                    state?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    canShowContact?: boolean;
                    canShowCompany?: boolean;
                    workUnitRate?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/positionings/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postPositioningsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/positionings/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search products
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/products.csv?keywords=PROD100*
 *
 */
export function getProducts(body?: string, { keywords, productStates, productTypes, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    productStates?: number[];
    productTypes?: number[];
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "product";
                attributes?: {
                    reference?: string;
                    subscription?: number;
                    name?: string;
                    priceExcludingTax?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/products${QS.query(QS.explode({
        keywords,
        productStates,
        productTypes,
        flags,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a product
 */
export function postProducts(body?: {
    data: {
        "type": "product";
        attributes: {
            name: string;
            reference?: string;
            state?: number;
            subscription?: number;
            taxRate?: number;
            currency?: number;
            currencyAgency?: number;
            exchangeRate?: number;
            exchangeRateAgency?: number;
            priceExcludingTax?: number;
            description?: string;
        };
        relationships: {
            mainManager: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "product";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    reference?: string;
                    state?: number;
                    subscription?: number;
                    taxRate?: number;
                    taxRates?: number[];
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                    priceExcludingTax?: number;
                    priceIncludingTax?: number;
                    description?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    productsAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/products", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteProducts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/products", {
        ...opts,
        method: "DELETE"
    });
}
export function putProducts(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/products", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty product's default information data
 */
export function getProductsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "product";
                attributes?: {
                    state?: number;
                    subscription?: number;
                    taxRate?: number;
                    taxRates?: number[];
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                    priceExcludingTax?: number;
                    priceIncludingTax?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    productsAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/products/default", {
        ...opts
    });
}
export function putProductsDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "product";
                attributes?: {
                    state?: number;
                    subscription?: number;
                    taxRate?: number;
                    taxRates?: number[];
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                    priceExcludingTax?: number;
                    priceIncludingTax?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    productsAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/products/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteProductsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/products/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postProductsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/products/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get product's basic data
 */
export function getProductsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "product";
                attributes?: {
                    updateDate?: string;
                    name?: string;
                    subscription?: number;
                    reference?: string;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/products/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the product
 */
export function deleteProductsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/products/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function putProductsById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "product";
                attributes?: {
                    updateDate?: string;
                    name?: string;
                    subscription?: number;
                    reference?: string;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/products/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postProductsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/products/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search projects
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/projects.csv?keywords=PRJ100*
 *
 */
export function getProjects(body?: string, { keywords, projectTypes, projectStates, period, startDate, endDate, expertiseAreas, activityAreas, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    projectTypes?: number[];
    projectStates?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    expertiseAreas?: string[];
    activityAreas?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                    turnoverSimulatedExcludingTax?: number;
                    marginSimulatedExcludingTax?: number;
                    profitabilitySimulated?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "project";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    typeOf?: number;
                    mode?: number;
                    reference?: string;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    turnoverSimulatedExcludingTax?: number;
                    marginSimulatedExcludingTax?: number;
                    profitabilitySimulated?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    thumbnail?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/projects${QS.query(QS.explode({
        keywords,
        projectTypes,
        projectStates,
        period,
        startDate,
        endDate,
        expertiseAreas,
        activityAreas,
        flags,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a project which mode is only 'product' or `fixed'
 */
export function postProjects(body?: {
    data: {
        "type": "project";
        attributes?: {
            creationDate?: string;
            reference?: string;
            state?: number;
            stateReason?: {
                typeOf?: number;
                detail?: string;
                [key: string]: any;
            };
            typeOf: number;
            address?: string;
            postcode?: string;
            town?: string;
            country?: string;
            informationComments?: string;
            startDate?: string;
            endDate?: string;
            currency?: number;
            exchangeRate?: number;
            currencyAgency?: number;
            exchangeRateAgency?: number;
            showBatchesMarkersTab?: boolean;
        };
        relationships?: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
            opportunity?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            };
            company?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            };
            contact?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "contact";
                };
            };
            technical?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "contact";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "project";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    workUnitRate?: number;
                    reference?: string;
                    state?: number;
                    stateReason?: {
                        typeOf?: number;
                        detail?: string;
                        [key: string]: any;
                    };
                    typeOf?: number;
                    mode?: number;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    informationComments?: string;
                    startDate?: string;
                    endDate?: string;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    showBatchesMarkersTab?: boolean;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    opportunity?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    technical?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/projects", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteProjects(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/projects", {
        ...opts,
        method: "DELETE"
    });
}
export function putProjects(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/projects", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get project's basic data
 */
export function getProjectsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "project";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    isProjectManager?: boolean;
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    workUnitRate?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    deliveryRecruitment?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "delivery";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    allowAdvantagesOnProjects?: boolean;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/projects/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the project
 */
export function deleteProjectsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/projects/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function putProjectsById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "project";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    isProjectManager?: boolean;
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    workUnitRate?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    deliveryRecruitment?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "delivery";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    allowAdvantagesOnProjects?: boolean;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/projects/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postProjectsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/projects/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search purchases
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/purchases.csv?keywords=ACH1*
 *
 */
export function getPurchases(body?: string, { keywords, subscriptionTypes, purchaseStates, purchaseTypes, paymentMethods, period, startDate, endDate, flags, encoding, exportToDownloadCenter, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    subscriptionTypes?: number[];
    purchaseStates?: number[];
    purchaseTypes?: number[];
    paymentMethods?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    exportToDownloadCenter?: boolean;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                    totalAmountExcludingTax?: number;
                    deltaExcludingTax?: number;
                    engagedPaymentsAmountExcludingTax?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "purchase";
                attributes?: {
                    date?: string;
                    title?: string;
                    subscription?: number;
                    typeOf?: number;
                    reference?: string;
                    state?: number;
                    taxRate?: number;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    amountExcludingTax?: number;
                    quantity?: number;
                    totalAmountExcludingTax?: number;
                    deltaExcludingTax?: number;
                    engagedPaymentsAmountExcludingTax?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/purchases${QS.query(QS.explode({
        keywords,
        subscriptionTypes,
        purchaseStates,
        purchaseTypes,
        paymentMethods,
        period,
        startDate,
        endDate,
        flags,
        encoding,
        exportToDownloadCenter,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a purchase
 */
export function postPurchases(body?: {
    data: {
        "type": "purchase";
        attributes: {
            date?: string;
            startDate?: string;
            endDate?: string;
            title: string;
            reference?: string;
            "number"?: string;
            state?: number;
            typeOf?: number;
            subscription?: number;
            paymentTerm?: number;
            paymentMethod?: number;
            taxRates?: number[];
            informationComments?: string;
            quantity?: number;
            amountExcludingTax?: number;
            toReinvoice?: boolean;
            reinvoiceRate?: number | ("" | "false" | "off");
            reinvoiceAmountExcludingTax?: number;
            showInformationCommentsOnPDF?: boolean;
            currency?: number;
            currencyAgency?: number;
            exchangeRate?: number;
            exchangeRateAgency?: number;
            createPayments?: "manually" | number;
        };
        relationships?: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
            company?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            };
            contact?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "contact";
                };
            };
            project?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            };
            delivery?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            };
            additionalTurnoverAndCosts?: {
                data: null;
            } | {
                data?: {
                    id: string;
                    "type": "additionalturnoverandcost";
                };
                [key: string]: any;
            };
            billingDetail?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "detail";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "purchase";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    date?: string;
                    startDate?: string;
                    endDate?: string;
                    title?: string;
                    reference?: string;
                    "number"?: string;
                    state?: number;
                    typeOf?: number;
                    subscription?: number;
                    paymentTerm?: number;
                    paymentMethod?: number;
                    taxRate?: number;
                    taxRates?: number[];
                    informationComments?: string;
                    quantity?: number;
                    amountExcludingTax?: number;
                    amountIncludingTax?: number;
                    totalAmountExcludingTax?: number;
                    totalAmountIncludingTax?: number;
                    toReinvoice?: boolean;
                    reinvoiceRate?: number | ("" | "false" | "off");
                    reinvoiceAmountExcludingTax?: number;
                    showInformationCommentsOnPDF?: boolean;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                    additionalTurnoverAndCosts?: {
                        id?: string;
                        typeOf: number;
                        dependsOn: {
                            id?: number;
                            "type"?: string;
                            [key: string]: any;
                        }[];
                    }[];
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    billingDetail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "detail";
                        };
                    };
                    files?: {
                        data?: {
                            id: string;
                            "type": "document";
                        }[];
                        [key: string]: any;
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    purchasesAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    vatNumber?: string;
                    billingDetails?: {
                        id: string;
                        name: string;
                        contact: string;
                        phone1: string;
                        email1: string;
                        email2: string;
                        email3: string;
                        address1: string;
                        address2: string;
                        address3: string;
                        postcode: string;
                        town: string;
                        country: string;
                        state: boolean;
                        isUsed: boolean;
                        canEdit: boolean;
                        canDelete: boolean;
                    }[];
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/purchases", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deletePurchases(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/purchases", {
        ...opts,
        method: "DELETE"
    });
}
export function putPurchases(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/purchases", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty purchase's default information data
 */
export function getPurchasesDefault(body?: string, { project, delivery, additionalTurnoverAndCosts, contact, company }: {
    project?: number;
    delivery?: number;
    additionalTurnoverAndCosts?: number;
    contact?: number;
    company?: number;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "purchase";
                attributes?: {
                    date?: string;
                    state?: number;
                    title?: string;
                    typeOf?: number;
                    startDate?: string;
                    endDate?: string;
                    subscription?: number;
                    paymentTerm?: number;
                    paymentMethod?: number;
                    taxRate?: number;
                    taxRates?: number[];
                    createPayments?: "manually" | number;
                    amountExcludingTax?: number;
                    amountIncludingTax?: number;
                    totalAmountExcludingTax?: number;
                    totalAmountIncludingTax?: number;
                    toReinvoice?: boolean;
                    reinvoiceAmountExcludingTax?: number;
                    reinvoiceRate?: number | ("" | "false" | "off");
                    quantity?: number;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                    additionalTurnoverAndCosts?: {
                        id?: string;
                        typeOf: number;
                        dependsOn: {
                            id?: number;
                            "type"?: string;
                            [key: string]: any;
                        }[];
                    }[];
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    billingDetail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "detail";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    vatNumber?: string;
                    billingDetails?: {
                        id: string;
                        name: string;
                        contact: string;
                        phone1: string;
                        email1: string;
                        email2: string;
                        email3: string;
                        address1: string;
                        address2: string;
                        address3: string;
                        postcode: string;
                        town: string;
                        country: string;
                        state: boolean;
                        isUsed: boolean;
                        canEdit: boolean;
                        canDelete: boolean;
                    }[];
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    purchasesAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/purchases/default${QS.query(QS.explode({
        project,
        delivery,
        additionalTurnoverAndCosts,
        contact,
        company
    }))}`, {
        ...opts,
        body
    });
}
export function putPurchasesDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "purchase";
                attributes?: {
                    date?: string;
                    state?: number;
                    title?: string;
                    typeOf?: number;
                    startDate?: string;
                    endDate?: string;
                    subscription?: number;
                    paymentTerm?: number;
                    paymentMethod?: number;
                    taxRate?: number;
                    taxRates?: number[];
                    createPayments?: "manually" | number;
                    amountExcludingTax?: number;
                    amountIncludingTax?: number;
                    totalAmountExcludingTax?: number;
                    totalAmountIncludingTax?: number;
                    toReinvoice?: boolean;
                    reinvoiceAmountExcludingTax?: number;
                    reinvoiceRate?: number | ("" | "false" | "off");
                    quantity?: number;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                    additionalTurnoverAndCosts?: {
                        id?: string;
                        typeOf: number;
                        dependsOn: {
                            id?: number;
                            "type"?: string;
                            [key: string]: any;
                        }[];
                    }[];
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    billingDetail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "detail";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                    vatNumber?: string;
                    billingDetails?: {
                        id: string;
                        name: string;
                        contact: string;
                        phone1: string;
                        email1: string;
                        email2: string;
                        email3: string;
                        address1: string;
                        address2: string;
                        address3: string;
                        postcode: string;
                        town: string;
                        country: string;
                        state: boolean;
                        isUsed: boolean;
                        canEdit: boolean;
                        canDelete: boolean;
                    }[];
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    purchasesAllowMultiplesTaxRates?: boolean;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/purchases/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deletePurchasesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/purchases/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postPurchasesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/purchases/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get purchase's basic data
 */
export function getPurchasesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "purchase";
                attributes?: {
                    date?: string;
                    title?: string;
                    reference?: string;
                    typeOf?: number;
                    startDate?: string;
                    endDate?: string;
                    subscription?: number;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
                included?: ({
                    id: string;
                    "type": "company";
                    attributes?: {
                        name?: string;
                    };
                })[];
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/purchases/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the purchase
 */
export function deletePurchasesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/purchases/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function putPurchasesById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "purchase";
                attributes?: {
                    date?: string;
                    title?: string;
                    reference?: string;
                    typeOf?: number;
                    startDate?: string;
                    endDate?: string;
                    subscription?: number;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
                included?: ({
                    id: string;
                    "type": "company";
                    attributes?: {
                        name?: string;
                    };
                })[];
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/purchases/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postPurchasesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/purchases/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search production plans reporting
 */
export function getReportingProductionPlans(startDate: string, endDate: string, body?: string, { keywords, resourceTypes, resourceStates, positioningStates, positioningPeriod, showContracts, projects, contacts, companies, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    resourceTypes?: number[];
    resourceStates?: number[];
    positioningStates?: number[];
    positioningPeriod?: string;
    showContracts?: boolean;
    projects?: number[];
    contacts?: number[];
    companies?: number[];
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    candidate?: {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    };
                    contracts?: {
                        data: {
                            id: string;
                            "type": "contract";
                        }[];
                    };
                    deliveries?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        }[];
                    };
                    inactivities?: {
                        data: {
                            id: string;
                            "type": "inactivity";
                        }[];
                    };
                    positionings?: {
                        data: {
                            id: string;
                            "type": "positioning";
                        }[];
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "contract";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    positionings?: {
                        data: {
                            id: string;
                            "type": "positioning";
                        }[];
                    };
                };
            } | {
                id: string;
                "type": "delivery";
                attributes: {
                    startDate?: string;
                    endDate?: string;
                    occupationRate?: number;
                    state?: number;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "inactivity";
                attributes: {
                    startDate?: string;
                    endDate?: string;
                    occupationRate?: number;
                    inactivityType?: "internal" | "absence";
                };
            } | {
                id: string;
                "type": "positioning";
                attributes?: {
                    creationDate?: string;
                    state?: number;
                    startDate?: string;
                    endDate?: string;
                    occupationRate?: number;
                };
                relationships?: {
                    opportunity?: {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes: {
                    title?: string;
                    duration?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/reporting-production-plans${QS.query(QS.explode({
        keywords,
        resourceTypes,
        resourceStates,
        positioningStates,
        positioningPeriod,
        startDate,
        endDate,
        showContracts,
        projects,
        contacts,
        companies,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
export function postReportingProductionPlans(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/reporting-production-plans", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteReportingProductionPlans(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/reporting-production-plans", {
        ...opts,
        method: "DELETE"
    });
}
export function putReportingProductionPlans(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/reporting-production-plans", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Search synthesis reporting
 */
export function getReportingSynthesis(startDate: string, body?: string, { reportingType, reportingCategory, period, endDate, resources, projects, contacts, companies, scorecards, useCache, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter }: {
    reportingType?: string;
    reportingCategory?: string;
    period?: string;
    endDate?: string;
    resources?: number[];
    projects?: number[];
    contacts?: number[];
    companies?: number[];
    scorecards?: string[];
    useCache?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                cache?: {
                    state?: boolean;
                    dateUpdate?: string;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "indicator";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    value?: string;
                    target?: {
                        operator: "<" | "<=" | "=" | ">" | ">=";
                        value: number;
                    };
                    scorecard?: {
                        reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                        typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        activityType?: "day" | "workUnit";
                        dictionaryId?: number;
                        project?: {
                            id: string;
                            reference: string;
                            activityType: "day" | "workUnit";
                        };
                        opportunity?: {
                            id: string;
                            reference: string;
                        };
                        resource?: {
                            id: string;
                            firstName: string;
                            lastName: string;
                        };
                        candidate?: {
                            id: string;
                            firstName: string;
                            lastName: string;
                        };
                    };
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/reporting-synthesis${QS.query(QS.explode({
        reportingType,
        reportingCategory,
        period,
        startDate,
        endDate,
        resources,
        projects,
        contacts,
        companies,
        scorecards,
        useCache,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter
    }))}`, {
        ...opts,
        body
    });
}
export function postReportingSynthesis(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/reporting-synthesis", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteReportingSynthesis(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/reporting-synthesis", {
        ...opts,
        method: "DELETE"
    });
}
export function putReportingSynthesis(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/reporting-synthesis", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Search companies reporting
 */
export function getReportingCompanies(startDate: string, endDate: string, body?: string, { companiesStates, maxCompanies, showPercentage, companies, scorecards, useCache, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    companiesStates?: number[];
    maxCompanies?: number;
    showPercentage?: boolean;
    companies?: number[];
    scorecards?: string[];
    useCache?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                    dependsOn?: number;
                };
                cache?: {
                    state?: boolean;
                    dateUpdate?: string;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "indicator";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    value?: string;
                    scorecard?: {
                        reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                        typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        activityType?: "day" | "workUnit";
                        dictionaryId?: number;
                        project?: {
                            id: string;
                            reference: string;
                            activityType: "day" | "workUnit";
                        };
                        opportunity?: {
                            id: string;
                            reference: string;
                        };
                        resource?: {
                            id: string;
                            firstName: string;
                            lastName: string;
                        };
                        candidate?: {
                            id: string;
                            firstName: string;
                            lastName: string;
                        };
                    };
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            }[];
            included?: ({
                id: "others" | string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/reporting-companies${QS.query(QS.explode({
        companiesStates,
        maxCompanies,
        showPercentage,
        startDate,
        endDate,
        companies,
        scorecards,
        useCache,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
export function postReportingCompanies(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/reporting-companies", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteReportingCompanies(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/reporting-companies", {
        ...opts,
        method: "DELETE"
    });
}
export function putReportingCompanies(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/reporting-companies", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Search projects reporting
 */
export function getReportingProjects(body?: string, { projectTypes, projectStates, maxProjects, startDate, endDate, resources, projects, contacts, companies, scorecards, useCache, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    projectTypes?: number[];
    projectStates?: number[];
    maxProjects?: number;
    startDate?: string;
    endDate?: string;
    resources?: number[];
    projects?: number[];
    contacts?: number[];
    companies?: number[];
    scorecards?: string[];
    useCache?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                    dependsOn?: number;
                };
                cache?: {
                    state?: boolean;
                    dateUpdate?: string;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "indicator";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    value?: string;
                    scorecard?: {
                        reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                        typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        activityType?: "day" | "workUnit";
                        dictionaryId?: number;
                        project?: {
                            id: string;
                            reference: string;
                            activityType: "day" | "workUnit";
                        };
                        opportunity?: {
                            id: string;
                            reference: string;
                        };
                        resource?: {
                            id: string;
                            firstName: string;
                            lastName: string;
                        };
                        candidate?: {
                            id: string;
                            firstName: string;
                            lastName: string;
                        };
                    };
                    target?: {
                        operator: "<" | "<=" | "=" | ">" | ">=";
                        value: number;
                    };
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    [key: string]: any;
                };
            }[];
            included?: ({
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    typeOf?: number;
                    mode?: number;
                    state?: number;
                    startDate?: string;
                    endDate?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    contact?: {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/reporting-projects${QS.query(QS.explode({
        projectTypes,
        projectStates,
        maxProjects,
        startDate,
        endDate,
        resources,
        projects,
        contacts,
        companies,
        scorecards,
        useCache,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
export function postReportingProjects(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/reporting-projects", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteReportingProjects(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/reporting-projects", {
        ...opts,
        method: "DELETE"
    });
}
export function putReportingProjects(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/reporting-projects", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Search resources reporting
 */
export function getReportingResources(body?: string, { reportingCategory, maxResources, resourceTypes, resourceStates, period, startDate, endDate, resources, projects, contacts, companies, scorecards, useCache, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    reportingCategory?: string;
    maxResources?: number;
    resourceTypes?: number[];
    resourceStates?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    resources?: number[];
    projects?: number[];
    contacts?: number[];
    companies?: number[];
    scorecards?: number[];
    useCache?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                    dependsOn?: number;
                };
                cache?: {
                    state?: boolean;
                    dateUpdate?: string;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "indicator";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    value?: string;
                    scorecard?: {
                        reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                        typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        activityType?: "day" | "workUnit";
                        dictionaryId?: number;
                        project?: {
                            id: string;
                            reference: string;
                            activityType: "day" | "workUnit";
                        };
                        opportunity?: {
                            id: string;
                            reference: string;
                        };
                        resource?: {
                            id: string;
                            firstName: string;
                            lastName: string;
                        };
                        candidate?: {
                            id: string;
                            firstName: string;
                            lastName: string;
                        };
                    };
                    target?: {
                        operator: "<" | "<=" | "=" | ">" | ">=";
                        value: number;
                    };
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    [key: string]: any;
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/reporting-resources${QS.query(QS.explode({
        reportingCategory,
        maxResources,
        resourceTypes,
        resourceStates,
        period,
        startDate,
        endDate,
        resources,
        projects,
        contacts,
        companies,
        scorecards,
        useCache,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
export function postReportingResources(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/reporting-resources", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteReportingResources(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/reporting-resources", {
        ...opts,
        method: "DELETE"
    });
}
export function putReportingResources(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/reporting-resources", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Search resources
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/resources.csv?keywords=COMP100*
 *
 */
export function getResources(body?: string, { keywords, keywordsType, returnMoreData, excludeResourceTypes, resourceTypes, activityAreas, expertiseAreas, tools, mobilityAreas, experiences, trainings, period, startDate, endDate, flags, resourceStates, excludeManager, languages, onlyVisible, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    keywordsType?: string;
    returnMoreData?: string[];
    excludeResourceTypes?: number[];
    resourceTypes?: number[];
    activityAreas?: string[];
    expertiseAreas?: string[];
    tools?: string[];
    mobilityAreas?: string;
    experiences?: number[];
    trainings?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    resourceStates?: number[];
    excludeManager?: boolean;
    languages?: string[];
    onlyVisible?: boolean;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                solr?: boolean;
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "resource";
                attributes: {
                    creationDate?: string;
                    civility?: number;
                    thumbnail?: string;
                    firstName?: string;
                    lastName?: string;
                    reference?: string;
                    typeOf?: number;
                    state?: number;
                    isVisible?: boolean;
                    skills?: string;
                    mobilityAreas?: string[];
                    title?: string;
                    availability?: string;
                    averageDailyPriceExcludingTax?: number;
                    email1?: string;
                    email2?: string;
                    email3?: string;
                    phone1?: string;
                    phone2?: string;
                    currency?: number;
                    exchangeRate?: number;
                    currencyAgency?: number;
                    exchangeRateAgency?: number;
                    numberOfResumes?: number;
                    numberOfActivePositionings?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    resume?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "document";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    previousAction?: {
                        data: {
                            id: string;
                            "type": "action";
                            text?: string;
                        };
                    };
                    nextAction?: {
                        data: {
                            id: string;
                            "type": "action";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    startDate?: string;
                    typeOf?: number;
                    text?: string;
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    startDate?: string;
                    typeOf?: number;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/resources${QS.query(QS.explode({
        keywords,
        keywordsType,
        returnMoreData,
        excludeResourceTypes,
        resourceTypes,
        activityAreas,
        expertiseAreas,
        tools,
        mobilityAreas,
        experiences,
        trainings,
        period,
        startDate,
        endDate,
        flags,
        resourceStates,
        excludeManager,
        languages,
        onlyVisible,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a resource
 */
export function postResources(body?: {
    data: {
        "type": "resource";
        attributes: {
            creationDate?: string;
            civility?: number;
            firstName: string;
            lastName: string;
            typeOf?: number;
            state?: number;
            email1: string;
            email2?: string;
            email3?: string;
            phone1?: string;
            phone2?: string;
            phone3?: string;
            fax?: string;
            address?: string;
            postcode?: string;
            town?: string;
            country?: string;
            "function"?: string;
            dateOfBirth?: string;
            mobilityAreas?: string[];
            averageDailyPriceExcludingTax?: number;
            currency?: number;
            currencyAgency?: number;
            exchangeRate?: number;
            exchangeRateAgency?: number;
            availability?: string;
            forceAvailability?: boolean;
            isVisible?: boolean;
            informationComments?: string;
        };
        relationships: {
            mainManager: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            hrManager?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "noContract" | "overlappingContractDates";
                    detail: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "resource";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    civility?: number;
                    thumbnail?: string;
                    firstName?: string;
                    lastName?: string;
                    title?: string;
                    typeOf?: number;
                    subscription?: "active" | "inactive";
                    state?: number;
                    email1?: string;
                    email2?: string;
                    email3?: string;
                    phone1?: string;
                    phone2?: string;
                    phone3?: string;
                    fax?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    "function"?: string;
                    dateOfBirth?: string;
                    mobilityAreas?: string[];
                    averageDailyPriceExcludingTax?: number;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                    forceAvailability?: boolean;
                    availability?: string;
                    realAvailability?: string;
                    isVisible?: boolean;
                    informationComments?: string;
                    socialNetworks?: {
                        network: "facebook" | "viadeo" | "linkedin" | "twitter";
                        url: string;
                    }[];
                    seniorityDate?: string;
                    forceSeniorityDate?: boolean;
                    validitySeniorityDate?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                    resumes?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/resources", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteResources(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/resources", {
        ...opts,
        method: "DELETE"
    });
}
export function putResources(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/resources", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty resource's default information data
 */
export function getResourcesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "resource";
                attributes?: {
                    civility?: number;
                    typeOf?: number;
                    state?: number;
                    availability?: string;
                    realAvailability?: string;
                    forceAvailability?: boolean;
                    country?: string;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                    seniorityDate?: string;
                    validitySeniorityDate?: string;
                    forceSeniorityDate?: boolean;
                    originalSeniorityDate?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/resources/default", {
        ...opts
    });
}
export function putResourcesDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "resource";
                attributes?: {
                    civility?: number;
                    typeOf?: number;
                    state?: number;
                    availability?: string;
                    realAvailability?: string;
                    forceAvailability?: boolean;
                    country?: string;
                    currency?: number;
                    currencyAgency?: number;
                    exchangeRate?: number;
                    exchangeRateAgency?: number;
                    seniorityDate?: string;
                    validitySeniorityDate?: string;
                    forceSeniorityDate?: boolean;
                    originalSeniorityDate?: string;
                };
                relationships?: {
                    mainManager?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    lastName?: string;
                    firstName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/resources/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteResourcesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/resources/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postResourcesDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/resources/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get resource's basic data
 */
export function getResourcesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "noContract" | "overlappingContractDates";
                    detail: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "resource";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    civility?: number;
                    thumbnail?: string;
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                    level?: "manager" | "resource" | "administrator";
                    title?: string;
                    dateOfBirth?: string;
                    numberOfResumes?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/resources/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the resource
 */
export function deleteResourcesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/resources/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function putResourcesById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "noContract" | "overlappingContractDates";
                    detail: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "resource";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    civility?: number;
                    thumbnail?: string;
                    firstName?: string;
                    lastName?: string;
                    typeOf?: number;
                    level?: "manager" | "resource" | "administrator";
                    title?: string;
                    dateOfBirth?: string;
                    numberOfResumes?: number;
                };
                relationships?: {
                    mainManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    hrManager?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    pole?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "pole";
                        };
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/resources/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postResourcesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/resources/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search roles
 */
export function getRoles(body?: string, { keywords, page, maxResults, sort, order }: {
    keywords?: string;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "role";
                attributes?: {
                    name?: string;
                    numberOfManagers?: number;
                    numberOfActiveManagers?: number;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/roles${QS.query(QS.explode({
        keywords,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a role
 */
export function postRoles(body?: {
    data: {
        "type": "role";
        attributes: {
            name: string;
            logInOnlyFromThirdParty?: boolean;
            warningForNewDevice?: boolean;
            manageAllowedDevices?: boolean;
            dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
            modules?: {
                resources?: boolean;
                subscription?: boolean;
                projects?: boolean;
                opportunities?: boolean;
                candidates?: boolean;
                crm?: boolean;
                activityExpenses?: boolean;
                billing?: boolean;
                products?: boolean;
                purchases?: boolean;
                reporting?: boolean;
                customers?: boolean;
            };
            rights?: {
                main: {
                    shareSavedSearches?: "disabled" | "share" | "edit";
                    showGroupe: boolean;
                    showBuPoles: boolean;
                    showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                    showAllAgencies: "none" | "assignment";
                    showAllPoles: "none" | "assignment";
                    administrator: boolean;
                };
                resources?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                    administrative: "none" | "read" | "readAndWrite";
                };
                opportunities?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    maskData: boolean;
                    maskOnlyContacts: boolean;
                };
                projects?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: any;
                    administrative: any;
                };
                candidates?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                };
                crm?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    editCreationDate: boolean;
                    showAllCompanies: boolean;
                    createCompanies: boolean;
                    createContacts: boolean;
                };
                activityExpenses?: {
                    writeAll: "extended" | "absolute";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                billing?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    editReference?: boolean;
                    editDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    readDocuments: boolean;
                    unlockInvoices: boolean;
                };
                products?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                purchases?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                reporting?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    extraction: boolean;
                    reporting: boolean;
                    distributionCustomers: boolean;
                    projects: boolean;
                    resources: boolean;
                    productionPlans: boolean;
                };
                flags?: {
                    showAll: "personal" | "all";
                };
                actions?: {
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                customers?: {
                    creation: boolean;
                    extraction: boolean;
                    edition: boolean;
                    deletion: boolean;
                    connection: boolean;
                };
            };
            isSecondaryAgenciesAllowed?: boolean;
            isSecondaryPolesAllowed?: boolean;
            shareSavedSearches?: "disabled" | "share" | "edit";
        };
        relationships?: {
            apps?: {
                data: {
                    id: string;
                    "type": "app";
                }[];
            };
            otherAgencies?: {
                data: {
                    id: string;
                    "type": "agency";
                }[];
            };
            otherPoles?: {
                data: {
                    id: string;
                    "type": "pole";
                }[];
            };
            advancedAppCalendar?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppMail?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppViewer?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppEmailing?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "role";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    logInOnlyFromThirdParty?: boolean;
                    warningForNewDevice?: boolean;
                    manageAllowedDevices?: boolean;
                    dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
                    modules?: {
                        resources?: boolean;
                        subscription?: boolean;
                        projects?: boolean;
                        opportunities?: boolean;
                        candidates?: boolean;
                        crm?: boolean;
                        activityExpenses?: boolean;
                        billing?: boolean;
                        products?: boolean;
                        purchases?: boolean;
                        reporting?: boolean;
                        customers?: boolean;
                    };
                    rights?: {
                        main: {
                            shareSavedSearches?: "disabled" | "share" | "edit";
                            showGroupe: boolean;
                            showBuPoles: boolean;
                            showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                            showAllAgencies: "none" | "assignment";
                            showAllPoles: "none" | "assignment";
                            administrator: boolean;
                        };
                        resources?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                            administrative: "none" | "read" | "readAndWrite";
                        };
                        opportunities?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            maskData: boolean;
                            maskOnlyContacts: boolean;
                        };
                        projects?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: any;
                            administrative: any;
                        };
                        candidates?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                        };
                        crm?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            editCreationDate: boolean;
                            showAllCompanies: boolean;
                            createCompanies: boolean;
                            createContacts: boolean;
                        };
                        activityExpenses?: {
                            writeAll: "extended" | "absolute";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        billing?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            editReference?: boolean;
                            editDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            readDocuments: boolean;
                            unlockInvoices: boolean;
                        };
                        products?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        purchases?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        reporting?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            extraction: boolean;
                            reporting: boolean;
                            distributionCustomers: boolean;
                            projects: boolean;
                            resources: boolean;
                            productionPlans: boolean;
                        };
                        flags?: {
                            showAll: "personal" | "all";
                        };
                        actions?: {
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        customers?: {
                            creation: boolean;
                            extraction: boolean;
                            edition: boolean;
                            deletion: boolean;
                            connection: boolean;
                        };
                    };
                    isSecondaryAgenciesAllowed?: boolean;
                    isSecondaryPolesAllowed?: boolean;
                    shareSavedSearches?: "disabled" | "share" | "edit";
                };
                relationships?: {
                    apps?: {
                        data: {
                            id: string;
                            "type": "app";
                        }[];
                    };
                    otherAgencies?: {
                        data: {
                            id: string;
                            "type": "agency";
                        }[];
                    };
                    otherPoles?: {
                        data: {
                            id: string;
                            "type": "pole";
                        }[];
                    };
                    advancedAppCalendar?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppMail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppViewer?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppEmailing?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    description?: string;
                    category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                    code?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/roles", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteRoles(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/roles", {
        ...opts,
        method: "DELETE"
    });
}
export function putRoles(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/roles", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get role's basic data
 */
export function getRolesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "role";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    logInOnlyFromThirdParty?: boolean;
                    warningForNewDevice?: boolean;
                    manageAllowedDevices?: boolean;
                    dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
                    modules?: {
                        resources?: boolean;
                        subscription?: boolean;
                        projects?: boolean;
                        opportunities?: boolean;
                        candidates?: boolean;
                        crm?: boolean;
                        activityExpenses?: boolean;
                        billing?: boolean;
                        products?: boolean;
                        purchases?: boolean;
                        reporting?: boolean;
                        customers?: boolean;
                    };
                    rights?: {
                        main: {
                            shareSavedSearches?: "disabled" | "share" | "edit";
                            showGroupe: boolean;
                            showBuPoles: boolean;
                            showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                            showAllAgencies: "none" | "assignment";
                            showAllPoles: "none" | "assignment";
                            administrator: boolean;
                        };
                        resources?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                            administrative: "none" | "read" | "readAndWrite";
                        };
                        opportunities?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            maskData: boolean;
                            maskOnlyContacts: boolean;
                        };
                        projects?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: any;
                            administrative: any;
                        };
                        candidates?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                        };
                        crm?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            editCreationDate: boolean;
                            showAllCompanies: boolean;
                            createCompanies: boolean;
                            createContacts: boolean;
                        };
                        activityExpenses?: {
                            writeAll: "extended" | "absolute";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        billing?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            editReference?: boolean;
                            editDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            readDocuments: boolean;
                            unlockInvoices: boolean;
                        };
                        products?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        purchases?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        reporting?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            extraction: boolean;
                            reporting: boolean;
                            distributionCustomers: boolean;
                            projects: boolean;
                            resources: boolean;
                            productionPlans: boolean;
                        };
                        flags?: {
                            showAll: "personal" | "all";
                        };
                        actions?: {
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        customers?: {
                            creation: boolean;
                            extraction: boolean;
                            edition: boolean;
                            deletion: boolean;
                            connection: boolean;
                        };
                    };
                    isSecondaryAgenciesAllowed?: boolean;
                    isSecondaryPolesAllowed?: boolean;
                    shareSavedSearches?: "disabled" | "share" | "edit";
                };
                relationships?: {
                    apps?: {
                        data: {
                            id: string;
                            "type": "app";
                        }[];
                    };
                    otherAgencies?: {
                        data: {
                            id: string;
                            "type": "agency";
                        }[];
                    };
                    otherPoles?: {
                        data: {
                            id: string;
                            "type": "pole";
                        }[];
                    };
                    advancedAppCalendar?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppMail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppViewer?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppEmailing?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    description?: string;
                    category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                    code?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/roles/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the role
 */
export function deleteRolesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/roles/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to a role
 */
export function putRolesById(body?: {
    data: {
        id: string;
        "type": "role";
        attributes?: {
            name?: string;
            logInOnlyFromThirdParty?: boolean;
            warningForNewDevice?: boolean;
            manageAllowedDevices?: boolean;
            dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
            modules?: {
                resources?: boolean;
                subscription?: boolean;
                projects?: boolean;
                opportunities?: boolean;
                candidates?: boolean;
                crm?: boolean;
                activityExpenses?: boolean;
                billing?: boolean;
                products?: boolean;
                purchases?: boolean;
                reporting?: boolean;
                customers?: boolean;
            };
            rights?: {
                main: {
                    shareSavedSearches?: "disabled" | "share" | "edit";
                    showGroupe: boolean;
                    showBuPoles: boolean;
                    showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                    showAllAgencies: "none" | "assignment";
                    showAllPoles: "none" | "assignment";
                    administrator: boolean;
                };
                resources?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                    administrative: "none" | "read" | "readAndWrite";
                };
                opportunities?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    maskData: boolean;
                    maskOnlyContacts: boolean;
                };
                projects?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: any;
                    administrative: any;
                };
                candidates?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                };
                crm?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    editCreationDate: boolean;
                    showAllCompanies: boolean;
                    createCompanies: boolean;
                    createContacts: boolean;
                };
                activityExpenses?: {
                    writeAll: "extended" | "absolute";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                billing?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    editReference?: boolean;
                    editDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    readDocuments: boolean;
                    unlockInvoices: boolean;
                };
                products?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                purchases?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                reporting?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    extraction: boolean;
                    reporting: boolean;
                    distributionCustomers: boolean;
                    projects: boolean;
                    resources: boolean;
                    productionPlans: boolean;
                };
                flags?: {
                    showAll: "personal" | "all";
                };
                actions?: {
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                customers?: {
                    creation: boolean;
                    extraction: boolean;
                    edition: boolean;
                    deletion: boolean;
                    connection: boolean;
                };
            };
            isSecondaryAgenciesAllowed?: boolean;
            isSecondaryPolesAllowed?: boolean;
            shareSavedSearches?: "disabled" | "share" | "edit";
        };
        relationships?: {
            apps?: {
                data: {
                    id: string;
                    "type": "app";
                }[];
            };
            otherAgencies?: {
                data: {
                    id: string;
                    "type": "agency";
                }[];
            };
            otherPoles?: {
                data: {
                    id: string;
                    "type": "pole";
                }[];
            };
            advancedAppCalendar?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppMail?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppViewer?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppEmailing?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "role";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    logInOnlyFromThirdParty?: boolean;
                    warningForNewDevice?: boolean;
                    manageAllowedDevices?: boolean;
                    dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
                    modules?: {
                        resources?: boolean;
                        subscription?: boolean;
                        projects?: boolean;
                        opportunities?: boolean;
                        candidates?: boolean;
                        crm?: boolean;
                        activityExpenses?: boolean;
                        billing?: boolean;
                        products?: boolean;
                        purchases?: boolean;
                        reporting?: boolean;
                        customers?: boolean;
                    };
                    rights?: {
                        main: {
                            shareSavedSearches?: "disabled" | "share" | "edit";
                            showGroupe: boolean;
                            showBuPoles: boolean;
                            showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                            showAllAgencies: "none" | "assignment";
                            showAllPoles: "none" | "assignment";
                            administrator: boolean;
                        };
                        resources?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                            administrative: "none" | "read" | "readAndWrite";
                        };
                        opportunities?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            maskData: boolean;
                            maskOnlyContacts: boolean;
                        };
                        projects?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: any;
                            administrative: any;
                        };
                        candidates?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            editCreationDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            actions: boolean;
                        };
                        crm?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            editCreationDate: boolean;
                            showAllCompanies: boolean;
                            createCompanies: boolean;
                            createContacts: boolean;
                        };
                        activityExpenses?: {
                            writeAll: "extended" | "absolute";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        billing?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            editReference?: boolean;
                            editDate: boolean;
                            assignment: boolean;
                            deletion: boolean;
                            readDocuments: boolean;
                            unlockInvoices: boolean;
                        };
                        products?: {
                            creation: boolean;
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        purchases?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            exportation: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        reporting?: {
                            showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                            extraction: boolean;
                            reporting: boolean;
                            distributionCustomers: boolean;
                            projects: boolean;
                            resources: boolean;
                            productionPlans: boolean;
                        };
                        flags?: {
                            showAll: "personal" | "all";
                        };
                        actions?: {
                            writeAll: "simple" | "extended";
                            extraction: boolean;
                            assignment: boolean;
                            deletion: boolean;
                        };
                        customers?: {
                            creation: boolean;
                            extraction: boolean;
                            edition: boolean;
                            deletion: boolean;
                            connection: boolean;
                        };
                    };
                    isSecondaryAgenciesAllowed?: boolean;
                    isSecondaryPolesAllowed?: boolean;
                    shareSavedSearches?: "disabled" | "share" | "edit";
                };
                relationships?: {
                    apps?: {
                        data: {
                            id: string;
                            "type": "app";
                        }[];
                    };
                    otherAgencies?: {
                        data: {
                            id: string;
                            "type": "agency";
                        }[];
                    };
                    otherPoles?: {
                        data: {
                            id: string;
                            "type": "pole";
                        }[];
                    };
                    advancedAppCalendar?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppMail?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppViewer?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    advancedAppEmailing?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "app";
                attributes?: {
                    name?: string;
                    description?: string;
                    category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                    code?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "pole";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/roles/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postRolesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/roles/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search user's saved search
 */
export function getSavedsearches(body?: string, { keywords, owner, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    owner?: number[];
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "savedsearch";
                attributes?: {
                    "module"?: "resources" | "candidates" | "crm" | "opportunities" | "products" | "projects" | "purchases" | "positionings" | "activityExpenses" | "billing" | "reporting" | "actions" | "dashboard" | "resourceTimesReports" | "resourceAbsencesReports" | "resourceExpensesReports" | "resourceProjects" | "customers";
                    name?: string;
                    params?: {
                        [key: string]: any;
                    };
                    sharedWith?: {
                        [key: string]: any;
                    };
                    nbShares?: number;
                    date?: string;
                    dateUpdate?: string;
                };
                relationships?: {
                    owner: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/savedsearches${QS.query(QS.explode({
        keywords,
        owner,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a saved search
 */
export function postSavedsearches(body?: {
    data: {
        "type": "savedsearch";
        attributes?: {
            "module": "resources" | "candidates" | "crm" | "opportunities" | "products" | "projects" | "purchases" | "positionings" | "activityExpenses" | "billing" | "reporting" | "actions" | "dashboard" | "resourceTimesReports" | "resourceAbsencesReports" | "resourceExpensesReports" | "resourceProjects" | "customers";
            name: string;
            params?: {
                [key: string]: any;
            };
            sharedWith?: {
                [key: string]: any;
            };
        };
        relationships?: {
            owner: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "savedsearch";
                attributes?: {
                    "module"?: "resources" | "candidates" | "crm" | "opportunities" | "products" | "projects" | "purchases" | "positionings" | "activityExpenses" | "billing" | "reporting" | "actions" | "dashboard" | "resourceTimesReports" | "resourceAbsencesReports" | "resourceExpensesReports" | "resourceProjects" | "customers";
                    name?: string;
                    params?: {
                        [key: string]: any;
                    };
                    sharedWith?: {
                        [key: string]: any;
                    };
                    nbShares?: number;
                };
                relationships?: {
                    owner?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/savedsearches", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteSavedsearches(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/savedsearches", {
        ...opts,
        method: "DELETE"
    });
}
export function putSavedsearches(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/savedsearches", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get saved search's basic data
 */
export function getSavedsearchesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "savedsearch";
                attributes?: {
                    "module"?: "resources" | "candidates" | "crm" | "opportunities" | "products" | "projects" | "purchases" | "positionings" | "activityExpenses" | "billing" | "reporting" | "actions" | "dashboard" | "resourceTimesReports" | "resourceAbsencesReports" | "resourceExpensesReports" | "resourceProjects" | "customers";
                    name?: string;
                    params?: {
                        [key: string]: any;
                    };
                    sharedWith?: {
                        [key: string]: any;
                    };
                    nbShares?: number;
                };
                relationships?: {
                    owner?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/savedsearches/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the saved search
 */
export function deleteSavedsearchesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/savedsearches/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to a saved search
 */
export function putSavedsearchesById(body?: {
    data: {
        id: string;
        "type": "savedsearch";
        attributes?: {
            name?: string;
            params?: {
                [key: string]: any;
            };
            sharedWith?: {
                [key: string]: any;
            };
        };
        relationships?: {
            owner: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "savedsearch";
                attributes?: {
                    "module"?: "resources" | "candidates" | "crm" | "opportunities" | "products" | "projects" | "purchases" | "positionings" | "activityExpenses" | "billing" | "reporting" | "actions" | "dashboard" | "resourceTimesReports" | "resourceAbsencesReports" | "resourceExpensesReports" | "resourceProjects" | "customers";
                    name?: string;
                    params?: {
                        [key: string]: any;
                    };
                    sharedWith?: {
                        [key: string]: any;
                    };
                    nbShares?: number;
                };
                relationships?: {
                    owner?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/savedsearches/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postSavedsearchesById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/savedsearches/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Create a sandbox
 */
export function postSandbox(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/sandbox", {
        ...opts,
        method: "POST"
    });
}
export function deleteSandbox(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/sandbox", {
        ...opts,
        method: "DELETE"
    });
}
export function putSandbox(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/sandbox", {
        ...opts,
        method: "PUT"
    });
}
export function getSandbox(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/sandbox", {
        ...opts
    });
}
/**
 * Share a profile
 */
export function postShare(body?: {
    data: {
        "type": "share";
        attributes: {
            "object": string;
            body: string;
            recipients: ({
                group: {
                    id: string;
                };
            } | {
                resource: {
                    id: string;
                };
            } | {
                typeOf: number;
            })[];
            settings?: "resource" | "account" | "notUsed";
        };
        relationships: {
            dependsOn: {
                data: {
                    id: string;
                    "type": "resource";
                };
            } | {
                data: {
                    id: string;
                    "type": "candidate";
                };
            } | {
                data: {
                    id: string;
                    "type": "product";
                };
            } | {
                data: {
                    id: string;
                    "type": "opportunity";
                };
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            } | {
                data: {
                    id: string;
                    "type": "purchase";
                };
            } | {
                data: {
                    id: string;
                    "type": "order";
                };
            } | {
                data: {
                    id: string;
                    "type": "invoice";
                };
            } | {
                data: {
                    id: string;
                    "type": "contact";
                };
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            } | {
                data: {
                    id: string;
                    "type": "timesreport";
                };
            } | {
                data: {
                    id: string;
                    "type": "expensesreport";
                };
            } | {
                data: {
                    id: string;
                    "type": "absencesreport";
                };
            } | {
                data: {
                    id: string;
                    "type": "payment";
                };
            } | {
                data: {
                    id: string;
                    "type": "action";
                };
            } | {
                data: {
                    id: string;
                    "type": "delivery";
                };
            } | {
                data: {
                    id: string;
                    "type": "inactivity";
                };
            } | {
                data: {
                    id: string;
                    "type": "groupment";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id?: string;
                "type"?: "share";
                attributes?: {
                    emails: string[];
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/share", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function getShare(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/share", {
        ...opts
    });
}
export function deleteShare(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/share", {
        ...opts,
        method: "DELETE"
    });
}
export function putShare(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/share", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty share's profile default basic data
 */
export function getShareDefault(body?: string, { resource, candidate, opportunity, project, product, purchase, order, invoice, contact, company, timesReport, expensesReport, absencesReport, payment, action, delivery, inactivity, groupment, positioning, contract, advantage, settings }: {
    resource?: number;
    candidate?: number;
    opportunity?: number;
    project?: number;
    product?: number;
    purchase?: number;
    order?: number;
    invoice?: number;
    contact?: number;
    company?: number;
    timesReport?: number;
    expensesReport?: number;
    absencesReport?: number;
    payment?: number;
    action?: number;
    delivery?: number;
    inactivity?: number;
    groupment?: number;
    positioning?: number;
    contract?: number;
    advantage?: number;
    settings?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "share";
                attributes?: {
                    "object"?: string;
                    body?: string;
                    settings?: "resource" | "account" | "notUsed";
                };
                relationships?: {
                    managers?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    resources?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "timesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "expensesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "absencesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "payment";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "action";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "inactivity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "groupment";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "advantage";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "positioning";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "quotation";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    name?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "purchase";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    "number"?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "invoice";
                attributes?: {
                    reference?: string;
                    isCreditNote?: boolean;
                };
                relationships?: {
                    order?: {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "timesreport";
                attributes?: {
                    term?: string;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "expensesreport";
                attributes?: {
                    term?: string;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "absencesreport";
                attributes?: {
                    creationDate?: string;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "payment";
                attributes?: {
                    "number"?: string;
                };
                relationships?: {
                    purchase?: {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    };
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                };
            } | {
                id: string;
                "type": "inactivity";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "groupment";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "contract";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    };
                };
            } | {
                id: string;
                "type": "advantage";
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "positioning";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                    opportunity?: {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    creationDate?: string;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "quotation";
                attributes?: {
                    reference?: string;
                };
                relationships?: {
                    opportunity?: {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/share/default${QS.query(QS.explode({
        resource,
        candidate,
        opportunity,
        project,
        product,
        purchase,
        order,
        invoice,
        contact,
        company,
        timesReport,
        expensesReport,
        absencesReport,
        payment,
        action,
        delivery,
        inactivity,
        groupment,
        positioning,
        contract,
        advantage,
        settings
    }))}`, {
        ...opts,
        body
    });
}
export function putShareDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "share";
                attributes?: {
                    "object"?: string;
                    body?: string;
                    settings?: "resource" | "account" | "notUsed";
                };
                relationships?: {
                    managers?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    resources?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "timesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "expensesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "absencesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "payment";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "action";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "inactivity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "groupment";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contract";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "advantage";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "positioning";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "quotation";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "candidate";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "contact";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
                relationships?: {
                    company?: {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "product";
                attributes?: {
                    name?: string;
                    reference?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "opportunity";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "purchase";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    "number"?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "invoice";
                attributes?: {
                    reference?: string;
                    isCreditNote?: boolean;
                };
                relationships?: {
                    order?: {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                };
            } | {
                id: string;
                "type": "timesreport";
                attributes?: {
                    term?: string;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "expensesreport";
                attributes?: {
                    term?: string;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "absencesreport";
                attributes?: {
                    creationDate?: string;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "payment";
                attributes?: {
                    "number"?: string;
                };
                relationships?: {
                    purchase?: {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    };
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                };
            } | {
                id: string;
                "type": "inactivity";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "groupment";
                attributes?: {
                    title?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            } | {
                id: string;
                "type": "contract";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    };
                };
            } | {
                id: string;
                "type": "advantage";
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "positioning";
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    };
                    opportunity?: {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                };
            } | {
                id: string;
                "type": "action";
                attributes?: {
                    creationDate?: string;
                };
                relationships?: {
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "candidate";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "product";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "purchase";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "order";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "invoice";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "app";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "quotation";
                attributes?: {
                    reference?: string;
                };
                relationships?: {
                    opportunity?: {
                        data: {
                            id: string;
                            "type": "opportunity";
                        };
                    };
                    contact?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "contact";
                        };
                    };
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/share/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteShareDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/share/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postShareDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/share/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get subscription's basic data
 */
export function getSubscription(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "subscription";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    numberOfAllowedManagers?: number;
                    numberOfAllowedResources?: number;
                    numberOfAllowedAccounts?: number;
                    numberOfActivatedManagers?: number;
                    numberOfActivatedResources?: number;
                    numberOfActivatedAccounts?: number;
                    priceExcludingTaxPerAllowedManager?: number;
                    priceExcludingTaxPerAllowedResource?: number;
                    priceExcludingTaxPerAllowedAccount?: number;
                    schedulesAllowedAccounts?: {
                        level: number;
                        amountExcludingTax: number;
                    }[];
                    automaticSubscription?: boolean;
                    pricingType?: "custom" | "manager" | "account" | "scheduleAccount";
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/subscription", {
        ...opts
    });
}
/**
 * Update basic data related to a subscription
 */
export function putSubscription(body?: {
    data: {
        id?: string;
        "type": "customer";
        attributes: {
            numberOfAllowedManagers?: number;
            numberOfAllowedResources?: number;
            numberOfAllowedAccounts?: number;
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "subscription";
                attributes?: {
                    startDate?: string;
                    endDate?: string;
                    numberOfAllowedManagers?: number;
                    numberOfAllowedResources?: number;
                    numberOfAllowedAccounts?: number;
                    numberOfActivatedManagers?: number;
                    numberOfActivatedResources?: number;
                    numberOfActivatedAccounts?: number;
                    priceExcludingTaxPerAllowedManager?: number;
                    priceExcludingTaxPerAllowedResource?: number;
                    priceExcludingTaxPerAllowedAccount?: number;
                    schedulesAllowedAccounts?: {
                        level: number;
                        amountExcludingTax: number;
                    }[];
                    automaticSubscription?: boolean;
                    pricingType?: "custom" | "manager" | "account" | "scheduleAccount";
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/subscription", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteSubscription(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/subscription", {
        ...opts,
        method: "DELETE"
    });
}
export function postSubscription(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/subscription", {
        ...opts,
        method: "POST"
    });
}
/**
 * Search invoices
 *
 */
export function getSubscriptionInvoices(body?: string, { page, maxResults }: {
    page?: number;
    maxResults?: number;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "invoice";
                attributes?: {
                    date?: string;
                    reference?: string;
                    turnoverInvoicedExcludingTax?: number;
                    turnoverInvoicedIncludingTax?: number;
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/subscription/invoices${QS.query(QS.explode({
        page,
        maxResults
    }))}`, {
        ...opts,
        body
    });
}
export function postSubscriptionInvoices(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/subscription/invoices", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteSubscriptionInvoices(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/subscription/invoices", {
        ...opts,
        method: "DELETE"
    });
}
export function putSubscriptionInvoices(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/subscription/invoices", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Create a target
 */
export function postTargets(body?: {
    data: {
        "type": "target";
        attributes?: {
            category?: "commercial" | "humanResources" | "recruitment" | "activityExpenses" | "billing" | "global";
            operator?: "<" | "<=" | "=" | ">" | ">=";
            periodType?: "weekly" | "monthly" | "quaterly" | "semiAnnual" | "annual";
            periodNumber?: "allDates" | number;
            periodYear?: "allDates" | string;
            value?: number;
            scorecard?: {
                reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate");
            };
        };
        relationships?: {
            resource: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "target";
                attributes?: {
                    category?: "commercial" | "humanResources" | "recruitment" | "activityExpenses" | "billing" | "global";
                    operator?: "<" | "<=" | "=" | ">" | ">=";
                    periodType?: "weekly" | "monthly" | "quaterly" | "semiAnnual" | "annual";
                    periodNumber?: "allDates" | number;
                    periodYear?: "allDates" | string;
                    value?: number;
                    scorecard?: {
                        reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate");
                        typeOf: "money" | "percentage" | "number" | "string";
                        dictionaryId?: number;
                    };
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/targets", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function getTargets(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/targets", {
        ...opts
    });
}
export function deleteTargets(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/targets", {
        ...opts,
        method: "DELETE"
    });
}
export function putTargets(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/targets", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get target's basic data
 */
export function getTargetsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "target";
                attributes?: {
                    category?: "commercial" | "humanResources" | "recruitment" | "activityExpenses" | "billing" | "global";
                    operator?: "<" | "<=" | "=" | ">" | ">=";
                    periodType?: "weekly" | "monthly" | "quaterly" | "semiAnnual" | "annual";
                    periodNumber?: "allDates" | number;
                    periodYear?: "allDates" | string;
                    value?: number;
                    scorecard?: {
                        reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate");
                        typeOf: "money" | "percentage" | "number" | "string";
                        dictionaryId?: number;
                    };
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/targets/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the target
 */
export function deleteTargetsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/targets/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to a target
 */
export function putTargetsById(body?: {
    data: {
        id: string;
        "type": "target";
        attributes?: {
            category?: "commercial" | "humanResources" | "recruitment" | "activityExpenses" | "billing" | "global";
            operator?: "<" | "<=" | "=" | ">" | ">=";
            periodType?: "weekly" | "monthly" | "quaterly" | "semiAnnual" | "annual";
            periodNumber?: "allDates" | number;
            periodYear?: "allDates" | string;
            value?: number;
            scorecard?: {
                reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate");
            };
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "target";
                attributes?: {
                    category?: "commercial" | "humanResources" | "recruitment" | "activityExpenses" | "billing" | "global";
                    operator?: "<" | "<=" | "=" | ">" | ">=";
                    periodType?: "weekly" | "monthly" | "quaterly" | "semiAnnual" | "annual";
                    periodNumber?: "allDates" | number;
                    periodYear?: "allDates" | string;
                    value?: number;
                    scorecard?: {
                        reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate");
                        typeOf: "money" | "percentage" | "number" | "string";
                        dictionaryId?: number;
                    };
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/targets/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postTargetsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/targets/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Update data related to a Task.
 */
export function putTasksById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "task";
                attributes?: {
                    description?: string;
                    row?: number;
                    state?: boolean;
                    validatedAt?: number;
                    validatedBy?: {
                        id?: string;
                        firstName?: string;
                        lastName?: string;
                        [key: string]: any;
                    };
                };
                relationships?: {
                    children?: {
                        data: {
                            id: string;
                            "type": "task";
                        }[];
                    };
                    todolist?: {
                        data: {
                            id: string;
                            "type": "todolist";
                        }[];
                    };
                    [key: string]: any;
                };
            };
            uniqueItems?: any;
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/tasks/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function getTasksById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "task";
                attributes?: {
                    description?: string;
                    row?: number;
                    state?: boolean;
                    validatedAt?: number;
                    validatedBy?: {
                        id?: string;
                        firstName?: string;
                        lastName?: string;
                        [key: string]: any;
                    };
                };
                relationships?: {
                    children?: {
                        data: {
                            id: string;
                            "type": "task";
                        }[];
                    };
                    todolist?: {
                        data: {
                            id: string;
                            "type": "todolist";
                        }[];
                    };
                    [key: string]: any;
                };
            };
            uniqueItems?: any;
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/tasks/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
export function deleteTasksById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/tasks/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postTasksById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/tasks/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search times
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/times.csv?keywords=TPS1 TPSEXP2*
 *
 */
export function getTimes(body?: string, { keywords, activityType, workUnitTypes, category, resourceTypes, excludeResourceTypes, returnDetailedExceptionalTimes, period, startDate, endDate, encoding, extractType, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    activityType?: "absence" | "internal" | "production";
    workUnitTypes?: string[];
    category?: "regular" | "exceptional";
    resourceTypes?: number[];
    excludeResourceTypes?: number[];
    returnDetailedExceptionalTimes?: boolean;
    period?: string;
    startDate?: string;
    endDate?: string;
    encoding?: string;
    extractType?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "time";
                attributes?: {
                    category?: "regular" | "exceptional";
                    workUnitType?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    row?: number;
                    startDate?: string;
                    endDate?: string;
                    duration?: number;
                };
                relationships?: {
                    timesReport?: {
                        data: {
                            id: string;
                            "type": "timesreport";
                        };
                    };
                    delivery?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "delivery";
                        };
                    };
                    batch?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "batch";
                        };
                    };
                    project?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "timesreport";
                attributes?: {
                    term?: string;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                    workUnitRate?: number;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "batch";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
                relationships?: {
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    workUnitRate?: number;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    workUnitRate?: "notUsed" | number;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/times${QS.query(QS.explode({
        keywords,
        activityType,
        workUnitTypes,
        category,
        resourceTypes,
        excludeResourceTypes,
        returnDetailedExceptionalTimes,
        period,
        startDate,
        endDate,
        encoding,
        extractType,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
export function postTimes(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/times", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteTimes(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/times", {
        ...opts,
        method: "DELETE"
    });
}
export function putTimes(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/times", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Search timesheets
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/times-reports.csv?keywords=TPS1*
 *
 */
export function getTimesReports(startMonth: string, endMonth: string, body?: string, { keywords, resourceTypes, validationStates, closed, encoding, extractType, exportToDownloadCenter, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    resourceTypes?: number[];
    validationStates?: ("waitingForValidation" | "validated" | "rejected")[];
    closed?: boolean;
    encoding?: string;
    extractType?: string;
    exportToDownloadCenter?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "timesreport";
                attributes?: {
                    term?: string;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                    closed?: boolean;
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/times-reports${QS.query(QS.explode({
        keywords,
        resourceTypes,
        validationStates,
        closed,
        startMonth,
        endMonth,
        encoding,
        extractType,
        exportToDownloadCenter,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a timesheet
 */
export function postTimesReports(body?: {
    data: {
        "type": "timesreport";
        attributes: {
            term: string;
            workUnitRate?: number;
            informationComments?: string;
            regularTimes?: ({
                startDate: string;
                duration: number;
                row: number | number;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                duration: number;
                row: number | number;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            })[];
            exceptionalTimes?: ({
                startDate: string;
                endDate: string;
                recovering?: boolean;
                description: string;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                endDate: string;
                recovering?: boolean;
                description: string;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    id: string;
                };
            })[];
            workplaceTimes?: {
                id: string;
                startDate: string;
                duration: number;
                row: number;
                workplaceType: {
                    reference: number;
                    name: string;
                };
            }[];
        };
        relationships: {
            resource: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "moreThanNumberOfWorkingDays" | "workplaceTimesMoreThanNumberOfWorkingDays" | "workplaceTimesLessThanNumberOfWorkingDays" | "atLeastOneAbsenceQuotaExceeded" | "wrongAbsences" | "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "outsideContractDates" | "outsideDeliveryDates" | "outsideDocumentDates" | "lessThanNumberOfWorkingDaysInsideContractDates" | "moreThanNumberOfWorkingDaysInsideContractDates" | "noSignedTimesheet" | "workUnitRatesNotEqual";
                    detail: string;
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title: string;
                        startDate: string;
                        endDate: string;
                    };
                    workUnitType: {
                        data: null;
                    } | {
                        reference: number;
                        name: string;
                    };
                    projects?: {
                        id: string;
                        reference: string;
                        mailValidatorSignature?: string;
                    }[];
                }[];
                expectedValidatorsAllowedForValidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForUnvalidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForReject?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "timesreport";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    term?: string;
                    workUnitRate?: number;
                    informationComments?: string;
                    closed?: boolean;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                    regularTimes?: {
                        id: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    exceptionalTimes?: {
                        id: string;
                        startDate: string;
                        endDate: string;
                        duration: number;
                        recovering: boolean;
                        description: string;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    absencesTimes?: {
                        startDate: string;
                        duration: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                    }[];
                    plannedTimes?: {
                        id?: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    workplaceTimes?: {
                        id: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workplaceType: {
                            reference: number;
                            name: string;
                        };
                    }[];
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    expensesReport?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "expensesreport";
                        };
                    };
                    orders?: {
                        data: {
                            id: string;
                            "type": "order";
                        }[];
                    };
                    projects?: {
                        data: {
                            id: string;
                            "type": "project";
                            mailValidatorSignature?: string;
                        }[];
                    };
                    validations?: {
                        data: {
                            id: string;
                            "type": "validation";
                        }[];
                    };
                    validationWorkflow?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "signature";
                attributes?: {
                    state?: "pending" | "validated";
                    creationDate?: string;
                    remindDate?: string;
                    date?: string;
                    lastName?: string;
                    firstName?: string;
                    "function"?: string;
                    token?: string;
                    mailValidatorSignature?: string;
                };
                relationships?: {
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    remindedBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                    allowExceptionalTimes?: "inactive" | "withRecovering" | "withoutRecovering";
                    workUnitTypesAllowedForAbsences?: {
                        reference: number;
                        name: string;
                    }[];
                    workUnitRate?: "notUsed" | number;
                    workplacesDefaultWeek?: ({
                        reference?: number;
                        dayOfWeek: "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday";
                        duration: number;
                    })[];
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    workUnitRate?: number;
                    calendar?: string;
                    workUnitTypes?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    }[];
                    workplaceTypes?: {
                        reference: number;
                        name: string;
                    }[];
                    timesLegals?: string;
                    timesAlerts?: any[];
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name: string;
                    category: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    signature?: {
                        data: {
                            id: string;
                            "type": "signature";
                        };
                    };
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                };
            } | {
                id: string;
                "type": "batch";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    mailValidatorSignature?: string;
                    isMonitorSignedTimesheets?: boolean;
                };
                relationships?: {
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveries?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        }[];
                    };
                    batches?: any[];
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "validation";
                attributes?: {
                    date?: string;
                    state?: "waitingForValidation" | "validated" | "rejected";
                    reason?: string;
                };
                relationships?: {
                    realValidator?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    expectedValidator?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    reference?: string;
                    "number"?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/times-reports", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteTimesReports(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/times-reports", {
        ...opts,
        method: "DELETE"
    });
}
export function putTimesReports(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/times-reports", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get empty timesheet's default basic data
 */
export function getTimesReportsDefault(resource: number, term: string, body?: string, { agency }: {
    agency?: number;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "moreThanNumberOfWorkingDays" | "workplaceTimesMoreThanNumberOfWorkingDays" | "workplaceTimesLessThanNumberOfWorkingDays" | "atLeastOneAbsenceQuotaExceeded" | "wrongAbsences" | "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "outsideContractDates" | "outsideDeliveryDates" | "outsideDocumentDates" | "lessThanNumberOfWorkingDaysInsideContractDates" | "moreThanNumberOfWorkingDaysInsideContractDates" | "noSignedTimesheet" | "workUnitRatesNotEqual";
                    detail: string;
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title: string;
                        startDate: string;
                        endDate: string;
                    };
                    workUnitType: {
                        data: null;
                    } | {
                        reference: number;
                        name: string;
                    };
                }[];
                expectedValidatorsAllowedForValidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForUnvalidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForReject?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "timesreport";
                attributes?: {
                    term?: string;
                    workUnitRate?: number;
                    absencesTimes?: {
                        startDate: string;
                        duration: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                    }[];
                    plannedTimes?: {
                        id?: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    workplaceTimes?: {
                        id: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workplaceType: {
                            reference: number;
                            name: string;
                        };
                    }[];
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    expensesReport?: {
                        data: null;
                    } | {
                        id: string;
                        "type": "expensesreport";
                    };
                    projects?: {
                        data: {
                            id: string;
                            "type": "project";
                        }[];
                    };
                    validationWorkflow?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                    allowExceptionalTimes?: "inactive" | "withRecovering" | "withoutRecovering";
                    workUnitTypesAllowedForAbsences?: {
                        reference: number;
                        name: string;
                    }[];
                    workUnitRate?: "notUsed" | number;
                    workplacesDefaultWeek?: ({
                        reference?: number;
                        dayOfWeek: "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday";
                        duration: number;
                    })[];
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    workUnitRate?: number;
                    calendar?: string;
                    workUnitTypes?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    }[];
                    timesLegals?: string;
                    timesAlerts?: any[];
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                };
            } | {
                id: string;
                "type": "batch";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
                relationships?: {
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveries?: any[];
                    batches?: any[];
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/times-reports/default${QS.query(QS.explode({
        resource,
        term,
        agency
    }))}`, {
        ...opts,
        body
    });
}
export function putTimesReportsDefault(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "moreThanNumberOfWorkingDays" | "workplaceTimesMoreThanNumberOfWorkingDays" | "workplaceTimesLessThanNumberOfWorkingDays" | "atLeastOneAbsenceQuotaExceeded" | "wrongAbsences" | "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "outsideContractDates" | "outsideDeliveryDates" | "outsideDocumentDates" | "lessThanNumberOfWorkingDaysInsideContractDates" | "moreThanNumberOfWorkingDaysInsideContractDates" | "noSignedTimesheet" | "workUnitRatesNotEqual";
                    detail: string;
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title: string;
                        startDate: string;
                        endDate: string;
                    };
                    workUnitType: {
                        data: null;
                    } | {
                        reference: number;
                        name: string;
                    };
                }[];
                expectedValidatorsAllowedForValidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForUnvalidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForReject?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: "0";
                "type": "timesreport";
                attributes?: {
                    term?: string;
                    workUnitRate?: number;
                    absencesTimes?: {
                        startDate: string;
                        duration: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                    }[];
                    plannedTimes?: {
                        id?: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    workplaceTimes?: {
                        id: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workplaceType: {
                            reference: number;
                            name: string;
                        };
                    }[];
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    expensesReport?: {
                        data: null;
                    } | {
                        id: string;
                        "type": "expensesreport";
                    };
                    projects?: {
                        data: {
                            id: string;
                            "type": "project";
                        }[];
                    };
                    validationWorkflow?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                    allowExceptionalTimes?: "inactive" | "withRecovering" | "withoutRecovering";
                    workUnitTypesAllowedForAbsences?: {
                        reference: number;
                        name: string;
                    }[];
                    workUnitRate?: "notUsed" | number;
                    workplacesDefaultWeek?: ({
                        reference?: number;
                        dayOfWeek: "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday";
                        duration: number;
                    })[];
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    workUnitRate?: number;
                    calendar?: string;
                    workUnitTypes?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    }[];
                    timesLegals?: string;
                    timesAlerts?: any[];
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                };
            } | {
                id: string;
                "type": "batch";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                };
                relationships?: {
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveries?: any[];
                    batches?: any[];
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/times-reports/default", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteTimesReportsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/times-reports/default", {
        ...opts,
        method: "DELETE"
    });
}
export function postTimesReportsDefault(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/times-reports/default", {
        ...opts,
        method: "POST"
    });
}
/**
 * Get timesheet's basic data
 */
export function getTimesReportsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "moreThanNumberOfWorkingDays" | "workplaceTimesMoreThanNumberOfWorkingDays" | "workplaceTimesLessThanNumberOfWorkingDays" | "atLeastOneAbsenceQuotaExceeded" | "wrongAbsences" | "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "outsideContractDates" | "outsideDeliveryDates" | "outsideDocumentDates" | "lessThanNumberOfWorkingDaysInsideContractDates" | "moreThanNumberOfWorkingDaysInsideContractDates" | "noSignedTimesheet" | "workUnitRatesNotEqual";
                    detail: string;
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title: string;
                        startDate: string;
                        endDate: string;
                    };
                    workUnitType: {
                        data: null;
                    } | {
                        reference: number;
                        name: string;
                    };
                    projects?: {
                        id: string;
                        reference: string;
                        mailValidatorSignature?: string;
                    }[];
                }[];
                expectedValidatorsAllowedForValidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForUnvalidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForReject?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "timesreport";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    term?: string;
                    workUnitRate?: number;
                    informationComments?: string;
                    closed?: boolean;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                    regularTimes?: {
                        id: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    exceptionalTimes?: {
                        id: string;
                        startDate: string;
                        endDate: string;
                        duration: number;
                        recovering: boolean;
                        description: string;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    absencesTimes?: {
                        startDate: string;
                        duration: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                    }[];
                    plannedTimes?: {
                        id?: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    workplaceTimes?: {
                        id: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workplaceType: {
                            reference: number;
                            name: string;
                        };
                    }[];
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    expensesReport?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "expensesreport";
                        };
                    };
                    orders?: {
                        data: {
                            id: string;
                            "type": "order";
                        }[];
                    };
                    projects?: {
                        data: {
                            id: string;
                            "type": "project";
                            mailValidatorSignature?: string;
                        }[];
                    };
                    validations?: {
                        data: {
                            id: string;
                            "type": "validation";
                        }[];
                    };
                    validationWorkflow?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "signature";
                attributes?: {
                    state?: "pending" | "validated";
                    creationDate?: string;
                    remindDate?: string;
                    date?: string;
                    lastName?: string;
                    firstName?: string;
                    "function"?: string;
                    token?: string;
                    mailValidatorSignature?: string;
                };
                relationships?: {
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    remindedBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                    allowExceptionalTimes?: "inactive" | "withRecovering" | "withoutRecovering";
                    workUnitTypesAllowedForAbsences?: {
                        reference: number;
                        name: string;
                    }[];
                    workUnitRate?: "notUsed" | number;
                    workplacesDefaultWeek?: ({
                        reference?: number;
                        dayOfWeek: "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday";
                        duration: number;
                    })[];
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    workUnitRate?: number;
                    calendar?: string;
                    workUnitTypes?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    }[];
                    workplaceTypes?: {
                        reference: number;
                        name: string;
                    }[];
                    timesLegals?: string;
                    timesAlerts?: any[];
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name: string;
                    category: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    signature?: {
                        data: {
                            id: string;
                            "type": "signature";
                        };
                    };
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                };
            } | {
                id: string;
                "type": "batch";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    mailValidatorSignature?: string;
                    isMonitorSignedTimesheets?: boolean;
                };
                relationships?: {
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveries?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        }[];
                    };
                    batches?: any[];
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "validation";
                attributes?: {
                    date?: string;
                    state?: "waitingForValidation" | "validated" | "rejected";
                    reason?: string;
                };
                relationships?: {
                    realValidator?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    expectedValidator?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    reference?: string;
                    "number"?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/times-reports/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the timesheet
 */
export function deleteTimesReportsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/times-reports/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to a timesheet
 */
export function putTimesReportsById(body?: {
    data: {
        id: string;
        "type": "timesreport";
        attributes?: {
            workUnitRate?: number;
            informationComments?: string;
            regularTimes?: ({
                startDate: string;
                duration: number;
                row: number | number;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                duration: number;
                row: number | number;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            })[];
            exceptionalTimes?: ({
                startDate: string;
                endDate: string;
                recovering?: boolean;
                description: string;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                endDate: string;
                recovering?: boolean;
                description: string;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    id: string;
                };
            })[];
            workplaceTimes?: {
                id: string;
                startDate: string;
                duration: number;
                row: number;
                workplaceType: {
                    reference: number;
                    name: string;
                };
            }[];
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                warnings?: {
                    code: "moreThanNumberOfWorkingDays" | "workplaceTimesMoreThanNumberOfWorkingDays" | "workplaceTimesLessThanNumberOfWorkingDays" | "atLeastOneAbsenceQuotaExceeded" | "wrongAbsences" | "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "outsideContractDates" | "outsideDeliveryDates" | "outsideDocumentDates" | "lessThanNumberOfWorkingDaysInsideContractDates" | "moreThanNumberOfWorkingDaysInsideContractDates" | "noSignedTimesheet" | "workUnitRatesNotEqual";
                    detail: string;
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title: string;
                        startDate: string;
                        endDate: string;
                    };
                    workUnitType: {
                        data: null;
                    } | {
                        reference: number;
                        name: string;
                    };
                    projects?: {
                        id: string;
                        reference: string;
                        mailValidatorSignature?: string;
                    }[];
                }[];
                expectedValidatorsAllowedForValidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForUnvalidate?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                expectedValidatorsAllowedForReject?: {
                    id: string;
                    firstName: string;
                    lastName: string;
                }[];
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "timesreport";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    term?: string;
                    workUnitRate?: number;
                    informationComments?: string;
                    closed?: boolean;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                    regularTimes?: {
                        id: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    exceptionalTimes?: {
                        id: string;
                        startDate: string;
                        endDate: string;
                        duration: number;
                        recovering: boolean;
                        description: string;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    absencesTimes?: {
                        startDate: string;
                        duration: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                    }[];
                    plannedTimes?: {
                        id?: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                        delivery: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                            startDate?: string;
                            endDate?: string;
                        };
                        batch: {
                            data: null;
                        } | {
                            id: string;
                            title?: string;
                        };
                        project: {
                            data: null;
                        } | {
                            id: string;
                            reference?: string;
                        };
                    }[];
                    workplaceTimes?: {
                        id: string;
                        startDate: string;
                        duration: number;
                        row: number;
                        workplaceType: {
                            reference: number;
                            name: string;
                        };
                    }[];
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    files?: {
                        data: {
                            id: string;
                            "type": "document";
                        }[];
                    };
                    expensesReport?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "expensesreport";
                        };
                    };
                    orders?: {
                        data: {
                            id: string;
                            "type": "order";
                        }[];
                    };
                    projects?: {
                        data: {
                            id: string;
                            "type": "project";
                            mailValidatorSignature?: string;
                        }[];
                    };
                    validations?: {
                        data: {
                            id: string;
                            "type": "validation";
                        }[];
                    };
                    validationWorkflow?: {
                        data: {
                            id: string;
                            "type": "resource";
                        }[];
                    };
                };
            };
            included?: ({
                id: string;
                "type": "signature";
                attributes?: {
                    state?: "pending" | "validated";
                    creationDate?: string;
                    remindDate?: string;
                    date?: string;
                    lastName?: string;
                    firstName?: string;
                    "function"?: string;
                    token?: string;
                    mailValidatorSignature?: string;
                };
                relationships?: {
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    remindedBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                    allowExceptionalTimes?: "inactive" | "withRecovering" | "withoutRecovering";
                    workUnitTypesAllowedForAbsences?: {
                        reference: number;
                        name: string;
                    }[];
                    workUnitRate?: "notUsed" | number;
                    workplacesDefaultWeek?: ({
                        reference?: number;
                        dayOfWeek: "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday";
                        duration: number;
                    })[];
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    workUnitRate?: number;
                    calendar?: string;
                    workUnitTypes?: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    }[];
                    workplaceTypes?: {
                        reference: number;
                        name: string;
                    }[];
                    timesLegals?: string;
                    timesAlerts?: any[];
                };
            } | {
                id: string;
                "type": "document";
                attributes?: {
                    name: string;
                    category: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                    signature?: {
                        data: {
                            id: string;
                            "type": "signature";
                        };
                    };
                };
            } | {
                id: string;
                "type": "delivery";
                attributes?: {
                    title?: string;
                    startDate?: string;
                    endDate?: string;
                };
            } | {
                id: string;
                "type": "batch";
                attributes?: {
                    title?: string;
                };
            } | {
                id: string;
                "type": "project";
                attributes?: {
                    reference?: string;
                    mailValidatorSignature?: string;
                    isMonitorSignedTimesheets?: boolean;
                };
                relationships?: {
                    company?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "company";
                        };
                    };
                    deliveries?: {
                        data: {
                            id: string;
                            "type": "delivery";
                        }[];
                    };
                    batches?: any[];
                };
            } | {
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            } | {
                id: string;
                "type": "validation";
                attributes?: {
                    date?: string;
                    state?: "waitingForValidation" | "validated" | "rejected";
                    reason?: string;
                };
                relationships?: {
                    realValidator?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    expectedValidator?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "order";
                attributes?: {
                    reference?: string;
                    "number"?: string;
                };
                relationships?: {
                    project?: {
                        data: {
                            id: string;
                            "type": "project";
                        };
                    };
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/times-reports/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postTimesReportsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/times-reports/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Create a thumbnail
 */
export function postThumbnails(body?: {
    parentType: string;
    parentId: string;
    file?: any;
    fileUrl?: string;
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "thumbnail";
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/thumbnails", oazapfts.multipart({
        ...opts,
        method: "POST",
        body
    }));
}
export function getThumbnails(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: Blob;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/thumbnails", {
        ...opts
    });
}
export function deleteThumbnails(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/thumbnails", {
        ...opts,
        method: "DELETE"
    });
}
export function putThumbnails(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/thumbnails", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get thumbnail
 */
export function getThumbnailsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: Blob;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/thumbnails/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the thumbnail
 */
export function deleteThumbnailsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/thumbnails/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postThumbnailsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/thumbnails/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
export function putThumbnailsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/thumbnails/${encodeURIComponent(id)}`, {
        ...opts,
        method: "PUT",
        body
    });
}
/**
 * Search TodoLists
 */
export function getTodolists(body?: string, { sort, order }: {
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/todolists${QS.query(QS.explode({
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
/**
 * Create a TodoLists
 */
export function postTodolists(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/todolists", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteTodolists(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/todolists", {
        ...opts,
        method: "DELETE"
    });
}
export function putTodolists(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/todolists", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get TodoList's data
 */
export function getTodolistsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/todolists/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Update data related to a TodoList.
 */
export function putTodolistsById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/todolists/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
/**
 * Delete the TodoList
 */
export function deleteTodolistsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/todolists/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postTodolistsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/todolists/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Log out user
 */
export function deleteTrustelemById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/trustelem/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
export function postTrustelemById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/trustelem/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
export function putTrustelemById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/trustelem/${encodeURIComponent(id)}`, {
        ...opts,
        method: "PUT",
        body
    });
}
export function getTrustelemById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/trustelem/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Search validations
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/validations.csv?keywords=TPS1*
 *
 */
export function getValidations(startMonth: string, endMonth: string, body?: string, { keywords, documentTypes, resourceTypes, validationStates, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    documentTypes?: ("absencesReport" | "timesReport" | "expensesReport")[];
    resourceTypes?: number[];
    validationStates?: ("waitingForValidation" | "validated" | "rejected")[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "validation";
                attributes?: {
                    date?: string;
                    state?: "waitingForValidation" | "validated" | "rejected";
                };
                relationships?: {
                    expectedValidator?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    realValidator?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "timesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "expensesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "absencesreport";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            } | {
                id?: string;
                "type"?: "timesreport";
                attributes?: {
                    term?: string;
                    closed?: boolean;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    [key: string]: any;
                };
                [key: string]: any;
            } | {
                id?: string;
                "type"?: "expensesreport";
                attributes?: {
                    term?: string;
                    closed?: boolean;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    [key: string]: any;
                };
                [key: string]: any;
            } | {
                id?: string;
                "type"?: "absencesreport";
                attributes?: {
                    creationDate?: string;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                    absencesPeriods?: {
                        id: string;
                        startDate: string;
                        endDate: string;
                        duration: number;
                        title: string;
                        workUnitType: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        };
                    }[];
                };
                relationships?: {
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    [key: string]: any;
                };
                [key: string]: any;
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/validations${QS.query(QS.explode({
        keywords,
        documentTypes,
        resourceTypes,
        validationStates,
        startMonth,
        endMonth,
        encoding,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
export function postValidations(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "validation";
                attributes?: {
                    date?: string;
                    state?: "waitingForValidation" | "validated" | "rejected";
                    reason?: string;
                };
                relationships?: {
                    realValidator?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    expectedValidator?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "timesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "expensesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "absencesreport";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/validations", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteValidations(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/validations", {
        ...opts,
        method: "DELETE"
    });
}
export function putValidations(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/validations", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get validation's basic data
 */
export function getValidationsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "validation";
                attributes?: {
                    date?: string;
                    state?: "waitingForValidation" | "validated" | "rejected";
                    reason?: string;
                };
                relationships?: {
                    realValidator?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    expectedValidator?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "timesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "expensesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "absencesreport";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/validations/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the validation
 */
export function deleteValidationsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/validations/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update basic data related to a validation
 */
export function putValidationsById(body?: any, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "validation";
                attributes?: {
                    date?: string;
                    state?: "waitingForValidation" | "validated" | "rejected";
                    reason?: string;
                };
                relationships?: {
                    realValidator?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    expectedValidator?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                    dependsOn?: {
                        data: {
                            id: string;
                            "type": "timesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "expensesreport";
                        };
                    } | {
                        data: {
                            id: string;
                            "type": "absencesreport";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    "function"?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/validations/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postValidationsById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/validations/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Get vendor's basic data
 */
export function getVendor(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "vendor";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    isOwner?: boolean;
                    description?: string;
                    email1?: string;
                    phone1?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    website?: string;
                    logo?: string;
                };
                relationships?: {
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/vendor", {
        ...opts
    });
}
/**
 * Update basic data related to a vendor
 */
export function putVendor(body?: {
    data: {
        id: string;
        "type": "vendor";
        attributes?: {
            name?: string;
            description?: string;
            email1?: string;
            phone1?: string;
            address?: string;
            postcode?: string;
            town?: string;
            country?: string;
            website?: string;
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "vendor";
                attributes?: {
                    creationDate?: string;
                    updateDate?: string;
                    name?: string;
                    isOwner?: boolean;
                    description?: string;
                    email1?: string;
                    phone1?: string;
                    address?: string;
                    postcode?: string;
                    town?: string;
                    country?: string;
                    website?: string;
                    logo?: string;
                };
                relationships?: {
                    createdBy?: {
                        data: null;
                    } | {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/vendor", oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function deleteVendor(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/vendor", {
        ...opts,
        method: "DELETE"
    });
}
export function postVendor(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/vendor", {
        ...opts,
        method: "POST"
    });
}
/**
 * Search webhooks
 */
export function getWebhooks(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "webhook";
                attributes?: {
                    name?: string;
                    description?: string;
                    url?: string;
                    events?: {
                        "type"?: "create" | "update" | "delete";
                        entity?: "product" | "candidate" | "resource" | "advantage" | "contract" | "purchase" | "payment" | "opportunity" | "app" | "positioning" | "order" | "invoice" | "contact" | "company" | "project" | "delivery" | "inactivity" | "groupment" | "businessunit" | "agency" | "pole" | "role" | "expensesreport" | "timesreport" | "absencesreport" | "action" | "quotation" | "validation" | "vendor" | "customer" | "architecture" | "savedsearch" | "actiontemplate" | "flag" | "target" | "thread";
                        [key: string]: any;
                    }[];
                };
                relationships?: {
                    createdBy?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            }[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/webhooks", {
        ...opts
    });
}
/**
 * Create a request of webhook
 */
export function postWebhooks(body?: {
    data: {
        id?: string;
        "type": "webhook";
        attributes?: {
            name?: string;
            description?: string;
            url?: string;
            events?: {
                "type"?: "create" | "update" | "delete";
                entity?: "product" | "candidate" | "resource" | "advantage" | "contract" | "purchase" | "payment" | "opportunity" | "app" | "positioning" | "order" | "invoice" | "contact" | "company" | "project" | "delivery" | "inactivity" | "groupment" | "businessunit" | "agency" | "pole" | "role" | "expensesreport" | "timesreport" | "absencesreport" | "action" | "quotation" | "validation" | "vendor" | "customer" | "architecture" | "savedsearch" | "actiontemplate" | "flag" | "target" | "thread";
                [key: string]: any;
            }[];
        };
        relationships?: {
            createdBy?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/webhooks", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteWebhooks(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/webhooks", {
        ...opts,
        method: "DELETE"
    });
}
export function putWebhooks(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/webhooks", {
        ...opts,
        method: "PUT"
    });
}
/**
 * Get webhook
 */
export function getWebhooksById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "webhook";
                attributes?: {
                    name?: string;
                    description?: string;
                    url?: string;
                    events?: {
                        "type"?: "create" | "update" | "delete";
                        entity?: "product" | "candidate" | "resource" | "advantage" | "contract" | "purchase" | "payment" | "opportunity" | "app" | "positioning" | "order" | "invoice" | "contact" | "company" | "project" | "delivery" | "inactivity" | "groupment" | "businessunit" | "agency" | "pole" | "role" | "expensesreport" | "timesreport" | "absencesreport" | "action" | "quotation" | "validation" | "vendor" | "customer" | "architecture" | "savedsearch" | "actiontemplate" | "flag" | "target" | "thread";
                        [key: string]: any;
                    }[];
                };
                relationships?: {
                    createdBy?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/webhooks/${encodeURIComponent(id)}`, {
        ...opts,
        body
    });
}
/**
 * Delete the webhook
 */
export function deleteWebhooksById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/webhooks/${encodeURIComponent(id)}`, {
        ...opts,
        method: "DELETE",
        body
    });
}
/**
 * Update webhook data
 */
export function putWebhooksById(body?: {
    data: {
        id?: string;
        "type": "webhook";
        attributes?: {
            name?: string;
            description?: string;
            url?: string;
            events?: {
                "type"?: "create" | "update" | "delete";
                entity?: "product" | "candidate" | "resource" | "advantage" | "contract" | "purchase" | "payment" | "opportunity" | "app" | "positioning" | "order" | "invoice" | "contact" | "company" | "project" | "delivery" | "inactivity" | "groupment" | "businessunit" | "agency" | "pole" | "role" | "expensesreport" | "timesreport" | "absencesreport" | "action" | "quotation" | "validation" | "vendor" | "customer" | "architecture" | "savedsearch" | "actiontemplate" | "flag" | "target" | "thread";
                [key: string]: any;
            }[];
        };
        relationships?: {
            createdBy?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "webhook";
                attributes?: {
                    name?: string;
                    description?: string;
                    url?: string;
                    events?: {
                        "type"?: "create" | "update" | "delete";
                        entity?: "product" | "candidate" | "resource" | "advantage" | "contract" | "purchase" | "payment" | "opportunity" | "app" | "positioning" | "order" | "invoice" | "contact" | "company" | "project" | "delivery" | "inactivity" | "groupment" | "businessunit" | "agency" | "pole" | "role" | "expensesreport" | "timesreport" | "absencesreport" | "action" | "quotation" | "validation" | "vendor" | "customer" | "architecture" | "savedsearch" | "actiontemplate" | "flag" | "target" | "thread";
                        [key: string]: any;
                    }[];
                };
                relationships?: {
                    createdBy?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            };
            included?: ({
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/webhooks/${encodeURIComponent(id)}`, oazapfts.json({
        ...opts,
        method: "PUT",
        body
    }));
}
export function postWebhooksById(body?: string, { id }: {
    id?: string;
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/webhooks/${encodeURIComponent(id)}`, {
        ...opts,
        method: "POST",
        body
    });
}
/**
 * Search workplace's times
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/workplace-times.csv?keywords=TPS1 TPSEXP2*
 *
 */
export function getWorkplacesTimes(body?: string, { keywords, workplaceTypes, period, startDate, endDate, encoding, extractType, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }: {
    keywords?: string;
    workplaceTypes?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    encoding?: string;
    extractType?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
} = {}, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: {
            meta: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            } & {
                totals?: {
                    rows?: number;
                };
                [key: string]: any;
            };
            data: {
                id: string;
                "type": "time";
                attributes?: {
                    workplaceType?: {
                        reference: number;
                        name: string;
                    };
                    row?: number;
                    startDate?: string;
                    duration?: number;
                };
                relationships?: {
                    timesReport?: {
                        data: {
                            id: string;
                            "type": "timesreport";
                        };
                    };
                };
            }[];
            included?: ({
                id: string;
                "type": "timesreport";
                attributes?: {
                    term?: string;
                    state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                };
                relationships?: {
                    agency?: {
                        data: {
                            id: string;
                            "type": "agency";
                        };
                    };
                    resource?: {
                        data: {
                            id: string;
                            "type": "resource";
                        };
                    };
                };
            } | {
                id: string;
                "type": "agency";
                attributes?: {
                    name?: string;
                    workUnitRate?: number;
                };
            } | {
                id: string;
                "type": "resource";
                attributes?: {
                    firstName?: string;
                    lastName?: string;
                    workUnitRate?: "notUsed" | number;
                };
            })[];
        };
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>(`/workplaces-times${QS.query(QS.explode({
        keywords,
        workplaceTypes,
        period,
        startDate,
        endDate,
        encoding,
        extractType,
        perimeterAgencies,
        perimeterBusinessUnits,
        perimeterPoles,
        perimeterManagers,
        narrowPerimeter,
        page,
        maxResults,
        sort,
        order
    }))}`, {
        ...opts,
        body
    });
}
export function postWorkplacesTimes(body?: any, opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: any;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/workplaces-times", oazapfts.json({
        ...opts,
        method: "POST",
        body
    }));
}
export function deleteWorkplacesTimes(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/workplaces-times", {
        ...opts,
        method: "DELETE"
    });
}
export function putWorkplacesTimes(opts?: Oazapfts.RequestOpts) {
    return oazapfts.fetchJson<{
        status: 200;
        data: string;
    } | {
        status: 401;
        data: string;
    } | {
        status: 403;
        data: string;
    } | {
        status: 404;
        data: string;
    } | {
        status: 422;
        data: {
            meta?: {
                version: string;
                isLogged: boolean;
                language: "fr" | "en";
                [key: string]: any;
            };
            errors: {
                code?: number;
                detail?: string | object;
                source?: {
                    pointer?: string;
                    parameter?: string;
                };
            }[];
        };
    } | {
        status: 500;
        data: string;
    } | {
        status: 503;
        data: string;
    }>("/workplaces-times", {
        ...opts,
        method: "PUT"
    });
}
