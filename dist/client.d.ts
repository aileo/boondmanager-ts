/**
 * BoondManager API
 * 1.0
 * DO NOT MODIFY - This file has been generated using oazapfts.
 * See https://www.npmjs.com/package/oazapfts
 */
import * as Oazapfts from "oazapfts/lib/runtime";
export declare const defaults: Oazapfts.RequestOpts;
export declare const servers: {
    server1: ({ apiServer, apiVersion }: {
        apiServer: "ui.boondmanager.com";
        apiVersion: "1.0";
    }) => string;
};
/**
 * Search absences
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/absences.csv?keywords=TPS1*
 *
 */
export declare function getAbsences(body?: string, { keywords, resourceTypes, excludeResourceTypes, period, startDate, endDate, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    resourceTypes?: number[];
    excludeResourceTypes?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "absence";
            attributes?: {
                startDate?: string;
                endDate?: string;
                duration?: number;
                title?: string;
                workUnitType?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                };
            };
            relationships?: {
                absencesReport?: {
                    data: {
                        id: string;
                        "type": "absencesreport";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "absencesreport";
            attributes?: {
                creationDate?: string | undefined;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected" | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                workUnitRate?: number | "notUsed" | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAbsences(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAbsences(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAbsences(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search request absences
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/absences-reports.csv?keywords=ABS1*
 *
 */
export declare function getAbsencesReports(startMonth: string, endMonth: string, body?: string, { keywords, resourceTypes, validationStates, encoding, extractType, exportToDownloadCenter, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    resourceTypes?: number[];
    validationStates?: ("waitingForValidation" | "validated" | "rejected")[];
    encoding?: string;
    extractType?: string;
    exportToDownloadCenter?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "absencesreport";
            attributes?: {
                creationDate?: string;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                absencesPeriods?: {
                    id: string;
                    startDate: string;
                    endDate: string;
                    duration: number;
                    title: string;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                }[];
            };
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a request of absences
 */
export declare function postAbsencesReports(body?: {
    data: {
        "type": "absencesreport";
        attributes?: {
            creationDate?: string;
            informationComments?: string;
            absencesPeriods?: ({
                startDate: string;
                endDate: string;
                duration: number;
                title: string;
                workUnitType: {
                    reference: number;
                };
            } | {
                id: string;
                startDate: string;
                endDate: string;
                duration: number;
                title: string;
                workUnitType: {
                    reference: number;
                };
            })[];
            absencesQuestions?: {
                question: string;
                answer: boolean;
            }[];
        };
        relationships: {
            resource: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "moreThanAbsenceAccountAcquired";
                detail: string;
                workUnitType: {
                    reference: number;
                    name: string;
                };
            }[] | undefined;
            expectedValidatorsAllowedForValidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForUnvalidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForReject?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
        };
        data: {
            id: string;
            type: "absencesreport";
            attributes?: {
                creationDate?: string | undefined;
                updateDate?: string | undefined;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected" | undefined;
                informationComments?: string | undefined;
                absencesPeriods?: {
                    id: string;
                    startDate: string;
                    endDate: string;
                    duration: number;
                    title: string;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                }[] | undefined;
                absencesQuestions?: {
                    question: string;
                    answer: boolean;
                }[] | undefined;
            } | undefined;
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                } | undefined;
                validations?: {
                    data: {
                        id: string;
                        "type": "validation";
                    }[];
                } | undefined;
                validationWorkflow?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                } | undefined;
                absencesAccounts?: {
                    [key: string]: any;
                    data?: {
                        id: string;
                        type: "absencesaccount";
                    }[] | undefined;
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
                workUnitTypesAllowedForAbsences?: {
                    reference: number;
                    name: string;
                }[] | undefined;
                workUnitRate?: number | "notUsed" | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                workUnitRate?: number | undefined;
                calendar?: string | undefined;
                absencesLegals?: string | undefined;
                workUnitTypes?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                }[] | undefined;
                absencesReportsQuestions?: {
                    question: string;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "validation";
            attributes?: {
                date?: string | undefined;
                state?: "waitingForValidation" | "validated" | "rejected" | undefined;
                reason?: string | undefined;
            } | undefined;
            relationships?: {
                realValidator?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                expectedValidator?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "validation";
            attributes?: {
                period?: "JanuaryToDecember" | "FebruaryToJanuary" | "MarchToFebruary" | "AprilToMarch" | "MayToApril" | "JuneToMay" | "JulyToJune" | "AugustToJuly" | "SeptemberToAugust" | "OctoberToSeptember" | "NovemberToOctober" | "DecemberToNovember" | undefined;
                year?: number | undefined;
                amountAcquired?: number | undefined;
                amountAcquiredUsed?: number | undefined;
                amountBeingAcquired?: number | undefined;
                amountAcquiredAsked?: number | undefined;
                amountBeingAcquiredAsked?: number | undefined;
                amountBeingAcquiredUsed?: number | undefined;
                deltaAcquiredAsked?: number | undefined;
                deltaAcquiredUsed?: number | undefined;
                deltaBeingAcquiredAsked?: number | undefined;
                deltaBeingAcquiredUsed?: number | undefined;
                useBeingAcquired?: "inactive" | "AllowTakenAbsencesOnBeingAcquired" | "ForbidTakenAbsencesOnBeingAcquired" | undefined;
                isQuotaExists?: boolean | undefined;
                automaticDescription?: {
                    date: string;
                    previousAmountBeingAcquired: number | null;
                    newAmountBeingAcquired: number;
                    previousAmountAcquired: number | null;
                    newAmountAcquired: number;
                }[] | undefined;
                workUnitType?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                } | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAbsencesReports(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAbsencesReports(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty request of absences default basic data
 */
export declare function getAbsencesReportsDefault(resource: number, body?: string, { agency }?: {
    agency?: number;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "moreThanAbsenceAccountAcquired";
                detail: string;
                workUnitType: {
                    reference: number;
                    name: string;
                };
            }[] | undefined;
            expectedValidatorsAllowedForValidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForUnvalidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForReject?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
        };
        data: {
            id: "0";
            type: "absencesreport";
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                validationWorkflow?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                } | undefined;
                absencesAccounts?: {
                    [key: string]: any;
                    data?: {
                        id: string;
                        type: "absencesaccount";
                    }[] | undefined;
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
                workUnitTypesAllowedForAbsences?: {
                    reference: number;
                    name: string;
                }[] | undefined;
                workUnitRate?: number | "notUsed" | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                workUnitRate?: number | undefined;
                calendar?: string | undefined;
                workUnitTypes?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                }[] | undefined;
                absencesReportsQuestions?: {
                    question: string;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "validation";
            attributes?: {
                period?: "JanuaryToDecember" | "FebruaryToJanuary" | "MarchToFebruary" | "AprilToMarch" | "MayToApril" | "JuneToMay" | "JulyToJune" | "AugustToJuly" | "SeptemberToAugust" | "OctoberToSeptember" | "NovemberToOctober" | "DecemberToNovember" | undefined;
                year?: number | undefined;
                amountAcquired?: number | undefined;
                amountAcquiredUsed?: number | undefined;
                amountBeingAcquired?: number | undefined;
                amountAcquiredAsked?: number | undefined;
                amountBeingAcquiredAsked?: number | undefined;
                amountBeingAcquiredUsed?: number | undefined;
                deltaAcquiredAsked?: number | undefined;
                deltaAcquiredUsed?: number | undefined;
                deltaBeingAcquiredAsked?: number | undefined;
                deltaBeingAcquiredUsed?: number | undefined;
                useBeingAcquired?: "inactive" | "AllowTakenAbsencesOnBeingAcquired" | "ForbidTakenAbsencesOnBeingAcquired" | undefined;
                isQuotaExists?: boolean | undefined;
                automaticDescription?: {
                    date: string;
                    previousAmountBeingAcquired: number | null;
                    newAmountBeingAcquired: number;
                    previousAmountAcquired: number | null;
                    newAmountAcquired: number;
                }[] | undefined;
                workUnitType?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                } | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAbsencesReportsDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "moreThanAbsenceAccountAcquired";
                detail: string;
                workUnitType: {
                    reference: number;
                    name: string;
                };
            }[] | undefined;
            expectedValidatorsAllowedForValidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForUnvalidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForReject?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
        };
        data: {
            id: "0";
            type: "absencesreport";
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                validationWorkflow?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                } | undefined;
                absencesAccounts?: {
                    [key: string]: any;
                    data?: {
                        id: string;
                        type: "absencesaccount";
                    }[] | undefined;
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
                workUnitTypesAllowedForAbsences?: {
                    reference: number;
                    name: string;
                }[] | undefined;
                workUnitRate?: number | "notUsed" | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                workUnitRate?: number | undefined;
                calendar?: string | undefined;
                workUnitTypes?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                }[] | undefined;
                absencesReportsQuestions?: {
                    question: string;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "validation";
            attributes?: {
                period?: "JanuaryToDecember" | "FebruaryToJanuary" | "MarchToFebruary" | "AprilToMarch" | "MayToApril" | "JuneToMay" | "JulyToJune" | "AugustToJuly" | "SeptemberToAugust" | "OctoberToSeptember" | "NovemberToOctober" | "DecemberToNovember" | undefined;
                year?: number | undefined;
                amountAcquired?: number | undefined;
                amountAcquiredUsed?: number | undefined;
                amountBeingAcquired?: number | undefined;
                amountAcquiredAsked?: number | undefined;
                amountBeingAcquiredAsked?: number | undefined;
                amountBeingAcquiredUsed?: number | undefined;
                deltaAcquiredAsked?: number | undefined;
                deltaAcquiredUsed?: number | undefined;
                deltaBeingAcquiredAsked?: number | undefined;
                deltaBeingAcquiredUsed?: number | undefined;
                useBeingAcquired?: "inactive" | "AllowTakenAbsencesOnBeingAcquired" | "ForbidTakenAbsencesOnBeingAcquired" | undefined;
                isQuotaExists?: boolean | undefined;
                automaticDescription?: {
                    date: string;
                    previousAmountBeingAcquired: number | null;
                    newAmountBeingAcquired: number;
                    previousAmountAcquired: number | null;
                    newAmountAcquired: number;
                }[] | undefined;
                workUnitType?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                } | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAbsencesReportsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAbsencesReportsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get request of absences basic data
 */
export declare function getAbsencesReportsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "moreThanAbsenceAccountAcquired";
                detail: string;
                workUnitType: {
                    reference: number;
                    name: string;
                };
            }[] | undefined;
            expectedValidatorsAllowedForValidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForUnvalidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForReject?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
        };
        data: {
            id: string;
            type: "absencesreport";
            attributes?: {
                creationDate?: string | undefined;
                updateDate?: string | undefined;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected" | undefined;
                informationComments?: string | undefined;
                absencesPeriods?: {
                    id: string;
                    startDate: string;
                    endDate: string;
                    duration: number;
                    title: string;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                }[] | undefined;
                absencesQuestions?: {
                    question: string;
                    answer: boolean;
                }[] | undefined;
            } | undefined;
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                } | undefined;
                validations?: {
                    data: {
                        id: string;
                        "type": "validation";
                    }[];
                } | undefined;
                validationWorkflow?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                } | undefined;
                absencesAccounts?: {
                    [key: string]: any;
                    data?: {
                        id: string;
                        type: "absencesaccount";
                    }[] | undefined;
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
                workUnitTypesAllowedForAbsences?: {
                    reference: number;
                    name: string;
                }[] | undefined;
                workUnitRate?: number | "notUsed" | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                workUnitRate?: number | undefined;
                calendar?: string | undefined;
                absencesLegals?: string | undefined;
                workUnitTypes?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                }[] | undefined;
                absencesReportsQuestions?: {
                    question: string;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "validation";
            attributes?: {
                date?: string | undefined;
                state?: "waitingForValidation" | "validated" | "rejected" | undefined;
                reason?: string | undefined;
            } | undefined;
            relationships?: {
                realValidator?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                expectedValidator?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "validation";
            attributes?: {
                period?: "JanuaryToDecember" | "FebruaryToJanuary" | "MarchToFebruary" | "AprilToMarch" | "MayToApril" | "JuneToMay" | "JulyToJune" | "AugustToJuly" | "SeptemberToAugust" | "OctoberToSeptember" | "NovemberToOctober" | "DecemberToNovember" | undefined;
                year?: number | undefined;
                amountAcquired?: number | undefined;
                amountAcquiredUsed?: number | undefined;
                amountBeingAcquired?: number | undefined;
                amountAcquiredAsked?: number | undefined;
                amountBeingAcquiredAsked?: number | undefined;
                amountBeingAcquiredUsed?: number | undefined;
                deltaAcquiredAsked?: number | undefined;
                deltaAcquiredUsed?: number | undefined;
                deltaBeingAcquiredAsked?: number | undefined;
                deltaBeingAcquiredUsed?: number | undefined;
                useBeingAcquired?: "inactive" | "AllowTakenAbsencesOnBeingAcquired" | "ForbidTakenAbsencesOnBeingAcquired" | undefined;
                isQuotaExists?: boolean | undefined;
                automaticDescription?: {
                    date: string;
                    previousAmountBeingAcquired: number | null;
                    newAmountBeingAcquired: number;
                    previousAmountAcquired: number | null;
                    newAmountAcquired: number;
                }[] | undefined;
                workUnitType?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                } | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the request of absences
 */
export declare function deleteAbsencesReportsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a request of absences
 */
export declare function putAbsencesReportsById(body?: {
    data: {
        id: string;
        "type": "absencesreport";
        attributes?: {
            informationComments?: string;
            absencesPeriods?: ({
                startDate: string;
                endDate: string;
                duration: number;
                title: string;
                workUnitType: {
                    reference: number;
                };
            } | {
                id: string;
                startDate: string;
                endDate: string;
                duration: number;
                title: string;
                workUnitType: {
                    reference: number;
                };
            })[];
            absencesQuestions?: {
                question: string;
                answer: boolean;
            }[];
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "moreThanAbsenceAccountAcquired";
                detail: string;
                workUnitType: {
                    reference: number;
                    name: string;
                };
            }[] | undefined;
            expectedValidatorsAllowedForValidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForUnvalidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForReject?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
        };
        data: {
            id: string;
            type: "absencesreport";
            attributes?: {
                creationDate?: string | undefined;
                updateDate?: string | undefined;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected" | undefined;
                informationComments?: string | undefined;
                absencesPeriods?: {
                    id: string;
                    startDate: string;
                    endDate: string;
                    duration: number;
                    title: string;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                }[] | undefined;
                absencesQuestions?: {
                    question: string;
                    answer: boolean;
                }[] | undefined;
            } | undefined;
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                } | undefined;
                validations?: {
                    data: {
                        id: string;
                        "type": "validation";
                    }[];
                } | undefined;
                validationWorkflow?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                } | undefined;
                absencesAccounts?: {
                    [key: string]: any;
                    data?: {
                        id: string;
                        type: "absencesaccount";
                    }[] | undefined;
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
                workUnitTypesAllowedForAbsences?: {
                    reference: number;
                    name: string;
                }[] | undefined;
                workUnitRate?: number | "notUsed" | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                workUnitRate?: number | undefined;
                calendar?: string | undefined;
                absencesLegals?: string | undefined;
                workUnitTypes?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                }[] | undefined;
                absencesReportsQuestions?: {
                    question: string;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "validation";
            attributes?: {
                date?: string | undefined;
                state?: "waitingForValidation" | "validated" | "rejected" | undefined;
                reason?: string | undefined;
            } | undefined;
            relationships?: {
                realValidator?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                expectedValidator?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "validation";
            attributes?: {
                period?: "JanuaryToDecember" | "FebruaryToJanuary" | "MarchToFebruary" | "AprilToMarch" | "MayToApril" | "JuneToMay" | "JulyToJune" | "AugustToJuly" | "SeptemberToAugust" | "OctoberToSeptember" | "NovemberToOctober" | "DecemberToNovember" | undefined;
                year?: number | undefined;
                amountAcquired?: number | undefined;
                amountAcquiredUsed?: number | undefined;
                amountBeingAcquired?: number | undefined;
                amountAcquiredAsked?: number | undefined;
                amountBeingAcquiredAsked?: number | undefined;
                amountBeingAcquiredUsed?: number | undefined;
                deltaAcquiredAsked?: number | undefined;
                deltaAcquiredUsed?: number | undefined;
                deltaBeingAcquiredAsked?: number | undefined;
                deltaBeingAcquiredUsed?: number | undefined;
                useBeingAcquired?: "inactive" | "AllowTakenAbsencesOnBeingAcquired" | "ForbidTakenAbsencesOnBeingAcquired" | undefined;
                isQuotaExists?: boolean | undefined;
                automaticDescription?: {
                    date: string;
                    previousAmountBeingAcquired: number | null;
                    newAmountBeingAcquired: number;
                    previousAmountAcquired: number | null;
                    newAmountAcquired: number;
                }[] | undefined;
                workUnitType?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                } | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAbsencesReportsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search accounts
 */
export declare function getAccounts(body?: string, { keywords, userSubscriptions, resourceTypes, roles, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    userSubscriptions?: string[];
    resourceTypes?: number[];
    roles?: number[];
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "account";
            attributes?: {
                firstName?: string;
                lastName?: string;
                typeOf?: number;
                level?: "manager" | "resource" | "administrator";
                login?: string;
                subscription?: "active" | "inactive";
            };
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                role?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "role";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "role";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create an account
 */
export declare function postAccounts(body?: {
    data: {
        "type": "account";
        attributes: {
            civility?: number;
            firstName: string;
            lastName: string;
            subscription?: "active" | "inactive";
            email1: string;
            typeOf?: number;
            login: string;
            password: string;
            dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
            logInOnlyFromThirdParty?: boolean;
            warningForNewDevice?: boolean;
            manageAllowedDevices?: boolean;
            modules?: {
                resources?: boolean;
                subscription?: boolean;
                projects?: boolean;
                opportunities?: boolean;
                candidates?: boolean;
                crm?: boolean;
                activityExpenses?: boolean;
                billing?: boolean;
                products?: boolean;
                purchases?: boolean;
                reporting?: boolean;
                customers?: boolean;
            };
            rights?: {
                main: {
                    shareSavedSearches?: "disabled" | "share" | "edit";
                    showGroupe: boolean;
                    showBuPoles: boolean;
                    showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                    showAllAgencies: "none" | "assignment";
                    showAllPoles: "none" | "assignment";
                    administrator: boolean;
                };
                resources?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                    administrative: "none" | "read" | "readAndWrite";
                };
                opportunities?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    maskData: boolean;
                    maskOnlyContacts: boolean;
                };
                projects?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: any;
                    administrative: any;
                };
                candidates?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                };
                crm?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    editCreationDate: boolean;
                    showAllCompanies: boolean;
                    createCompanies: boolean;
                    createContacts: boolean;
                };
                activityExpenses?: {
                    writeAll: "extended" | "absolute";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                billing?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    editReference?: boolean;
                    editDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    readDocuments: boolean;
                    unlockInvoices: boolean;
                };
                products?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                purchases?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                reporting?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    extraction: boolean;
                    reporting: boolean;
                    distributionCustomers: boolean;
                    projects: boolean;
                    resources: boolean;
                    productionPlans: boolean;
                };
                flags?: {
                    showAll: "personal" | "all";
                };
                actions?: {
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                customers?: {
                    creation: boolean;
                    extraction: boolean;
                    edition: boolean;
                    deletion: boolean;
                    connection: boolean;
                };
            };
        };
        relationships: {
            apps?: {
                data: {
                    id: string;
                    "type": "app";
                }[];
            };
            mainManager?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
            otherAgencies?: {
                data: {
                    id: string;
                    "type": "agency";
                }[];
            };
            otherPoles?: {
                data: {
                    id: string;
                    "type": "pole";
                }[];
            };
            role?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "role";
                };
            };
            advancedAppCalendar?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppMail?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppViewer?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppEmailing?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            resource?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            managers?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            roles?: {
                id: string;
                name?: string | undefined;
                isSecondaryAgenciesAllowed: boolean;
                isSecondaryPolesAllowed: boolean;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "account";
            attributes?: {
                firstName?: string;
                lastName?: string;
                subscription?: "active" | "inactive";
                civility?: number;
                email1?: string;
                typeOf?: number;
                login?: string;
                dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
                logInOnlyFromThirdParty?: boolean;
                warningForNewDevice?: boolean;
                manageAllowedDevices?: boolean;
                modules?: {
                    resources?: boolean;
                    subscription?: boolean;
                    projects?: boolean;
                    opportunities?: boolean;
                    candidates?: boolean;
                    crm?: boolean;
                    activityExpenses?: boolean;
                    billing?: boolean;
                    products?: boolean;
                    purchases?: boolean;
                    reporting?: boolean;
                    customers?: boolean;
                };
                rights?: {
                    main: {
                        shareSavedSearches?: "disabled" | "share" | "edit";
                        showGroupe: boolean;
                        showBuPoles: boolean;
                        showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                        showAllAgencies: "none" | "assignment";
                        showAllPoles: "none" | "assignment";
                        administrator: boolean;
                    };
                    resources?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                        administrative: "none" | "read" | "readAndWrite";
                    };
                    opportunities?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        maskData: boolean;
                        maskOnlyContacts: boolean;
                    };
                    projects?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: any;
                        administrative: any;
                    };
                    candidates?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                    };
                    crm?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        editCreationDate: boolean;
                        showAllCompanies: boolean;
                        createCompanies: boolean;
                        createContacts: boolean;
                    };
                    activityExpenses?: {
                        writeAll: "extended" | "absolute";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    billing?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        editReference?: boolean;
                        editDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        readDocuments: boolean;
                        unlockInvoices: boolean;
                    };
                    products?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    purchases?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    reporting?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        extraction: boolean;
                        reporting: boolean;
                        distributionCustomers: boolean;
                        projects: boolean;
                        resources: boolean;
                        productionPlans: boolean;
                    };
                    flags?: {
                        showAll: "personal" | "all";
                    };
                    actions?: {
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    customers?: {
                        creation: boolean;
                        extraction: boolean;
                        edition: boolean;
                        deletion: boolean;
                        connection: boolean;
                    };
                };
            };
            relationships?: {
                apps?: {
                    data: {
                        id: string;
                        "type": "app";
                    }[];
                };
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                otherAgencies?: {
                    data: {
                        id: string;
                        "type": "agency";
                    }[];
                };
                otherPoles?: {
                    data: {
                        id: string;
                        "type": "pole";
                    }[];
                };
                role?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "role";
                    };
                };
                devices?: {
                    data: {
                        id: string;
                        "type": "device";
                    }[];
                };
                advancedAppCalendar?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppMail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppViewer?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppEmailing?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "app";
            attributes?: {
                name?: string | undefined;
                description?: string | undefined;
                category?: "other" | "calendar" | "mail" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer" | undefined;
                title?: string | undefined;
                visibility?: string | undefined;
                logo?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "device";
            attributes?: {
                isManaged?: boolean | undefined;
                isSessionExists?: boolean | undefined;
                name?: string | undefined;
                browser?: string | undefined;
                authorizationDate?: string | undefined;
                lastLogInDate?: string | undefined;
                internetProtocol?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "role";
            attributes?: {
                name?: string | undefined;
                isSecondaryAgenciesAllowed?: boolean | undefined;
                isSecondaryPolesAllowed?: boolean | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAccounts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAccounts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty account's default basic data
 */
export declare function getAccountsDefault(body?: string, { resource }?: {
    resource?: number;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "account";
            attributes?: {
                civility?: number;
                subscription?: "active" | "inactive";
                login?: string;
                modules?: {
                    resources?: boolean;
                    subscription?: boolean;
                    projects?: boolean;
                    opportunities?: boolean;
                    candidates?: boolean;
                    crm?: boolean;
                    activityExpenses?: boolean;
                    billing?: boolean;
                    products?: boolean;
                    purchases?: boolean;
                    reporting?: boolean;
                    customers?: boolean;
                };
                rights?: {
                    main: {
                        shareSavedSearches?: "disabled" | "share" | "edit";
                        showGroupe: boolean;
                        showBuPoles: boolean;
                        showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                        showAllAgencies: "none" | "assignment";
                        showAllPoles: "none" | "assignment";
                        administrator: boolean;
                    };
                    resources?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                        administrative: "none" | "read" | "readAndWrite";
                    };
                    opportunities?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        maskData: boolean;
                        maskOnlyContacts: boolean;
                    };
                    projects?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: any;
                        administrative: any;
                    };
                    candidates?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                    };
                    crm?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        editCreationDate: boolean;
                        showAllCompanies: boolean;
                        createCompanies: boolean;
                        createContacts: boolean;
                    };
                    activityExpenses?: {
                        writeAll: "extended" | "absolute";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    billing?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        editReference?: boolean;
                        editDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        readDocuments: boolean;
                        unlockInvoices: boolean;
                    };
                    products?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    purchases?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    reporting?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        extraction: boolean;
                        reporting: boolean;
                        distributionCustomers: boolean;
                        projects: boolean;
                        resources: boolean;
                        productionPlans: boolean;
                    };
                    flags?: {
                        showAll: "personal" | "all";
                    };
                    actions?: {
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    customers?: {
                        creation: boolean;
                        extraction: boolean;
                        edition: boolean;
                        deletion: boolean;
                        connection: boolean;
                    };
                };
                typeOf?: number;
                firstName?: string;
                lastName?: string;
                email1?: string;
            };
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAccountsDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "account";
            attributes?: {
                civility?: number;
                subscription?: "active" | "inactive";
                login?: string;
                modules?: {
                    resources?: boolean;
                    subscription?: boolean;
                    projects?: boolean;
                    opportunities?: boolean;
                    candidates?: boolean;
                    crm?: boolean;
                    activityExpenses?: boolean;
                    billing?: boolean;
                    products?: boolean;
                    purchases?: boolean;
                    reporting?: boolean;
                    customers?: boolean;
                };
                rights?: {
                    main: {
                        shareSavedSearches?: "disabled" | "share" | "edit";
                        showGroupe: boolean;
                        showBuPoles: boolean;
                        showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                        showAllAgencies: "none" | "assignment";
                        showAllPoles: "none" | "assignment";
                        administrator: boolean;
                    };
                    resources?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                        administrative: "none" | "read" | "readAndWrite";
                    };
                    opportunities?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        maskData: boolean;
                        maskOnlyContacts: boolean;
                    };
                    projects?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: any;
                        administrative: any;
                    };
                    candidates?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                    };
                    crm?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        editCreationDate: boolean;
                        showAllCompanies: boolean;
                        createCompanies: boolean;
                        createContacts: boolean;
                    };
                    activityExpenses?: {
                        writeAll: "extended" | "absolute";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    billing?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        editReference?: boolean;
                        editDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        readDocuments: boolean;
                        unlockInvoices: boolean;
                    };
                    products?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    purchases?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    reporting?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        extraction: boolean;
                        reporting: boolean;
                        distributionCustomers: boolean;
                        projects: boolean;
                        resources: boolean;
                        productionPlans: boolean;
                    };
                    flags?: {
                        showAll: "personal" | "all";
                    };
                    actions?: {
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    customers?: {
                        creation: boolean;
                        extraction: boolean;
                        edition: boolean;
                        deletion: boolean;
                        connection: boolean;
                    };
                };
                typeOf?: number;
                firstName?: string;
                lastName?: string;
                email1?: string;
            };
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAccountsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAccountsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get account's basic data
 */
export declare function getAccountsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            managers?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            roles?: {
                id: string;
                name?: string | undefined;
                isSecondaryAgenciesAllowed: boolean;
                isSecondaryPolesAllowed: boolean;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "account";
            attributes?: {
                firstName?: string;
                lastName?: string;
                subscription?: "active" | "inactive";
                civility?: number;
                email1?: string;
                typeOf?: number;
                login?: string;
                dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
                logInOnlyFromThirdParty?: boolean;
                warningForNewDevice?: boolean;
                manageAllowedDevices?: boolean;
                modules?: {
                    resources?: boolean;
                    subscription?: boolean;
                    projects?: boolean;
                    opportunities?: boolean;
                    candidates?: boolean;
                    crm?: boolean;
                    activityExpenses?: boolean;
                    billing?: boolean;
                    products?: boolean;
                    purchases?: boolean;
                    reporting?: boolean;
                    customers?: boolean;
                };
                rights?: {
                    main: {
                        shareSavedSearches?: "disabled" | "share" | "edit";
                        showGroupe: boolean;
                        showBuPoles: boolean;
                        showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                        showAllAgencies: "none" | "assignment";
                        showAllPoles: "none" | "assignment";
                        administrator: boolean;
                    };
                    resources?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                        administrative: "none" | "read" | "readAndWrite";
                    };
                    opportunities?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        maskData: boolean;
                        maskOnlyContacts: boolean;
                    };
                    projects?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: any;
                        administrative: any;
                    };
                    candidates?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                    };
                    crm?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        editCreationDate: boolean;
                        showAllCompanies: boolean;
                        createCompanies: boolean;
                        createContacts: boolean;
                    };
                    activityExpenses?: {
                        writeAll: "extended" | "absolute";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    billing?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        editReference?: boolean;
                        editDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        readDocuments: boolean;
                        unlockInvoices: boolean;
                    };
                    products?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    purchases?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    reporting?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        extraction: boolean;
                        reporting: boolean;
                        distributionCustomers: boolean;
                        projects: boolean;
                        resources: boolean;
                        productionPlans: boolean;
                    };
                    flags?: {
                        showAll: "personal" | "all";
                    };
                    actions?: {
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    customers?: {
                        creation: boolean;
                        extraction: boolean;
                        edition: boolean;
                        deletion: boolean;
                        connection: boolean;
                    };
                };
            };
            relationships?: {
                apps?: {
                    data: {
                        id: string;
                        "type": "app";
                    }[];
                };
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                otherAgencies?: {
                    data: {
                        id: string;
                        "type": "agency";
                    }[];
                };
                otherPoles?: {
                    data: {
                        id: string;
                        "type": "pole";
                    }[];
                };
                role?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "role";
                    };
                };
                devices?: {
                    data: {
                        id: string;
                        "type": "device";
                    }[];
                };
                advancedAppCalendar?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppMail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppViewer?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppEmailing?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "app";
            attributes?: {
                name?: string | undefined;
                description?: string | undefined;
                category?: "other" | "calendar" | "mail" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer" | undefined;
                title?: string | undefined;
                visibility?: string | undefined;
                logo?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "device";
            attributes?: {
                isManaged?: boolean | undefined;
                isSessionExists?: boolean | undefined;
                name?: string | undefined;
                browser?: string | undefined;
                authorizationDate?: string | undefined;
                lastLogInDate?: string | undefined;
                internetProtocol?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "role";
            attributes?: {
                name?: string | undefined;
                isSecondaryAgenciesAllowed?: boolean | undefined;
                isSecondaryPolesAllowed?: boolean | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the account
 */
export declare function deleteAccountsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to an account
 */
export declare function putAccountsById(body?: {
    data: {
        id: string;
        "type": "account";
        attributes?: {
            civility?: number;
            firstName?: string;
            lastName?: string;
            subscription?: "active" | "inactive";
            email1?: string;
            typeOf?: number;
            login?: string;
            password?: string;
            dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
            logInOnlyFromThirdParty?: boolean;
            warningForNewDevice?: boolean;
            manageAllowedDevices?: boolean;
            modules?: {
                resources?: boolean;
                subscription?: boolean;
                projects?: boolean;
                opportunities?: boolean;
                candidates?: boolean;
                crm?: boolean;
                activityExpenses?: boolean;
                billing?: boolean;
                products?: boolean;
                purchases?: boolean;
                reporting?: boolean;
                customers?: boolean;
            };
            rights?: {
                main: {
                    shareSavedSearches?: "disabled" | "share" | "edit";
                    showGroupe: boolean;
                    showBuPoles: boolean;
                    showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                    showAllAgencies: "none" | "assignment";
                    showAllPoles: "none" | "assignment";
                    administrator: boolean;
                };
                resources?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                    administrative: "none" | "read" | "readAndWrite";
                };
                opportunities?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    maskData: boolean;
                    maskOnlyContacts: boolean;
                };
                projects?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: any;
                    administrative: any;
                };
                candidates?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                };
                crm?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    editCreationDate: boolean;
                    showAllCompanies: boolean;
                    createCompanies: boolean;
                    createContacts: boolean;
                };
                activityExpenses?: {
                    writeAll: "extended" | "absolute";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                billing?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    editReference?: boolean;
                    editDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    readDocuments: boolean;
                    unlockInvoices: boolean;
                };
                products?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                purchases?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                reporting?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    extraction: boolean;
                    reporting: boolean;
                    distributionCustomers: boolean;
                    projects: boolean;
                    resources: boolean;
                    productionPlans: boolean;
                };
                flags?: {
                    showAll: "personal" | "all";
                };
                actions?: {
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                customers?: {
                    creation: boolean;
                    extraction: boolean;
                    edition: boolean;
                    deletion: boolean;
                    connection: boolean;
                };
            };
        };
        relationships?: {
            apps?: {
                data: {
                    id: string;
                    "type": "app";
                }[];
            };
            mainManager?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
            otherAgencies?: {
                data: {
                    id: string;
                    "type": "agency";
                }[];
            };
            otherPoles?: {
                data: {
                    id: string;
                    "type": "pole";
                }[];
            };
            role?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "role";
                };
            };
            advancedAppCalendar?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppMail?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppViewer?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppEmailing?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            managers?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            roles?: {
                id: string;
                name?: string | undefined;
                isSecondaryAgenciesAllowed: boolean;
                isSecondaryPolesAllowed: boolean;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "account";
            attributes?: {
                firstName?: string;
                lastName?: string;
                subscription?: "active" | "inactive";
                civility?: number;
                email1?: string;
                typeOf?: number;
                login?: string;
                dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
                logInOnlyFromThirdParty?: boolean;
                warningForNewDevice?: boolean;
                manageAllowedDevices?: boolean;
                modules?: {
                    resources?: boolean;
                    subscription?: boolean;
                    projects?: boolean;
                    opportunities?: boolean;
                    candidates?: boolean;
                    crm?: boolean;
                    activityExpenses?: boolean;
                    billing?: boolean;
                    products?: boolean;
                    purchases?: boolean;
                    reporting?: boolean;
                    customers?: boolean;
                };
                rights?: {
                    main: {
                        shareSavedSearches?: "disabled" | "share" | "edit";
                        showGroupe: boolean;
                        showBuPoles: boolean;
                        showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                        showAllAgencies: "none" | "assignment";
                        showAllPoles: "none" | "assignment";
                        administrator: boolean;
                    };
                    resources?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                        administrative: "none" | "read" | "readAndWrite";
                    };
                    opportunities?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        maskData: boolean;
                        maskOnlyContacts: boolean;
                    };
                    projects?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: any;
                        administrative: any;
                    };
                    candidates?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                    };
                    crm?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        editCreationDate: boolean;
                        showAllCompanies: boolean;
                        createCompanies: boolean;
                        createContacts: boolean;
                    };
                    activityExpenses?: {
                        writeAll: "extended" | "absolute";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    billing?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        editReference?: boolean;
                        editDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        readDocuments: boolean;
                        unlockInvoices: boolean;
                    };
                    products?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    purchases?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    reporting?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        extraction: boolean;
                        reporting: boolean;
                        distributionCustomers: boolean;
                        projects: boolean;
                        resources: boolean;
                        productionPlans: boolean;
                    };
                    flags?: {
                        showAll: "personal" | "all";
                    };
                    actions?: {
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    customers?: {
                        creation: boolean;
                        extraction: boolean;
                        edition: boolean;
                        deletion: boolean;
                        connection: boolean;
                    };
                };
            };
            relationships?: {
                apps?: {
                    data: {
                        id: string;
                        "type": "app";
                    }[];
                };
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                otherAgencies?: {
                    data: {
                        id: string;
                        "type": "agency";
                    }[];
                };
                otherPoles?: {
                    data: {
                        id: string;
                        "type": "pole";
                    }[];
                };
                role?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "role";
                    };
                };
                devices?: {
                    data: {
                        id: string;
                        "type": "device";
                    }[];
                };
                advancedAppCalendar?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppMail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppViewer?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppEmailing?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "app";
            attributes?: {
                name?: string | undefined;
                description?: string | undefined;
                category?: "other" | "calendar" | "mail" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer" | undefined;
                title?: string | undefined;
                visibility?: string | undefined;
                logo?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "device";
            attributes?: {
                isManaged?: boolean | undefined;
                isSessionExists?: boolean | undefined;
                name?: string | undefined;
                browser?: string | undefined;
                authorizationDate?: string | undefined;
                lastLogInDate?: string | undefined;
                internetProtocol?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "role";
            attributes?: {
                name?: string | undefined;
                isSecondaryAgenciesAllowed?: boolean | undefined;
                isSecondaryPolesAllowed?: boolean | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAccountsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search actions entity (Resource, Candidate, Project, Opportunity, Order, Invoice, Contact)
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/actions.csv?keywords=COMP100*
 *
 */
export declare function getActions(body?: string, { keywords, actionTypes, states, origins, period, startDate, endDate, flags, onlyVisible, returnRelatedActions, keywordsType, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    actionTypes?: number[];
    states?: string[];
    origins?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    onlyVisible?: boolean;
    returnRelatedActions?: boolean;
    keywordsType?: string;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "action";
            attributes?: {
                startDate?: string;
                creationDate?: string;
                typeOf?: number;
                text?: string;
                numberOfFiles?: number;
                canReadAction?: boolean;
                canWriteAction?: boolean;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
                file?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "document";
                    };
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                };
                relatedActions?: {
                    data: {
                        id: string;
                        "type": "action";
                    }[];
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                email1?: string | undefined;
                phone1?: string | undefined;
                phone2?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                email1?: string | undefined;
                phone1?: string | undefined;
                phone2?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                email1?: string | undefined;
                phone1?: string | undefined;
                phone2?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                phone1?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                number?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "invoice";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                order?: {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                typeOf?: number | undefined;
                canReadAction?: boolean | undefined;
                relationType?: "parent" | "child" | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create an action
 */
export declare function postActions(body?: {
    data: {
        "type": "action";
        attributes: {
            startDate?: string;
            endDate?: string;
            startTimezone?: string;
            endTimezone?: string;
            typeOf: number;
            title?: string;
            description?: string;
            text?: string;
            location?: string;
            guests?: string[];
            synchronizeWithAdvancedAppCalendar?: boolean;
        };
        relationships: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            company?: {
                data: {
                    id: string;
                    "type": "company";
                };
            };
            dependsOn: {
                data: {
                    id: string;
                    "type": "resource";
                };
            } | {
                data: {
                    id: string;
                    "type": "candidate";
                };
            } | {
                data: {
                    id: string;
                    "type": "opportunity";
                };
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            } | {
                data: {
                    id: string;
                    "type": "order";
                };
            } | {
                data: {
                    id: string;
                    "type": "invoice";
                };
            } | {
                data: {
                    id: string;
                    "type": "contact";
                };
            };
        };
    };
}, { positioning, delivery }?: {
    positioning?: number;
    delivery?: number;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "appOauthRedirection" | "appError";
                detail: string;
                oauth_redirection?: string | undefined;
                app_error?: string | undefined;
                app?: {
                    id: string;
                    name: string;
                    code: string;
                } | undefined;
            }[] | undefined;
            timezones?: string[] | undefined;
        };
        data: {
            id: string;
            "type": "action";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                startDate?: string;
                endDate?: string;
                startTimezone?: string;
                endTimezone?: string;
                typeOf?: number;
                title?: string;
                description?: string;
                text?: string;
                location?: string;
                guests?: string[];
                synchronizeWithAdvancedAppCalendar?: boolean;
                relationType?: "parent" | "child";
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
                relatedActions?: {
                    data: {
                        id: string;
                        "type": "action";
                    }[];
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                number?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "invoice";
            attributes?: {
                reference?: string | undefined;
                isCreditNote?: boolean | undefined;
            } | undefined;
            relationships?: {
                order?: {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                typeOf?: number | undefined;
                canReadAction?: boolean | undefined;
                relationType?: "parent" | "child" | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "positioning";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteActions(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putActions(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty action's default basic data
 */
export declare function getActionsDefault(body?: string, { resource, candidate, opportunity, project, order, invoice, contact, company, positioning, delivery }?: {
    resource?: number;
    candidate?: number;
    opportunity?: number;
    project?: number;
    order?: number;
    invoice?: number;
    contact?: number;
    company?: number;
    positioning?: number;
    delivery?: number;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            timezones?: string[] | undefined;
        };
        data: {
            id: "0";
            "type": "action";
            attributes?: {
                startDate?: string;
                typeOf?: number;
                text?: string;
                synchronizeWithAdvancedAppCalendar?: boolean;
                title?: string;
                description?: string;
                endDate?: string;
                location?: string;
                guests?: string[];
                startTimezone?: string;
                endTimezone?: string;
            };
            relationships: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
                positioning?: {
                    data: {
                        id: string;
                        "type": "positioning";
                    };
                };
                delivery?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
                dependsOn: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                phone1?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                number?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "invoice";
            attributes?: {
                reference?: string | undefined;
                isCreditNote?: boolean | undefined;
            } | undefined;
            relationships?: {
                order?: {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "positioning";
            attributes?: {
                canShowDependsOn?: boolean | undefined;
                canShowOpportunity?: boolean | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | undefined;
                opportunity?: {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putActionsDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            timezones?: string[] | undefined;
        };
        data: {
            id: "0";
            "type": "action";
            attributes?: {
                startDate?: string;
                typeOf?: number;
                text?: string;
                synchronizeWithAdvancedAppCalendar?: boolean;
                title?: string;
                description?: string;
                endDate?: string;
                location?: string;
                guests?: string[];
                startTimezone?: string;
                endTimezone?: string;
            };
            relationships: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
                positioning?: {
                    data: {
                        id: string;
                        "type": "positioning";
                    };
                };
                delivery?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
                dependsOn: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                phone1?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                number?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "invoice";
            attributes?: {
                reference?: string | undefined;
                isCreditNote?: boolean | undefined;
            } | undefined;
            relationships?: {
                order?: {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "positioning";
            attributes?: {
                canShowDependsOn?: boolean | undefined;
                canShowOpportunity?: boolean | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | undefined;
                opportunity?: {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteActionsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postActionsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get action's basic data
 */
export declare function getActionsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "appOauthRedirection" | "appError";
                detail: string;
                oauth_redirection?: string | undefined;
                app_error?: string | undefined;
                app?: {
                    id: string;
                    name: string;
                    code: string;
                } | undefined;
            }[] | undefined;
            timezones?: string[] | undefined;
        };
        data: {
            id: string;
            "type": "action";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                startDate?: string;
                endDate?: string;
                startTimezone?: string;
                endTimezone?: string;
                typeOf?: number;
                title?: string;
                description?: string;
                text?: string;
                location?: string;
                guests?: string[];
                synchronizeWithAdvancedAppCalendar?: boolean;
                relationType?: "parent" | "child";
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
                relatedActions?: {
                    data: {
                        id: string;
                        "type": "action";
                    }[];
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                number?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "invoice";
            attributes?: {
                reference?: string | undefined;
                isCreditNote?: boolean | undefined;
            } | undefined;
            relationships?: {
                order?: {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                typeOf?: number | undefined;
                canReadAction?: boolean | undefined;
                relationType?: "parent" | "child" | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "positioning";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the action
 */
export declare function deleteActionsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "appOauthRedirection" | "appError";
                detail: string;
                oauth_redirection?: string | undefined;
                app_error?: string | undefined;
                app?: {
                    id: string;
                    name: string;
                    code: string;
                } | undefined;
            }[] | undefined;
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to an action
 */
export declare function putActionsById(body?: {
    data: {
        id: string;
        "type": "action";
        attributes?: {
            startDate?: string;
            endDate?: string;
            startTimezone?: string;
            endTimezone?: string;
            typeOf?: number;
            title?: string;
            description?: string;
            text?: string;
            location?: string;
            guests?: string[];
            synchronizeWithAdvancedAppCalendar?: boolean;
        };
        relationships?: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, { positioning, delivery, id }?: {
    positioning?: number;
    delivery?: number;
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "appOauthRedirection" | "appError";
                detail: string;
                oauth_redirection?: string | undefined;
                app_error?: string | undefined;
                app?: {
                    id: string;
                    name: string;
                    code: string;
                } | undefined;
            }[] | undefined;
            timezones?: string[] | undefined;
        };
        data: {
            id: string;
            "type": "action";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                startDate?: string;
                endDate?: string;
                startTimezone?: string;
                endTimezone?: string;
                typeOf?: number;
                title?: string;
                description?: string;
                text?: string;
                location?: string;
                guests?: string[];
                synchronizeWithAdvancedAppCalendar?: boolean;
                relationType?: "parent" | "child";
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
                relatedActions?: {
                    data: {
                        id: string;
                        "type": "action";
                    }[];
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                number?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "invoice";
            attributes?: {
                reference?: string | undefined;
                isCreditNote?: boolean | undefined;
            } | undefined;
            relationships?: {
                order?: {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                typeOf?: number | undefined;
                canReadAction?: boolean | undefined;
                relationType?: "parent" | "child" | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "positioning";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postActionsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search templates
 */
export declare function getActionsTemplates(body?: string, { isAdministrator, actionTypes, keywords, dependsOn, dependsOnType, sort, order }?: {
    isAdministrator?: boolean;
    actionTypes?: string[];
    keywords?: string;
    dependsOn?: number;
    dependsOnType?: "candidate" | "resource" | "contact" | "company" | "project" | "opportunity" | "invoice" | "order";
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a template
 */
export declare function postActionsTemplates(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteActionsTemplates(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putActionsTemplates(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get template's data
 */
export declare function getActionsTemplatesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update data related to a template.
 */
export declare function putActionsTemplatesById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the template
 */
export declare function deleteActionsTemplatesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postActionsTemplatesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get customer's administrator basic data
 */
export declare function getAdministrator(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "administrator";
            attributes?: {
                modules?: {
                    downloadCenter?: boolean;
                    intranet?: boolean;
                    resources?: boolean;
                    projects?: boolean;
                    opportunities?: boolean;
                    candidates?: boolean;
                    crm?: boolean;
                    activityExpenses?: boolean;
                    billing?: boolean;
                    products?: boolean;
                    purchases?: boolean;
                };
                clientKey?: string;
                clientToken?: string;
                isBoondManagerAdministrator?: boolean;
                isSandboxActivated?: boolean;
                canCreateSandbox?: boolean;
                groupLogo?: string;
            };
            relationships?: {
                boondmanagerContracts?: {
                    data: {
                        id: string;
                        "type": "boondmanagercontract";
                    }[];
                };
                apps?: {
                    data: {
                        id: string;
                        "type": "app";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "boondmanagercontract";
            attributes?: {
                creationDate?: string | undefined;
                documentLink?: string | undefined;
                validatorDate?: string | undefined;
                validatorFirstName?: string | undefined;
                validatorLastName?: string | undefined;
                validatorFunction?: string | undefined;
                validatorState?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "app";
            attributes?: {
                name?: string | undefined;
                title?: string | undefined;
                description?: string | undefined;
                category?: "other" | "calendar" | "mail" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer" | undefined;
                code?: string | undefined;
                logo?: string | undefined;
                integration?: "module" | "iFrame" | undefined;
                visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources" | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAdministrator(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "administrator";
            attributes?: {
                modules?: {
                    downloadCenter?: boolean;
                    intranet?: boolean;
                    resources?: boolean;
                    projects?: boolean;
                    opportunities?: boolean;
                    candidates?: boolean;
                    crm?: boolean;
                    activityExpenses?: boolean;
                    billing?: boolean;
                    products?: boolean;
                    purchases?: boolean;
                };
                clientKey?: string;
                clientToken?: string;
                isBoondManagerAdministrator?: boolean;
                isSandboxActivated?: boolean;
                canCreateSandbox?: boolean;
                groupLogo?: string;
            };
            relationships?: {
                boondmanagerContracts?: {
                    data: {
                        id: string;
                        "type": "boondmanagercontract";
                    }[];
                };
                apps?: {
                    data: {
                        id: string;
                        "type": "app";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "boondmanagercontract";
            attributes?: {
                creationDate?: string | undefined;
                documentLink?: string | undefined;
                validatorDate?: string | undefined;
                validatorFirstName?: string | undefined;
                validatorLastName?: string | undefined;
                validatorFunction?: string | undefined;
                validatorState?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "app";
            attributes?: {
                name?: string | undefined;
                title?: string | undefined;
                description?: string | undefined;
                category?: "other" | "calendar" | "mail" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer" | undefined;
                code?: string | undefined;
                logo?: string | undefined;
                integration?: "module" | "iFrame" | undefined;
                visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources" | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAdministrator(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAdministrator(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search advantages
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/advantages.csv?keywords=COMP100*
 *
 */
export declare function getAdvantages(body?: string, { keywords, resourceTypes, resourceStates, period, startDate, endDate, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    resourceTypes?: number[];
    resourceStates?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "advantage";
            attributes?: {
                date?: string;
                advantageType?: {
                    reference: number;
                    name: string;
                };
                quantity?: number;
                costPaid?: number;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create an advantage
 */
export declare function postAdvantages(body?: {
    data: {
        "type": "advantage";
        attributes?: {
            date?: string;
            returnDate?: string;
            advantageType: {
                reference: number;
                frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                participationQuota: number;
                agencyQuota: number;
                employeeQuota: number;
            };
            quantity?: number;
            participationAmount?: number;
            agencyAmount?: number;
            employeeAmount?: number;
            informationComments?: string;
            currency?: number;
            currencyAgency?: number;
            exchangeRate?: number;
            exchangeRateAgency?: number;
        };
        relationships: {
            resource: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            contract?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "contract";
                };
            };
            project?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            };
            delivery?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "delivery";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "advantage";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                date?: string;
                returnDate?: string;
                advantageType?: {
                    reference: number;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                };
                quantity?: number;
                participationAmount?: number;
                agencyAmount?: number;
                employeeAmount?: number;
                costPaid?: number;
                costCharged?: number;
                informationComments?: string;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                contract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                monthlySalary?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            relationships?: {
                contract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                monthlySalary?: number | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAdvantages(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAdvantages(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty advantage's default basic data
 */
export declare function getAdvantagesDefault(resource: number, body?: string, { contract, project, delivery }?: {
    contract?: number;
    project?: number;
    delivery?: number;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "advantage";
            attributes?: {
                advantageType?: {
                    reference: number;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                };
                participationAmount?: number;
                agencyAmount?: number;
                employeeAmount?: number;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                contract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                monthlySalary?: number | undefined;
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[] | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAdvantagesDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "advantage";
            attributes?: {
                advantageType?: {
                    reference: number;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                };
                participationAmount?: number;
                agencyAmount?: number;
                employeeAmount?: number;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                contract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                monthlySalary?: number | undefined;
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[] | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAdvantagesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAdvantagesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get advantage's basic data
 */
export declare function getAdvantagesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "advantage";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                date?: string;
                returnDate?: string;
                advantageType?: {
                    reference: number;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                };
                quantity?: number;
                participationAmount?: number;
                agencyAmount?: number;
                employeeAmount?: number;
                costPaid?: number;
                costCharged?: number;
                informationComments?: string;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                contract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                monthlySalary?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            relationships?: {
                contract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                monthlySalary?: number | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the advantage
 */
export declare function deleteAdvantagesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to an advantage
 */
export declare function putAdvantagesById(body?: {
    data: {
        id: string;
        "type": "advantage";
        attributes?: {
            date?: string;
            returnDate?: string;
            quantity?: number;
            participationAmount?: number;
            agencyAmount?: number;
            employeeAmount?: number;
            informationComments?: string;
            currency?: number;
            currencyAgency?: number;
            exchangeRate?: number;
            exchangeRateAgency?: number;
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "advantage";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                date?: string;
                returnDate?: string;
                advantageType?: {
                    reference: number;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                };
                quantity?: number;
                participationAmount?: number;
                agencyAmount?: number;
                employeeAmount?: number;
                costPaid?: number;
                costCharged?: number;
                informationComments?: string;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                contract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                monthlySalary?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            relationships?: {
                contract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                monthlySalary?: number | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAdvantagesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search agencies
 */
export declare function getAgencies(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "agency";
            attributes?: {
                name?: string;
                calendar?: string;
                currency?: number;
                numberOfWorkingDays?: number;
                chargeFactor?: number;
                vatNumber?: string;
                address?: string;
                postcode?: string;
                town?: string;
                country?: string;
                staff?: number;
                state?: boolean;
                workUnitRate?: number;
                workUnitRateOnProjectsAndOpportunities?: number;
            };
        }[];
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create an agency
 */
export declare function postAgencies(body?: {
    data: {
        "type": "agency";
        attributes: {
            name: string;
            email1?: string;
            phone1?: string;
            address?: string;
            postcode?: string;
            town?: string;
            country?: string;
            vatNumber?: string;
            registrationNumber?: string;
            legalStatus?: string;
            registeredOffice?: string;
            apeCode?: string;
            numberOfWorkingDays?: number;
            chargeFactor?: number;
            currency?: number;
            exchangeRate?: number;
            workUnitRate?: number;
            calendar?: string;
            state?: boolean;
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            timezones?: string[] | undefined;
        };
        data: {
            id: string;
            "type": "agency";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                email1?: string;
                phone1?: string;
                address?: string;
                postcode?: string;
                town?: string;
                country?: string;
                vatNumber?: string;
                registrationNumber?: string;
                legalStatus?: string;
                registeredOffice?: string;
                apeCode?: string;
                numberOfWorkingDays?: number;
                chargeFactor?: number;
                currency?: number;
                exchangeRate?: number;
                workUnitRate?: number;
                workUnitRateOnProjectsAndOpportunities?: number;
                calendar?: string;
                timezone?: string;
                state?: boolean;
            };
            relationships?: {
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAgencies(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAgencies(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty agency's default information data
 */
export declare function getAgenciesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            timezones?: string[] | undefined;
        };
        data: {
            id: "0";
            "type": "agency";
            attributes?: {
                country?: string;
                currency?: number;
                exchangeRate?: number;
                calendar?: string;
                numberOfWorkingDays?: number;
                chargeFactor?: number;
                workUnitRate?: number;
                workUnitRateOnProjectsAndOpportunities?: number;
                timezone?: string;
                state?: boolean;
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAgenciesDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            timezones?: string[] | undefined;
        };
        data: {
            id: "0";
            "type": "agency";
            attributes?: {
                country?: string;
                currency?: number;
                exchangeRate?: number;
                calendar?: string;
                numberOfWorkingDays?: number;
                chargeFactor?: number;
                workUnitRate?: number;
                workUnitRateOnProjectsAndOpportunities?: number;
                timezone?: string;
                state?: boolean;
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAgenciesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAgenciesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get agency's basic data
 */
export declare function getAgenciesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "agency";
            attributes?: {
                name?: string;
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the agency
 */
export declare function deleteAgenciesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAgenciesById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "agency";
            attributes?: {
                name?: string;
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAgenciesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get the list of assignments availables for updating
 */
export declare function getApplicationAssignments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "assignments";
            relationships?: {
                mainManagers?: {
                    [key: string]: any;
                } | undefined;
                hrManagers?: {
                    [key: string]: any;
                } | undefined;
                validators?: {
                    [key: string]: any;
                } | undefined;
                influencers?: {
                    [key: string]: any;
                } | undefined;
                agencies?: {
                    [key: string]: any;
                } | undefined;
                poles?: {
                    [key: string]: any;
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteApplicationAssignments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postApplicationAssignments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putApplicationAssignments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get current user's data
 */
export declare function getApplicationCurrentUser(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "currentuser";
            attributes?: {
                firstName?: string;
                lastName?: string;
                thumbnail?: string;
                email1?: string;
                phone1?: string;
                language?: "fr" | "en";
                login?: string;
                level?: "manager" | "resource" | "administrator";
                userToken?: string;
                modules?: {
                    downloadCenter?: boolean;
                    absencesAccounts?: boolean;
                    flags?: boolean;
                    resources?: boolean;
                    accounts?: boolean;
                    agencies?: boolean;
                    businessUnits?: boolean;
                    poles?: boolean;
                    marketplace?: boolean;
                    apps?: boolean;
                    subscription?: boolean;
                    projects?: boolean;
                    opportunities?: boolean;
                    candidates?: boolean;
                    crm?: boolean;
                    activityExpenses?: boolean;
                    billing?: boolean;
                    products?: boolean;
                    purchases?: boolean;
                    reporting?: boolean;
                    actions?: boolean;
                    dashboard?: boolean;
                    architecture?: boolean;
                    customers?: boolean;
                    positionings?: boolean;
                    activityIntranet?: boolean;
                    logs?: boolean;
                };
                navigationBar?: (("resources" | "candidates" | "crm" | "opportunities" | "products" | "projects" | "purchases" | "positionings" | "activityExpenses" | "billing" | "reporting" | "actions" | "dashboard" | "resourceTimesReports" | "resourceAbsencesReports" | "resourceExpensesReports" | "resourceProjects" | "customers") | {
                    id: string;
                    "type": "app";
                })[];
                rights?: {
                    main: {
                        shareSavedSearches?: "disabled" | "share" | "edit";
                        showGroupe: boolean;
                        showBuPoles: boolean;
                        showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                        showAllAgencies: "none" | "assignment";
                        showAllPoles: "none" | "assignment";
                        administrator: boolean;
                    };
                    resources?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                        administrative: "none" | "read" | "readAndWrite";
                    };
                    opportunities?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        maskData: boolean;
                        maskOnlyContacts: boolean;
                    };
                    projects?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: any;
                        administrative: any;
                    };
                    candidates?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                    };
                    crm?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        editCreationDate: boolean;
                        showAllCompanies: boolean;
                        createCompanies: boolean;
                        createContacts: boolean;
                    };
                    activityExpenses?: {
                        writeAll: "extended" | "absolute";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    billing?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        editReference?: boolean;
                        editDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        readDocuments: boolean;
                        unlockInvoices: boolean;
                    };
                    products?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    purchases?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    reporting?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        extraction: boolean;
                        reporting: boolean;
                        distributionCustomers: boolean;
                        projects: boolean;
                        resources: boolean;
                        productionPlans: boolean;
                    };
                    flags?: {
                        showAll: "personal" | "all";
                    };
                    actions?: {
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    customers?: {
                        creation: boolean;
                        extraction: boolean;
                        edition: boolean;
                        deletion: boolean;
                        connection: boolean;
                    };
                };
                lastLogInDate?: string;
                homepage?: "resources" | "candidates" | "crm" | "opportunities" | "products" | "projects" | "purchases" | "positionings" | "activityExpenses" | "billing" | "reporting" | "actions" | "dashboard" | "apps";
                theme?: "light" | "dark";
                nodeSignedRequest?: string;
                nodeUrl?: string;
                timezone?: string;
                narrowPerimeter?: boolean;
                defaultSearchSaving?: boolean;
                commercialSynthesisScorecards?: {
                    reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                    typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                    dictionaryId?: number;
                }[];
                humanResourcesSynthesisScorecards?: {
                    reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                    typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                    dictionaryId?: number;
                }[];
                recruitmentSynthesisScorecards?: {
                    reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                    typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                    dictionaryId?: number;
                }[];
                activityExpensesSynthesisScorecards?: {
                    reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                    typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                    dictionaryId?: number;
                }[];
                billingSynthesisScorecards?: {
                    reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                    typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                    dictionaryId?: number;
                }[];
                globalSynthesisScorecards?: {
                    reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                    typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                    dictionaryId?: number;
                }[];
                companiesScorecards?: {
                    reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                    typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                    dictionaryId?: number;
                }[];
                projectsScorecards?: {
                    reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                    typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                    dictionaryId?: number;
                }[];
                resourcesScorecards?: {
                    reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                    typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                    dictionaryId?: number;
                }[];
            };
            relationships?: {
                agency?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                otherAgencies?: {
                    data: {
                        id: string;
                        "type": "agency";
                    }[];
                };
                otherPoles?: {
                    data: {
                        id: string;
                        "type": "pole";
                    }[];
                };
                apps?: {
                    data: {
                        id: string;
                        "type": "app";
                    }[];
                };
                advancedAppTemplates?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppCertification?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppCalendar?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppMail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppViewer?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppEmailing?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                role?: {
                    data: {
                        id: string;
                        "type": "role";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "agency";
            attributes?: {
                code?: string | undefined;
                name?: string | undefined;
                group?: string | undefined;
                groupLogo?: string | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                jDay?: 2 | 1 | 22 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | "actualDay" | "lastDayOfPreviousMonth" | 23 | 24 | 25 | 26 | 27 | 28 | undefined;
                allowResourcesToViewAbsencesAccounts?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "app";
            attributes?: {
                name?: string | undefined;
                title?: string | undefined;
                description?: string | undefined;
                category?: "other" | "calendar" | "mail" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer" | undefined;
                code?: string | undefined;
                integration?: "module" | "iFrame" | undefined;
                url?: string | undefined;
                logo?: string | undefined;
                buttonsSetting?: {
                    page: "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries-inactivities" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absences-reports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries-groupments" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absences-reports" | "expenses-reports" | "times-reports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources";
                    title: string;
                    function: string;
                }[] | undefined;
                iFramesSetting?: {
                    page: "dashboard" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                    scrolling: boolean;
                    height: number;
                    isHalfWidth: boolean;
                    function: string;
                }[] | undefined;
                triggersSetting?: {
                    page: "actions/@id" | "candidates/@id" | "resources/@id" | "products/@id" | "contracts/@id" | "advantages/@id" | "opportunities/@id" | "projects/@id" | "positionings/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "times-reports/@id" | "expenses-reports/@id" | "absences-reports/@id" | "purchases/@id" | "payments/@id" | "orders/@id" | "invoices/@id" | "contacts/@id" | "companies/@id";
                    event: "create" | "update" | "delete";
                    function: string;
                }[] | undefined;
                isRefreshTokenValidated?: boolean | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteApplicationCurrentUser(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postApplicationCurrentUser(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putApplicationCurrentUser(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get the specific translations
 */
export declare function getApplicationDictionary(body?: string, { mergeAllLanguages, language }?: {
    mergeAllLanguages?: boolean;
    language?: "fr" | "en";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            setting?: {
                action?: {
                    forceMultiCreation?: boolean | undefined;
                    sort?: boolean | undefined;
                    contact?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    candidate?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    resource?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    opportunity?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    project?: {
                        id: number;
                        value?: string | undefined;
                        collaborative?: boolean | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    order?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    invoice?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                state?: {
                    sort?: boolean | undefined;
                    candidate?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    resource?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    product?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    opportunity?: {
                        id: number;
                        value?: string | undefined;
                        active: boolean;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    positioning?: {
                        id: number;
                        value?: string | undefined;
                        active: boolean;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    project?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    delivery?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    contact?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    company?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    order?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    invoice?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    purchase?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    payment?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    quotation?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                displayedColumns?: {
                    opportunity?: ("origin" | "state" | "title" | "startDate" | "agency" | "pole" | "contact" | "turnoverWeightedExcludingTax" | "mainManager" | "expertiseArea" | "creationDate" | "numberOfActivePositionings" | "place" | "duration" | "closingDate" | "answerDate" | "activityAreas" | "tools" | "dueDate" | "hrManager" | "turnoverEstimatedExcludingTax" | "estimatesExcludingTax")[] | undefined;
                } | undefined;
                cache?: {
                    reporting?: {
                        state?: boolean | undefined;
                        duration?: number | undefined;
                    } | undefined;
                } | undefined;
                additionalTurnoverTypes?: {
                    state?: boolean | undefined;
                } | undefined;
                timezone?: "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Fort_Nelson" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Colombo" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kathmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qyzylorda" | "Asia/Riyadh" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ulaanbaatar" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faroe" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/Perth" | "Australia/Sydney" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Wake" | "Pacific/Wallis" | "UTC" | undefined;
                typeOf?: {
                    contract?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    purchase?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    resource?: {
                        id: number;
                        value?: string | undefined;
                        isExternal?: boolean | undefined;
                        isStructure?: boolean | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    activity?: {
                        id: 0 | 1 | 2 | 3 | 4;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    delivery?: {
                        id: number;
                        scenario?: 0 | 2 | 1 | 3 | undefined;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    project?: {
                        id: number;
                        mode: 1 | 2 | 3 | 4;
                        value?: string | undefined;
                        isInternal: boolean;
                        activityType?: "day" | "workUnit" | undefined;
                        scheduleProductionTurnover: boolean;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    subscription?: {
                        id: 0 | 1 | 2 | 3 | 4;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    employee?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    workingTime?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    additionalTurnover?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                contractEndReason?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                currency?: {
                    id: number;
                    value?: string | undefined;
                    symbol?: string | undefined;
                    iso?: "EUR" | "USD" | "GBP" | "AFN" | "ALL" | "DZD" | "AOA" | "XCD" | "ARS" | "AMD" | "AWG" | "AZN" | "BSD" | "BHD" | "BDT" | "BBD" | "BYN" | "BZD" | "XOF" | "BMD" | "INR" | "BTN" | "BOB" | "BAM" | "BWP" | "NOK" | "BRL" | "BND" | "BGN" | "BIF" | "CVE" | "KHR" | "CAD" | "KYD" | "CLP" | "CLF" | "CNY" | "COP" | "KMF" | "CDF" | "NZD" | "CRC" | "HRK" | "CUP" | "ANG" | "CZK" | "DKK" | "DJF" | "DOP" | "EGP" | "SVC" | "ERN" | "SZL" | "ETB" | "FKP" | "FJD" | "XPF" | "GMD" | "GEL" | "GHS" | "GIP" | "GTQ" | "GNF" | "GYD" | "HTG" | "HNL" | "HKD" | "HUF" | "ISK" | "IDR" | "IRR" | "IQD" | "ILS" | "JMD" | "JPY" | "JOD" | "KZT" | "KES" | "KPW" | "KRW" | "KWD" | "KGS" | "LAK" | "LBP" | "LSL" | "ZAR" | "LRD" | "LYD" | "CHF" | "MOP" | "MKD" | "MGA" | "MWK" | "MYR" | "MVR" | "MRU" | "MUR" | "MXN" | "MDL" | "MNT" | "MAD" | "MZN" | "MMK" | "NAD" | "NPR" | "NIO" | "NGN" | "AUD" | "OMR" | "PKR" | "PAB" | "PGK" | "PYG" | "PEN" | "PHP" | "PLN" | "QAR" | "RON" | "RUB" | "RWF" | "SHP" | "WST" | "STN" | "SAR" | "RSD" | "SCR" | "SLL" | "SGD" | "XSU" | "SBD" | "SOS" | "SSP" | "LKR" | "SDG" | "SRD" | "SEK" | "SYP" | "TWD" | "TJS" | "TZS" | "THB" | "TOP" | "TTD" | "TND" | "TRY" | "TMT" | "UGX" | "UAH" | "AED" | "UYU" | "UZS" | "VUV" | "VES" | "VND" | "YER" | "ZMW" | "ZWL" | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                calendar?: {
                    id: string;
                    value?: string | undefined;
                    iso?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                taxRate?: {
                    id: number;
                    rate: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                paymentTerm?: {
                    id: number;
                    value: 0 | 1 | 2 | 3 | 4;
                    x?: number | undefined;
                    y?: number | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                paymentMethod?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                sendingMode?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                defaultOpportunityTypeCreated?: number | undefined;
                defaultPositioningSearchModule?: "resources" | "candidates" | undefined;
                filterPositioningSearchModule?: boolean | undefined;
                smoothAdditionalData?: boolean | undefined;
                profitabilityMethodOfCalculating?: "marginRate" | "brandRate" | undefined;
                showOwnOrderReference?: boolean | undefined;
                defaultMail?: {
                    quotation?: {
                        object: string;
                        body: string;
                    } | undefined;
                    invoice?: {
                        object: string;
                        body: string;
                    } | undefined;
                    deliveryOrder?: {
                        object: string;
                        body: string;
                    } | undefined;
                    timesReports?: {
                        object: string;
                        body: string;
                    } | undefined;
                    expensesReports?: {
                        object: string;
                        body: string;
                    } | undefined;
                    timesReportsAndExpensesReports?: {
                        object: string;
                        body: string;
                    } | undefined;
                    waitingForValidationTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    waitingForValidationExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    waitingForValidationAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    validatedTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    validatedExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    validatedAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    rejectedTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    rejectedExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    rejectedAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    refusedTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    refusedExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    refusedAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    removalAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    signatureDocumentRequest?: {
                        object: string;
                        body: string;
                    } | undefined;
                    signatureDocumentReminder?: {
                        object: string;
                        body: string;
                    } | undefined;
                    signatureDocumentValidation?: {
                        object: string;
                        body: string;
                    } | undefined;
                } | undefined;
                showLogoCompany?: boolean | undefined;
                markdownTextDashboard?: string | undefined;
                experience?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                training?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                tool?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                defaultAction?: {
                    pushResource?: string | undefined;
                    pushCandidate?: string | undefined;
                    pushContact?: string | undefined;
                } | undefined;
                activityArea?: {
                    id: string;
                    value?: string | undefined;
                    option?: {
                        id: string;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                expertiseArea?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                duration?: {
                    id: number | number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                languageSpoken?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                languageLevel?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                availability?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                evaluation?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                mobilityArea?: {
                    id: string;
                    value?: string | undefined;
                    option?: {
                        id: string;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                origin?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                classification?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                source?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                criteria?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                situation?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                civility?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                defaultNationality?: string | undefined;
                itemInvoice?: {
                    monthly?: {
                        id: "1" | 13 | 14 | "2" | 23 | 24 | "3" | "4";
                        value: string;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    schedule?: {
                        id: "1" | "2" | "3" | "4";
                        value: string;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                deliveryOrder?: {
                    id: number;
                    value?: string | undefined;
                    maskSignatureBlock: boolean;
                    insert?: {
                        value?: string | undefined;
                        optionLength?: number | undefined;
                        option?: string[] | undefined;
                    }[] | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                sharingEntity?: {
                    credentials?: {
                        object: string;
                        body: string;
                    } | undefined;
                    account?: {
                        object: string;
                        body: string;
                    } | undefined;
                    resource?: {
                        object: string;
                        body: string;
                    } | undefined;
                    opportunity?: {
                        object: string;
                        body: string;
                    } | undefined;
                    candidate?: {
                        object: string;
                        body: string;
                    } | undefined;
                    contact?: {
                        object: string;
                        body: string;
                    } | undefined;
                    company?: {
                        object: string;
                        body: string;
                    } | undefined;
                    project?: {
                        object: string;
                        body: string;
                    } | undefined;
                    product?: {
                        object: string;
                        body: string;
                    } | undefined;
                    purchase?: {
                        object: string;
                        body: string;
                    } | undefined;
                    payment?: {
                        object: string;
                        body: string;
                    } | undefined;
                    positioning?: {
                        object: string;
                        body: string;
                    } | undefined;
                    delivery?: {
                        object: string;
                        body: string;
                    } | undefined;
                    groupment?: {
                        object: string;
                        body: string;
                    } | undefined;
                    inactivity?: {
                        object: string;
                        body: string;
                    } | undefined;
                    contract?: {
                        object: string;
                        body: string;
                    } | undefined;
                    advantage?: {
                        object: string;
                        body: string;
                    } | undefined;
                    invoice?: {
                        object: string;
                        body: string;
                    } | undefined;
                    order?: {
                        object: string;
                        body: string;
                    } | undefined;
                    timesheet?: {
                        object: string;
                        body: string;
                    } | undefined;
                    expenses?: {
                        object: string;
                        body: string;
                    } | undefined;
                    absencesRequest?: {
                        object: string;
                        body: string;
                    } | undefined;
                    action?: {
                        object: string;
                        body: string;
                    } | undefined;
                    quotation?: {
                        [key: string]: any;
                        object?: string | undefined;
                        body?: string | undefined;
                    } | undefined;
                } | undefined;
            } | undefined;
            country?: {
                [key: string]: any;
                id: string;
                iso?: string | undefined;
                value?: string | undefined;
            }[] | undefined;
            nationality?: {
                [key: string]: any;
                id: string;
                value?: string | undefined;
            }[] | undefined;
            lastBackupDate?: string | undefined;
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update the specific translations
 */
export declare function putApplicationDictionary(body?: {
    data?: {
        setting?: {
            action?: {
                forceMultiCreation?: boolean;
                sort?: boolean;
                contact?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                candidate?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                resource?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                opportunity?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                project?: {
                    id: number;
                    value?: string;
                    collaborative?: boolean;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                order?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                invoice?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
            };
            state?: {
                sort?: boolean;
                candidate?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                resource?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                product?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                opportunity?: {
                    id: number;
                    value?: string;
                    active: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                positioning?: {
                    id: number;
                    value?: string;
                    active: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                project?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                delivery?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                contact?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                company?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                order?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                invoice?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                purchase?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                payment?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                quotation?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
            };
            displayedColumns?: {
                opportunity?: ("creationDate" | "title" | "contact" | "state" | "numberOfActivePositionings" | "place" | "startDate" | "duration" | "turnoverWeightedExcludingTax" | "mainManager" | "closingDate" | "answerDate" | "activityAreas" | "expertiseArea" | "tools" | "dueDate" | "origin" | "hrManager" | "pole" | "agency" | "turnoverEstimatedExcludingTax" | "estimatesExcludingTax")[];
            };
            cache?: {
                reporting?: {
                    state?: boolean;
                    duration?: number;
                };
            };
            additionalTurnoverTypes?: {
                state?: boolean;
            };
            timezone?: "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Fort_Nelson" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Colombo" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kathmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qyzylorda" | "Asia/Riyadh" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ulaanbaatar" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faroe" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/Perth" | "Australia/Sydney" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Wake" | "Pacific/Wallis" | "UTC";
            typeOf?: {
                contract?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                purchase?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                resource?: {
                    id: number;
                    value?: string;
                    isExternal?: boolean;
                    isStructure?: boolean;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                activity?: {
                    id: 0 | 1 | 2 | 3 | 4;
                    value?: string;
                    isEnabled?: boolean;
                }[];
                delivery?: {
                    id: number;
                    scenario?: 0 | 1 | 2 | 3;
                    value?: string;
                    isEnabled?: boolean;
                }[];
                project?: {
                    id: number;
                    mode: 1 | 2 | 3 | 4;
                    value?: string;
                    isInternal: boolean;
                    activityType?: "workUnit" | "day";
                    scheduleProductionTurnover: boolean;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                subscription?: {
                    id: 0 | 1 | 2 | 3 | 4;
                    value?: string;
                    isEnabled?: boolean;
                }[];
                employee?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                workingTime?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                additionalTurnover?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
            };
            contractEndReason?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            currency?: {
                id: number;
                value?: string;
                "symbol"?: string;
                iso?: "EUR" | "USD" | "GBP" | "AFN" | "ALL" | "DZD" | "AOA" | "XCD" | "ARS" | "AMD" | "AWG" | "AZN" | "BSD" | "BHD" | "BDT" | "BBD" | "BYN" | "BZD" | "XOF" | "BMD" | "INR" | "BTN" | "BOB" | "BAM" | "BWP" | "NOK" | "BRL" | "BND" | "BGN" | "BIF" | "CVE" | "KHR" | "CAD" | "KYD" | "CLP" | "CLF" | "CNY" | "COP" | "KMF" | "CDF" | "NZD" | "CRC" | "HRK" | "CUP" | "ANG" | "CZK" | "DKK" | "DJF" | "DOP" | "EGP" | "SVC" | "ERN" | "SZL" | "ETB" | "FKP" | "FJD" | "XPF" | "GMD" | "GEL" | "GHS" | "GIP" | "GTQ" | "GNF" | "GYD" | "HTG" | "HNL" | "HKD" | "HUF" | "ISK" | "IDR" | "IRR" | "IQD" | "ILS" | "JMD" | "JPY" | "JOD" | "KZT" | "KES" | "KPW" | "KRW" | "KWD" | "KGS" | "LAK" | "LBP" | "LSL" | "ZAR" | "LRD" | "LYD" | "CHF" | "MOP" | "MKD" | "MGA" | "MWK" | "MYR" | "MVR" | "MRU" | "MUR" | "MXN" | "MDL" | "MNT" | "MAD" | "MZN" | "MMK" | "NAD" | "NPR" | "NIO" | "NGN" | "AUD" | "OMR" | "PKR" | "PAB" | "PGK" | "PYG" | "PEN" | "PHP" | "PLN" | "QAR" | "RON" | "RUB" | "RWF" | "SHP" | "WST" | "STN" | "SAR" | "RSD" | "SCR" | "SLL" | "SGD" | "XSU" | "SBD" | "SOS" | "SSP" | "LKR" | "SDG" | "SRD" | "SEK" | "SYP" | "TWD" | "TJS" | "TZS" | "THB" | "TOP" | "TTD" | "TND" | "TRY" | "TMT" | "UGX" | "UAH" | "AED" | "UYU" | "UZS" | "VUV" | "VES" | "VND" | "YER" | "ZMW" | "ZWL";
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            calendar?: {
                id: string;
                value?: string;
                iso?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            taxRate?: {
                id: number;
                rate: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            paymentTerm?: {
                id: number;
                value: 0 | 1 | 2 | 3 | 4;
                x?: number;
                y?: number;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            paymentMethod?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            sendingMode?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            defaultOpportunityTypeCreated?: number;
            defaultPositioningSearchModule?: "resources" | "candidates";
            filterPositioningSearchModule?: boolean;
            smoothAdditionalData?: boolean;
            profitabilityMethodOfCalculating?: "marginRate" | "brandRate";
            showOwnOrderReference?: boolean;
            defaultMail?: {
                quotation?: {
                    "object": string;
                    body: string;
                };
                invoice?: {
                    "object": string;
                    body: string;
                };
                deliveryOrder?: {
                    "object": string;
                    body: string;
                };
                timesReports?: {
                    "object": string;
                    body: string;
                };
                expensesReports?: {
                    "object": string;
                    body: string;
                };
                timesReportsAndExpensesReports?: {
                    "object": string;
                    body: string;
                };
                waitingForValidationTimesReport?: {
                    "object": string;
                    body: string;
                };
                waitingForValidationExpensesReport?: {
                    "object": string;
                    body: string;
                };
                waitingForValidationAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                validatedTimesReport?: {
                    "object": string;
                    body: string;
                };
                validatedExpensesReport?: {
                    "object": string;
                    body: string;
                };
                validatedAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                rejectedTimesReport?: {
                    "object": string;
                    body: string;
                };
                rejectedExpensesReport?: {
                    "object": string;
                    body: string;
                };
                rejectedAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                refusedTimesReport?: {
                    "object": string;
                    body: string;
                };
                refusedExpensesReport?: {
                    "object": string;
                    body: string;
                };
                refusedAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                removalAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                signatureDocumentRequest?: {
                    "object": string;
                    body: string;
                };
                signatureDocumentReminder?: {
                    "object": string;
                    body: string;
                };
                signatureDocumentValidation?: {
                    "object": string;
                    body: string;
                };
            };
            showLogoCompany?: boolean;
            markdownTextDashboard?: string;
            experience?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            training?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            tool?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            defaultAction?: {
                pushResource?: string;
                pushCandidate?: string;
                pushContact?: string;
            };
            activityArea?: {
                id: string;
                value?: string;
                option?: {
                    id: string;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            expertiseArea?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            duration?: {
                id: number | number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            languageSpoken?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            languageLevel?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            availability?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            evaluation?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            mobilityArea?: {
                id: string;
                value?: string;
                option?: {
                    id: string;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            origin?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            classification?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            source?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            criteria?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            situation?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            civility?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            defaultNationality?: string;
            itemInvoice?: {
                monthly?: {
                    id: "1" | 13 | 14 | "2" | 23 | 24 | "3" | "4";
                    value: string;
                    isEnabled?: boolean;
                }[];
                schedule?: {
                    id: "1" | "2" | "3" | "4";
                    value: string;
                    isEnabled?: boolean;
                }[];
            };
            deliveryOrder?: {
                id: number;
                value?: string;
                maskSignatureBlock: boolean;
                insert?: {
                    value?: string;
                    optionLength?: number;
                    option?: string[];
                }[];
                isEnabled?: boolean;
            }[];
            sharingEntity?: {
                credentials?: {
                    "object": string;
                    body: string;
                };
                account?: {
                    "object": string;
                    body: string;
                };
                resource?: {
                    "object": string;
                    body: string;
                };
                opportunity?: {
                    "object": string;
                    body: string;
                };
                candidate?: {
                    "object": string;
                    body: string;
                };
                contact?: {
                    "object": string;
                    body: string;
                };
                company?: {
                    "object": string;
                    body: string;
                };
                project?: {
                    "object": string;
                    body: string;
                };
                product?: {
                    "object": string;
                    body: string;
                };
                purchase?: {
                    "object": string;
                    body: string;
                };
                payment?: {
                    "object": string;
                    body: string;
                };
                positioning?: {
                    "object": string;
                    body: string;
                };
                delivery?: {
                    "object": string;
                    body: string;
                };
                groupment?: {
                    "object": string;
                    body: string;
                };
                inactivity?: {
                    "object": string;
                    body: string;
                };
                contract?: {
                    "object": string;
                    body: string;
                };
                advantage?: {
                    "object": string;
                    body: string;
                };
                invoice?: {
                    "object": string;
                    body: string;
                };
                order?: {
                    "object": string;
                    body: string;
                };
                timesheet?: {
                    "object": string;
                    body: string;
                };
                expenses?: {
                    "object": string;
                    body: string;
                };
                absencesRequest?: {
                    "object": string;
                    body: string;
                };
                action?: {
                    "object": string;
                    body: string;
                };
                quotation?: {
                    "object"?: string;
                    body?: string;
                    [key: string]: any;
                };
            };
        };
    };
}, { language }?: {
    language?: "fr" | "en";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            setting?: {
                action?: {
                    forceMultiCreation?: boolean | undefined;
                    sort?: boolean | undefined;
                    contact?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    candidate?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    resource?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    opportunity?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    project?: {
                        id: number;
                        value?: string | undefined;
                        collaborative?: boolean | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    order?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    invoice?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                state?: {
                    sort?: boolean | undefined;
                    candidate?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    resource?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    product?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    opportunity?: {
                        id: number;
                        value?: string | undefined;
                        active: boolean;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    positioning?: {
                        id: number;
                        value?: string | undefined;
                        active: boolean;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    project?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    delivery?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    contact?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    company?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    order?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    invoice?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    purchase?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    payment?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    quotation?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                displayedColumns?: {
                    opportunity?: ("origin" | "state" | "title" | "startDate" | "agency" | "pole" | "contact" | "turnoverWeightedExcludingTax" | "mainManager" | "expertiseArea" | "creationDate" | "numberOfActivePositionings" | "place" | "duration" | "closingDate" | "answerDate" | "activityAreas" | "tools" | "dueDate" | "hrManager" | "turnoverEstimatedExcludingTax" | "estimatesExcludingTax")[] | undefined;
                } | undefined;
                cache?: {
                    reporting?: {
                        state?: boolean | undefined;
                        duration?: number | undefined;
                    } | undefined;
                } | undefined;
                additionalTurnoverTypes?: {
                    state?: boolean | undefined;
                } | undefined;
                timezone?: "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Fort_Nelson" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Colombo" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kathmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qyzylorda" | "Asia/Riyadh" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ulaanbaatar" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faroe" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/Perth" | "Australia/Sydney" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Wake" | "Pacific/Wallis" | "UTC" | undefined;
                typeOf?: {
                    contract?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    purchase?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    resource?: {
                        id: number;
                        value?: string | undefined;
                        isExternal?: boolean | undefined;
                        isStructure?: boolean | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    activity?: {
                        id: 0 | 1 | 2 | 3 | 4;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    delivery?: {
                        id: number;
                        scenario?: 0 | 2 | 1 | 3 | undefined;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    project?: {
                        id: number;
                        mode: 1 | 2 | 3 | 4;
                        value?: string | undefined;
                        isInternal: boolean;
                        activityType?: "day" | "workUnit" | undefined;
                        scheduleProductionTurnover: boolean;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    subscription?: {
                        id: 0 | 1 | 2 | 3 | 4;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    employee?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    workingTime?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    additionalTurnover?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                contractEndReason?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                currency?: {
                    id: number;
                    value?: string | undefined;
                    symbol?: string | undefined;
                    iso?: "EUR" | "USD" | "GBP" | "AFN" | "ALL" | "DZD" | "AOA" | "XCD" | "ARS" | "AMD" | "AWG" | "AZN" | "BSD" | "BHD" | "BDT" | "BBD" | "BYN" | "BZD" | "XOF" | "BMD" | "INR" | "BTN" | "BOB" | "BAM" | "BWP" | "NOK" | "BRL" | "BND" | "BGN" | "BIF" | "CVE" | "KHR" | "CAD" | "KYD" | "CLP" | "CLF" | "CNY" | "COP" | "KMF" | "CDF" | "NZD" | "CRC" | "HRK" | "CUP" | "ANG" | "CZK" | "DKK" | "DJF" | "DOP" | "EGP" | "SVC" | "ERN" | "SZL" | "ETB" | "FKP" | "FJD" | "XPF" | "GMD" | "GEL" | "GHS" | "GIP" | "GTQ" | "GNF" | "GYD" | "HTG" | "HNL" | "HKD" | "HUF" | "ISK" | "IDR" | "IRR" | "IQD" | "ILS" | "JMD" | "JPY" | "JOD" | "KZT" | "KES" | "KPW" | "KRW" | "KWD" | "KGS" | "LAK" | "LBP" | "LSL" | "ZAR" | "LRD" | "LYD" | "CHF" | "MOP" | "MKD" | "MGA" | "MWK" | "MYR" | "MVR" | "MRU" | "MUR" | "MXN" | "MDL" | "MNT" | "MAD" | "MZN" | "MMK" | "NAD" | "NPR" | "NIO" | "NGN" | "AUD" | "OMR" | "PKR" | "PAB" | "PGK" | "PYG" | "PEN" | "PHP" | "PLN" | "QAR" | "RON" | "RUB" | "RWF" | "SHP" | "WST" | "STN" | "SAR" | "RSD" | "SCR" | "SLL" | "SGD" | "XSU" | "SBD" | "SOS" | "SSP" | "LKR" | "SDG" | "SRD" | "SEK" | "SYP" | "TWD" | "TJS" | "TZS" | "THB" | "TOP" | "TTD" | "TND" | "TRY" | "TMT" | "UGX" | "UAH" | "AED" | "UYU" | "UZS" | "VUV" | "VES" | "VND" | "YER" | "ZMW" | "ZWL" | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                calendar?: {
                    id: string;
                    value?: string | undefined;
                    iso?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                taxRate?: {
                    id: number;
                    rate: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                paymentTerm?: {
                    id: number;
                    value: 0 | 1 | 2 | 3 | 4;
                    x?: number | undefined;
                    y?: number | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                paymentMethod?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                sendingMode?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                defaultOpportunityTypeCreated?: number | undefined;
                defaultPositioningSearchModule?: "resources" | "candidates" | undefined;
                filterPositioningSearchModule?: boolean | undefined;
                smoothAdditionalData?: boolean | undefined;
                profitabilityMethodOfCalculating?: "marginRate" | "brandRate" | undefined;
                showOwnOrderReference?: boolean | undefined;
                defaultMail?: {
                    quotation?: {
                        object: string;
                        body: string;
                    } | undefined;
                    invoice?: {
                        object: string;
                        body: string;
                    } | undefined;
                    deliveryOrder?: {
                        object: string;
                        body: string;
                    } | undefined;
                    timesReports?: {
                        object: string;
                        body: string;
                    } | undefined;
                    expensesReports?: {
                        object: string;
                        body: string;
                    } | undefined;
                    timesReportsAndExpensesReports?: {
                        object: string;
                        body: string;
                    } | undefined;
                    waitingForValidationTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    waitingForValidationExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    waitingForValidationAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    validatedTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    validatedExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    validatedAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    rejectedTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    rejectedExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    rejectedAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    refusedTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    refusedExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    refusedAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    removalAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    signatureDocumentRequest?: {
                        object: string;
                        body: string;
                    } | undefined;
                    signatureDocumentReminder?: {
                        object: string;
                        body: string;
                    } | undefined;
                    signatureDocumentValidation?: {
                        object: string;
                        body: string;
                    } | undefined;
                } | undefined;
                showLogoCompany?: boolean | undefined;
                markdownTextDashboard?: string | undefined;
                experience?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                training?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                tool?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                defaultAction?: {
                    pushResource?: string | undefined;
                    pushCandidate?: string | undefined;
                    pushContact?: string | undefined;
                } | undefined;
                activityArea?: {
                    id: string;
                    value?: string | undefined;
                    option?: {
                        id: string;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                expertiseArea?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                duration?: {
                    id: number | number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                languageSpoken?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                languageLevel?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                availability?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                evaluation?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                mobilityArea?: {
                    id: string;
                    value?: string | undefined;
                    option?: {
                        id: string;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                origin?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                classification?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                source?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                criteria?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                situation?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                civility?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                defaultNationality?: string | undefined;
                itemInvoice?: {
                    monthly?: {
                        id: "1" | 13 | 14 | "2" | 23 | 24 | "3" | "4";
                        value: string;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    schedule?: {
                        id: "1" | "2" | "3" | "4";
                        value: string;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                deliveryOrder?: {
                    id: number;
                    value?: string | undefined;
                    maskSignatureBlock: boolean;
                    insert?: {
                        value?: string | undefined;
                        optionLength?: number | undefined;
                        option?: string[] | undefined;
                    }[] | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                sharingEntity?: {
                    credentials?: {
                        object: string;
                        body: string;
                    } | undefined;
                    account?: {
                        object: string;
                        body: string;
                    } | undefined;
                    resource?: {
                        object: string;
                        body: string;
                    } | undefined;
                    opportunity?: {
                        object: string;
                        body: string;
                    } | undefined;
                    candidate?: {
                        object: string;
                        body: string;
                    } | undefined;
                    contact?: {
                        object: string;
                        body: string;
                    } | undefined;
                    company?: {
                        object: string;
                        body: string;
                    } | undefined;
                    project?: {
                        object: string;
                        body: string;
                    } | undefined;
                    product?: {
                        object: string;
                        body: string;
                    } | undefined;
                    purchase?: {
                        object: string;
                        body: string;
                    } | undefined;
                    payment?: {
                        object: string;
                        body: string;
                    } | undefined;
                    positioning?: {
                        object: string;
                        body: string;
                    } | undefined;
                    delivery?: {
                        object: string;
                        body: string;
                    } | undefined;
                    groupment?: {
                        object: string;
                        body: string;
                    } | undefined;
                    inactivity?: {
                        object: string;
                        body: string;
                    } | undefined;
                    contract?: {
                        object: string;
                        body: string;
                    } | undefined;
                    advantage?: {
                        object: string;
                        body: string;
                    } | undefined;
                    invoice?: {
                        object: string;
                        body: string;
                    } | undefined;
                    order?: {
                        object: string;
                        body: string;
                    } | undefined;
                    timesheet?: {
                        object: string;
                        body: string;
                    } | undefined;
                    expenses?: {
                        object: string;
                        body: string;
                    } | undefined;
                    absencesRequest?: {
                        object: string;
                        body: string;
                    } | undefined;
                    action?: {
                        object: string;
                        body: string;
                    } | undefined;
                    quotation?: {
                        [key: string]: any;
                        object?: string | undefined;
                        body?: string | undefined;
                    } | undefined;
                } | undefined;
            } | undefined;
            country?: {
                [key: string]: any;
                id: string;
                iso?: string | undefined;
                value?: string | undefined;
            }[] | undefined;
            nationality?: {
                [key: string]: any;
                id: string;
                value?: string | undefined;
            }[] | undefined;
            lastBackupDate?: string | undefined;
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteApplicationDictionary(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postApplicationDictionary(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get dictionar's file
 */
export declare function getApplicationDownloadDictionary(body?: string, { language }?: {
    language?: "fr" | "en";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: Blob;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteApplicationDownloadDictionary(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postApplicationDownloadDictionary(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putApplicationDownloadDictionary(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Backup the specific translations
 */
export declare function postApplicationBackupDictionary(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            setting?: {
                action?: {
                    forceMultiCreation?: boolean | undefined;
                    sort?: boolean | undefined;
                    contact?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    candidate?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    resource?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    opportunity?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    project?: {
                        id: number;
                        value?: string | undefined;
                        collaborative?: boolean | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    order?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    invoice?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                state?: {
                    sort?: boolean | undefined;
                    candidate?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    resource?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    product?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    opportunity?: {
                        id: number;
                        value?: string | undefined;
                        active: boolean;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    positioning?: {
                        id: number;
                        value?: string | undefined;
                        active: boolean;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    project?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    delivery?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    contact?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    company?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    order?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    invoice?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    purchase?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    payment?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    quotation?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                displayedColumns?: {
                    opportunity?: ("origin" | "state" | "title" | "startDate" | "agency" | "pole" | "contact" | "turnoverWeightedExcludingTax" | "mainManager" | "expertiseArea" | "creationDate" | "numberOfActivePositionings" | "place" | "duration" | "closingDate" | "answerDate" | "activityAreas" | "tools" | "dueDate" | "hrManager" | "turnoverEstimatedExcludingTax" | "estimatesExcludingTax")[] | undefined;
                } | undefined;
                cache?: {
                    reporting?: {
                        state?: boolean | undefined;
                        duration?: number | undefined;
                    } | undefined;
                } | undefined;
                additionalTurnoverTypes?: {
                    state?: boolean | undefined;
                } | undefined;
                timezone?: "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Fort_Nelson" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Colombo" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kathmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qyzylorda" | "Asia/Riyadh" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ulaanbaatar" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faroe" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/Perth" | "Australia/Sydney" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Wake" | "Pacific/Wallis" | "UTC" | undefined;
                typeOf?: {
                    contract?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    purchase?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    resource?: {
                        id: number;
                        value?: string | undefined;
                        isExternal?: boolean | undefined;
                        isStructure?: boolean | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    activity?: {
                        id: 0 | 1 | 2 | 3 | 4;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    delivery?: {
                        id: number;
                        scenario?: 0 | 2 | 1 | 3 | undefined;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    project?: {
                        id: number;
                        mode: 1 | 2 | 3 | 4;
                        value?: string | undefined;
                        isInternal: boolean;
                        activityType?: "day" | "workUnit" | undefined;
                        scheduleProductionTurnover: boolean;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    subscription?: {
                        id: 0 | 1 | 2 | 3 | 4;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    employee?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    workingTime?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    additionalTurnover?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                contractEndReason?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                currency?: {
                    id: number;
                    value?: string | undefined;
                    symbol?: string | undefined;
                    iso?: "EUR" | "USD" | "GBP" | "AFN" | "ALL" | "DZD" | "AOA" | "XCD" | "ARS" | "AMD" | "AWG" | "AZN" | "BSD" | "BHD" | "BDT" | "BBD" | "BYN" | "BZD" | "XOF" | "BMD" | "INR" | "BTN" | "BOB" | "BAM" | "BWP" | "NOK" | "BRL" | "BND" | "BGN" | "BIF" | "CVE" | "KHR" | "CAD" | "KYD" | "CLP" | "CLF" | "CNY" | "COP" | "KMF" | "CDF" | "NZD" | "CRC" | "HRK" | "CUP" | "ANG" | "CZK" | "DKK" | "DJF" | "DOP" | "EGP" | "SVC" | "ERN" | "SZL" | "ETB" | "FKP" | "FJD" | "XPF" | "GMD" | "GEL" | "GHS" | "GIP" | "GTQ" | "GNF" | "GYD" | "HTG" | "HNL" | "HKD" | "HUF" | "ISK" | "IDR" | "IRR" | "IQD" | "ILS" | "JMD" | "JPY" | "JOD" | "KZT" | "KES" | "KPW" | "KRW" | "KWD" | "KGS" | "LAK" | "LBP" | "LSL" | "ZAR" | "LRD" | "LYD" | "CHF" | "MOP" | "MKD" | "MGA" | "MWK" | "MYR" | "MVR" | "MRU" | "MUR" | "MXN" | "MDL" | "MNT" | "MAD" | "MZN" | "MMK" | "NAD" | "NPR" | "NIO" | "NGN" | "AUD" | "OMR" | "PKR" | "PAB" | "PGK" | "PYG" | "PEN" | "PHP" | "PLN" | "QAR" | "RON" | "RUB" | "RWF" | "SHP" | "WST" | "STN" | "SAR" | "RSD" | "SCR" | "SLL" | "SGD" | "XSU" | "SBD" | "SOS" | "SSP" | "LKR" | "SDG" | "SRD" | "SEK" | "SYP" | "TWD" | "TJS" | "TZS" | "THB" | "TOP" | "TTD" | "TND" | "TRY" | "TMT" | "UGX" | "UAH" | "AED" | "UYU" | "UZS" | "VUV" | "VES" | "VND" | "YER" | "ZMW" | "ZWL" | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                calendar?: {
                    id: string;
                    value?: string | undefined;
                    iso?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                taxRate?: {
                    id: number;
                    rate: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                paymentTerm?: {
                    id: number;
                    value: 0 | 1 | 2 | 3 | 4;
                    x?: number | undefined;
                    y?: number | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                paymentMethod?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                sendingMode?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                defaultOpportunityTypeCreated?: number | undefined;
                defaultPositioningSearchModule?: "resources" | "candidates" | undefined;
                filterPositioningSearchModule?: boolean | undefined;
                smoothAdditionalData?: boolean | undefined;
                profitabilityMethodOfCalculating?: "marginRate" | "brandRate" | undefined;
                showOwnOrderReference?: boolean | undefined;
                defaultMail?: {
                    quotation?: {
                        object: string;
                        body: string;
                    } | undefined;
                    invoice?: {
                        object: string;
                        body: string;
                    } | undefined;
                    deliveryOrder?: {
                        object: string;
                        body: string;
                    } | undefined;
                    timesReports?: {
                        object: string;
                        body: string;
                    } | undefined;
                    expensesReports?: {
                        object: string;
                        body: string;
                    } | undefined;
                    timesReportsAndExpensesReports?: {
                        object: string;
                        body: string;
                    } | undefined;
                    waitingForValidationTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    waitingForValidationExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    waitingForValidationAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    validatedTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    validatedExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    validatedAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    rejectedTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    rejectedExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    rejectedAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    refusedTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    refusedExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    refusedAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    removalAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    signatureDocumentRequest?: {
                        object: string;
                        body: string;
                    } | undefined;
                    signatureDocumentReminder?: {
                        object: string;
                        body: string;
                    } | undefined;
                    signatureDocumentValidation?: {
                        object: string;
                        body: string;
                    } | undefined;
                } | undefined;
                showLogoCompany?: boolean | undefined;
                markdownTextDashboard?: string | undefined;
                experience?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                training?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                tool?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                defaultAction?: {
                    pushResource?: string | undefined;
                    pushCandidate?: string | undefined;
                    pushContact?: string | undefined;
                } | undefined;
                activityArea?: {
                    id: string;
                    value?: string | undefined;
                    option?: {
                        id: string;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                expertiseArea?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                duration?: {
                    id: number | number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                languageSpoken?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                languageLevel?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                availability?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                evaluation?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                mobilityArea?: {
                    id: string;
                    value?: string | undefined;
                    option?: {
                        id: string;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                origin?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                classification?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                source?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                criteria?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                situation?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                civility?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                defaultNationality?: string | undefined;
                itemInvoice?: {
                    monthly?: {
                        id: "1" | 13 | 14 | "2" | 23 | 24 | "3" | "4";
                        value: string;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    schedule?: {
                        id: "1" | "2" | "3" | "4";
                        value: string;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                deliveryOrder?: {
                    id: number;
                    value?: string | undefined;
                    maskSignatureBlock: boolean;
                    insert?: {
                        value?: string | undefined;
                        optionLength?: number | undefined;
                        option?: string[] | undefined;
                    }[] | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                sharingEntity?: {
                    credentials?: {
                        object: string;
                        body: string;
                    } | undefined;
                    account?: {
                        object: string;
                        body: string;
                    } | undefined;
                    resource?: {
                        object: string;
                        body: string;
                    } | undefined;
                    opportunity?: {
                        object: string;
                        body: string;
                    } | undefined;
                    candidate?: {
                        object: string;
                        body: string;
                    } | undefined;
                    contact?: {
                        object: string;
                        body: string;
                    } | undefined;
                    company?: {
                        object: string;
                        body: string;
                    } | undefined;
                    project?: {
                        object: string;
                        body: string;
                    } | undefined;
                    product?: {
                        object: string;
                        body: string;
                    } | undefined;
                    purchase?: {
                        object: string;
                        body: string;
                    } | undefined;
                    payment?: {
                        object: string;
                        body: string;
                    } | undefined;
                    positioning?: {
                        object: string;
                        body: string;
                    } | undefined;
                    delivery?: {
                        object: string;
                        body: string;
                    } | undefined;
                    groupment?: {
                        object: string;
                        body: string;
                    } | undefined;
                    inactivity?: {
                        object: string;
                        body: string;
                    } | undefined;
                    contract?: {
                        object: string;
                        body: string;
                    } | undefined;
                    advantage?: {
                        object: string;
                        body: string;
                    } | undefined;
                    invoice?: {
                        object: string;
                        body: string;
                    } | undefined;
                    order?: {
                        object: string;
                        body: string;
                    } | undefined;
                    timesheet?: {
                        object: string;
                        body: string;
                    } | undefined;
                    expenses?: {
                        object: string;
                        body: string;
                    } | undefined;
                    absencesRequest?: {
                        object: string;
                        body: string;
                    } | undefined;
                    action?: {
                        object: string;
                        body: string;
                    } | undefined;
                    quotation?: {
                        [key: string]: any;
                        object?: string | undefined;
                        body?: string | undefined;
                    } | undefined;
                } | undefined;
            } | undefined;
            country?: {
                [key: string]: any;
                id: string;
                iso?: string | undefined;
                value?: string | undefined;
            }[] | undefined;
            nationality?: {
                [key: string]: any;
                id: string;
                value?: string | undefined;
            }[] | undefined;
            lastBackupDate?: string | undefined;
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteApplicationBackupDictionary(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putApplicationBackupDictionary(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getApplicationBackupDictionary(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Restore the last specific translations backup
 */
export declare function putApplicationRestoreDictionary(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteApplicationRestoreDictionary(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postApplicationRestoreDictionary(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getApplicationRestoreDictionary(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a dabatase dump
 */
export declare function postApplicationDumpDatabase(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getApplicationDumpDatabase(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: Blob;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteApplicationDumpDatabase(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putApplicationDumpDatabase(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get the list of flags availables for searching or updating
 */
export declare function getApplicationFlags(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "flag";
            attributes?: {
                name?: string;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        }[];
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteApplicationFlags(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postApplicationFlags(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putApplicationFlags(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get the list of perimeters availables for searching
 */
export declare function getApplicationPerimeters(body?: string, { module }?: {
    "module"?: "actions" | "resources" | "candidates" | "products" | "opportunities" | "positionings" | "crm" | "projects" | "purchases" | "activityExpenses" | "billing" | "flags" | "reportingProductionPlans" | "reportingSynthesis" | "reportingResources" | "reportingCompanies" | "reportingProjects" | "companies" | "contacts" | "apps" | "logs" | "downloadCenter" | "appExtractPayroll" | "appAccountingPayroll" | "appExceptionalActivity" | "appSepa" | "appSpecialReporting" | "appSurvey";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "perimeters";
            attributes?: {
                required?: boolean | undefined;
            } | undefined;
            relationships?: {
                agencies?: {
                    [key: string]: any;
                } | undefined;
                businessUnits?: {
                    [key: string]: any;
                } | undefined;
                poles?: {
                    [key: string]: any;
                } | undefined;
                managers?: {
                    [key: string]: any;
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                state?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "businessunit";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
                state?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteApplicationPerimeters(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postApplicationPerimeters(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putApplicationPerimeters(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Read database thanks to a MySQL query
 */
export declare function postApplicationReadDatabase(body?: {
    query: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            header?: string;
            value?: any;
        }[][];
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteApplicationReadDatabase(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putApplicationReadDatabase(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getApplicationReadDatabase(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get the specific settings
 */
export declare function getApplicationSettings(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            setting?: {
                action?: {
                    forceMultiCreation?: boolean | undefined;
                    sort?: boolean | undefined;
                    contact?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    candidate?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    resource?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    opportunity?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    project?: {
                        id: number;
                        value?: string | undefined;
                        collaborative?: boolean | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    order?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    invoice?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                state?: {
                    sort?: boolean | undefined;
                    candidate?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    resource?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    product?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    opportunity?: {
                        id: number;
                        value?: string | undefined;
                        active: boolean;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    positioning?: {
                        id: number;
                        value?: string | undefined;
                        active: boolean;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    project?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    delivery?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    contact?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    company?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    order?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    invoice?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    purchase?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    payment?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    quotation?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                displayedColumns?: {
                    opportunity?: ("origin" | "state" | "title" | "startDate" | "agency" | "pole" | "contact" | "turnoverWeightedExcludingTax" | "mainManager" | "expertiseArea" | "creationDate" | "numberOfActivePositionings" | "place" | "duration" | "closingDate" | "answerDate" | "activityAreas" | "tools" | "dueDate" | "hrManager" | "turnoverEstimatedExcludingTax" | "estimatesExcludingTax")[] | undefined;
                } | undefined;
                cache?: {
                    reporting?: {
                        state?: boolean | undefined;
                        duration?: number | undefined;
                    } | undefined;
                } | undefined;
                additionalTurnoverTypes?: {
                    state?: boolean | undefined;
                } | undefined;
                timezone?: "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Fort_Nelson" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Colombo" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kathmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qyzylorda" | "Asia/Riyadh" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ulaanbaatar" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faroe" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/Perth" | "Australia/Sydney" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Wake" | "Pacific/Wallis" | "UTC" | undefined;
                typeOf?: {
                    contract?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    purchase?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    resource?: {
                        id: number;
                        value?: string | undefined;
                        isExternal?: boolean | undefined;
                        isStructure?: boolean | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    activity?: {
                        id: 0 | 1 | 2 | 3 | 4;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    delivery?: {
                        id: number;
                        scenario?: 0 | 2 | 1 | 3 | undefined;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    project?: {
                        id: number;
                        mode: 1 | 2 | 3 | 4;
                        value?: string | undefined;
                        isInternal: boolean;
                        activityType?: "day" | "workUnit" | undefined;
                        scheduleProductionTurnover: boolean;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    subscription?: {
                        id: 0 | 1 | 2 | 3 | 4;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    employee?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    workingTime?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    additionalTurnover?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                contractEndReason?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                currency?: {
                    id: number;
                    value?: string | undefined;
                    symbol?: string | undefined;
                    iso?: "EUR" | "USD" | "GBP" | "AFN" | "ALL" | "DZD" | "AOA" | "XCD" | "ARS" | "AMD" | "AWG" | "AZN" | "BSD" | "BHD" | "BDT" | "BBD" | "BYN" | "BZD" | "XOF" | "BMD" | "INR" | "BTN" | "BOB" | "BAM" | "BWP" | "NOK" | "BRL" | "BND" | "BGN" | "BIF" | "CVE" | "KHR" | "CAD" | "KYD" | "CLP" | "CLF" | "CNY" | "COP" | "KMF" | "CDF" | "NZD" | "CRC" | "HRK" | "CUP" | "ANG" | "CZK" | "DKK" | "DJF" | "DOP" | "EGP" | "SVC" | "ERN" | "SZL" | "ETB" | "FKP" | "FJD" | "XPF" | "GMD" | "GEL" | "GHS" | "GIP" | "GTQ" | "GNF" | "GYD" | "HTG" | "HNL" | "HKD" | "HUF" | "ISK" | "IDR" | "IRR" | "IQD" | "ILS" | "JMD" | "JPY" | "JOD" | "KZT" | "KES" | "KPW" | "KRW" | "KWD" | "KGS" | "LAK" | "LBP" | "LSL" | "ZAR" | "LRD" | "LYD" | "CHF" | "MOP" | "MKD" | "MGA" | "MWK" | "MYR" | "MVR" | "MRU" | "MUR" | "MXN" | "MDL" | "MNT" | "MAD" | "MZN" | "MMK" | "NAD" | "NPR" | "NIO" | "NGN" | "AUD" | "OMR" | "PKR" | "PAB" | "PGK" | "PYG" | "PEN" | "PHP" | "PLN" | "QAR" | "RON" | "RUB" | "RWF" | "SHP" | "WST" | "STN" | "SAR" | "RSD" | "SCR" | "SLL" | "SGD" | "XSU" | "SBD" | "SOS" | "SSP" | "LKR" | "SDG" | "SRD" | "SEK" | "SYP" | "TWD" | "TJS" | "TZS" | "THB" | "TOP" | "TTD" | "TND" | "TRY" | "TMT" | "UGX" | "UAH" | "AED" | "UYU" | "UZS" | "VUV" | "VES" | "VND" | "YER" | "ZMW" | "ZWL" | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                calendar?: {
                    id: string;
                    value?: string | undefined;
                    iso?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                taxRate?: {
                    id: number;
                    rate: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                paymentTerm?: {
                    id: number;
                    value: 0 | 1 | 2 | 3 | 4;
                    x?: number | undefined;
                    y?: number | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                paymentMethod?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                sendingMode?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                defaultOpportunityTypeCreated?: number | undefined;
                defaultPositioningSearchModule?: "resources" | "candidates" | undefined;
                filterPositioningSearchModule?: boolean | undefined;
                smoothAdditionalData?: boolean | undefined;
                profitabilityMethodOfCalculating?: "marginRate" | "brandRate" | undefined;
                showOwnOrderReference?: boolean | undefined;
                defaultMail?: {
                    quotation?: {
                        object: string;
                        body: string;
                    } | undefined;
                    invoice?: {
                        object: string;
                        body: string;
                    } | undefined;
                    deliveryOrder?: {
                        object: string;
                        body: string;
                    } | undefined;
                    timesReports?: {
                        object: string;
                        body: string;
                    } | undefined;
                    expensesReports?: {
                        object: string;
                        body: string;
                    } | undefined;
                    timesReportsAndExpensesReports?: {
                        object: string;
                        body: string;
                    } | undefined;
                    waitingForValidationTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    waitingForValidationExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    waitingForValidationAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    validatedTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    validatedExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    validatedAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    rejectedTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    rejectedExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    rejectedAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    refusedTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    refusedExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    refusedAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    removalAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    signatureDocumentRequest?: {
                        object: string;
                        body: string;
                    } | undefined;
                    signatureDocumentReminder?: {
                        object: string;
                        body: string;
                    } | undefined;
                    signatureDocumentValidation?: {
                        object: string;
                        body: string;
                    } | undefined;
                } | undefined;
                showLogoCompany?: boolean | undefined;
                markdownTextDashboard?: string | undefined;
                experience?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                training?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                tool?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                defaultAction?: {
                    pushResource?: string | undefined;
                    pushCandidate?: string | undefined;
                    pushContact?: string | undefined;
                } | undefined;
                activityArea?: {
                    id: string;
                    value?: string | undefined;
                    option?: {
                        id: string;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                expertiseArea?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                duration?: {
                    id: number | number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                languageSpoken?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                languageLevel?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                availability?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                evaluation?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                mobilityArea?: {
                    id: string;
                    value?: string | undefined;
                    option?: {
                        id: string;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                origin?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                classification?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                source?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                criteria?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                situation?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                civility?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                defaultNationality?: string | undefined;
                itemInvoice?: {
                    monthly?: {
                        id: "1" | 13 | 14 | "2" | 23 | 24 | "3" | "4";
                        value: string;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    schedule?: {
                        id: "1" | "2" | "3" | "4";
                        value: string;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                deliveryOrder?: {
                    id: number;
                    value?: string | undefined;
                    maskSignatureBlock: boolean;
                    insert?: {
                        value?: string | undefined;
                        optionLength?: number | undefined;
                        option?: string[] | undefined;
                    }[] | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                sharingEntity?: {
                    credentials?: {
                        object: string;
                        body: string;
                    } | undefined;
                    account?: {
                        object: string;
                        body: string;
                    } | undefined;
                    resource?: {
                        object: string;
                        body: string;
                    } | undefined;
                    opportunity?: {
                        object: string;
                        body: string;
                    } | undefined;
                    candidate?: {
                        object: string;
                        body: string;
                    } | undefined;
                    contact?: {
                        object: string;
                        body: string;
                    } | undefined;
                    company?: {
                        object: string;
                        body: string;
                    } | undefined;
                    project?: {
                        object: string;
                        body: string;
                    } | undefined;
                    product?: {
                        object: string;
                        body: string;
                    } | undefined;
                    purchase?: {
                        object: string;
                        body: string;
                    } | undefined;
                    payment?: {
                        object: string;
                        body: string;
                    } | undefined;
                    positioning?: {
                        object: string;
                        body: string;
                    } | undefined;
                    delivery?: {
                        object: string;
                        body: string;
                    } | undefined;
                    groupment?: {
                        object: string;
                        body: string;
                    } | undefined;
                    inactivity?: {
                        object: string;
                        body: string;
                    } | undefined;
                    contract?: {
                        object: string;
                        body: string;
                    } | undefined;
                    advantage?: {
                        object: string;
                        body: string;
                    } | undefined;
                    invoice?: {
                        object: string;
                        body: string;
                    } | undefined;
                    order?: {
                        object: string;
                        body: string;
                    } | undefined;
                    timesheet?: {
                        object: string;
                        body: string;
                    } | undefined;
                    expenses?: {
                        object: string;
                        body: string;
                    } | undefined;
                    absencesRequest?: {
                        object: string;
                        body: string;
                    } | undefined;
                    action?: {
                        object: string;
                        body: string;
                    } | undefined;
                    quotation?: {
                        [key: string]: any;
                        object?: string | undefined;
                        body?: string | undefined;
                    } | undefined;
                } | undefined;
            } | undefined;
            country?: {
                [key: string]: any;
                id: string;
                iso?: string | undefined;
                value?: string | undefined;
            }[] | undefined;
            nationality?: {
                [key: string]: any;
                id: string;
                value?: string | undefined;
            }[] | undefined;
            dashboard?: {
                fiscalYearTerm?: string | undefined;
                recruitmentsFunnelInterviewActions?: number[] | undefined;
                salesFunnelMeetingActions?: number[] | undefined;
            } | undefined;
            lastBackupDate?: string | undefined;
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update the specific settings
 */
export declare function putApplicationSettings(body?: {
    data?: {
        setting?: {
            action?: {
                forceMultiCreation?: boolean;
                sort?: boolean;
                contact?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                candidate?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                resource?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                opportunity?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                project?: {
                    id: number;
                    value?: string;
                    collaborative?: boolean;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                order?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                invoice?: {
                    id: number;
                    value?: string;
                    isNotification?: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
            };
            state?: {
                sort?: boolean;
                candidate?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                resource?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                product?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                opportunity?: {
                    id: number;
                    value?: string;
                    active: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                positioning?: {
                    id: number;
                    value?: string;
                    active: boolean;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                project?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                delivery?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                contact?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                company?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                order?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                invoice?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                purchase?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                payment?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                quotation?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
            };
            displayedColumns?: {
                opportunity?: ("creationDate" | "title" | "contact" | "state" | "numberOfActivePositionings" | "place" | "startDate" | "duration" | "turnoverWeightedExcludingTax" | "mainManager" | "closingDate" | "answerDate" | "activityAreas" | "expertiseArea" | "tools" | "dueDate" | "origin" | "hrManager" | "pole" | "agency" | "turnoverEstimatedExcludingTax" | "estimatesExcludingTax")[];
            };
            cache?: {
                reporting?: {
                    state?: boolean;
                    duration?: number;
                };
            };
            additionalTurnoverTypes?: {
                state?: boolean;
            };
            timezone?: "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Fort_Nelson" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Colombo" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kathmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qyzylorda" | "Asia/Riyadh" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ulaanbaatar" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faroe" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/Perth" | "Australia/Sydney" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Wake" | "Pacific/Wallis" | "UTC";
            typeOf?: {
                contract?: {
                    id: number;
                    value?: string;
                    isEnabled?: boolean;
                    "delete"?: boolean;
                }[];
                purchase?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                resource?: {
                    id: number;
                    value?: string;
                    isExternal?: boolean;
                    isStructure?: boolean;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                activity?: {
                    id: 0 | 1 | 2 | 3 | 4;
                    value?: string;
                    isEnabled?: boolean;
                }[];
                delivery?: {
                    id: number;
                    scenario?: 0 | 1 | 2 | 3;
                    value?: string;
                    isEnabled?: boolean;
                }[];
                project?: {
                    id: number;
                    mode: 1 | 2 | 3 | 4;
                    value?: string;
                    isInternal: boolean;
                    activityType?: "workUnit" | "day";
                    scheduleProductionTurnover: boolean;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                subscription?: {
                    id: 0 | 1 | 2 | 3 | 4;
                    value?: string;
                    isEnabled?: boolean;
                }[];
                employee?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                workingTime?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                additionalTurnover?: {
                    id: number;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
            };
            contractEndReason?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            currency?: {
                id: number;
                value?: string;
                "symbol"?: string;
                iso?: "EUR" | "USD" | "GBP" | "AFN" | "ALL" | "DZD" | "AOA" | "XCD" | "ARS" | "AMD" | "AWG" | "AZN" | "BSD" | "BHD" | "BDT" | "BBD" | "BYN" | "BZD" | "XOF" | "BMD" | "INR" | "BTN" | "BOB" | "BAM" | "BWP" | "NOK" | "BRL" | "BND" | "BGN" | "BIF" | "CVE" | "KHR" | "CAD" | "KYD" | "CLP" | "CLF" | "CNY" | "COP" | "KMF" | "CDF" | "NZD" | "CRC" | "HRK" | "CUP" | "ANG" | "CZK" | "DKK" | "DJF" | "DOP" | "EGP" | "SVC" | "ERN" | "SZL" | "ETB" | "FKP" | "FJD" | "XPF" | "GMD" | "GEL" | "GHS" | "GIP" | "GTQ" | "GNF" | "GYD" | "HTG" | "HNL" | "HKD" | "HUF" | "ISK" | "IDR" | "IRR" | "IQD" | "ILS" | "JMD" | "JPY" | "JOD" | "KZT" | "KES" | "KPW" | "KRW" | "KWD" | "KGS" | "LAK" | "LBP" | "LSL" | "ZAR" | "LRD" | "LYD" | "CHF" | "MOP" | "MKD" | "MGA" | "MWK" | "MYR" | "MVR" | "MRU" | "MUR" | "MXN" | "MDL" | "MNT" | "MAD" | "MZN" | "MMK" | "NAD" | "NPR" | "NIO" | "NGN" | "AUD" | "OMR" | "PKR" | "PAB" | "PGK" | "PYG" | "PEN" | "PHP" | "PLN" | "QAR" | "RON" | "RUB" | "RWF" | "SHP" | "WST" | "STN" | "SAR" | "RSD" | "SCR" | "SLL" | "SGD" | "XSU" | "SBD" | "SOS" | "SSP" | "LKR" | "SDG" | "SRD" | "SEK" | "SYP" | "TWD" | "TJS" | "TZS" | "THB" | "TOP" | "TTD" | "TND" | "TRY" | "TMT" | "UGX" | "UAH" | "AED" | "UYU" | "UZS" | "VUV" | "VES" | "VND" | "YER" | "ZMW" | "ZWL";
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            calendar?: {
                id: string;
                value?: string;
                iso?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            taxRate?: {
                id: number;
                rate: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            paymentTerm?: {
                id: number;
                value: 0 | 1 | 2 | 3 | 4;
                x?: number;
                y?: number;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            paymentMethod?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            sendingMode?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            defaultOpportunityTypeCreated?: number;
            defaultPositioningSearchModule?: "resources" | "candidates";
            filterPositioningSearchModule?: boolean;
            smoothAdditionalData?: boolean;
            profitabilityMethodOfCalculating?: "marginRate" | "brandRate";
            showOwnOrderReference?: boolean;
            defaultMail?: {
                quotation?: {
                    "object": string;
                    body: string;
                };
                invoice?: {
                    "object": string;
                    body: string;
                };
                deliveryOrder?: {
                    "object": string;
                    body: string;
                };
                timesReports?: {
                    "object": string;
                    body: string;
                };
                expensesReports?: {
                    "object": string;
                    body: string;
                };
                timesReportsAndExpensesReports?: {
                    "object": string;
                    body: string;
                };
                waitingForValidationTimesReport?: {
                    "object": string;
                    body: string;
                };
                waitingForValidationExpensesReport?: {
                    "object": string;
                    body: string;
                };
                waitingForValidationAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                validatedTimesReport?: {
                    "object": string;
                    body: string;
                };
                validatedExpensesReport?: {
                    "object": string;
                    body: string;
                };
                validatedAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                rejectedTimesReport?: {
                    "object": string;
                    body: string;
                };
                rejectedExpensesReport?: {
                    "object": string;
                    body: string;
                };
                rejectedAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                refusedTimesReport?: {
                    "object": string;
                    body: string;
                };
                refusedExpensesReport?: {
                    "object": string;
                    body: string;
                };
                refusedAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                removalAbsencesReport?: {
                    "object": string;
                    body: string;
                };
                signatureDocumentRequest?: {
                    "object": string;
                    body: string;
                };
                signatureDocumentReminder?: {
                    "object": string;
                    body: string;
                };
                signatureDocumentValidation?: {
                    "object": string;
                    body: string;
                };
            };
            showLogoCompany?: boolean;
            markdownTextDashboard?: string;
            experience?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            training?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            tool?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            defaultAction?: {
                pushResource?: string;
                pushCandidate?: string;
                pushContact?: string;
            };
            activityArea?: {
                id: string;
                value?: string;
                option?: {
                    id: string;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            expertiseArea?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            duration?: {
                id: number | number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            languageSpoken?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            languageLevel?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            availability?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            evaluation?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            mobilityArea?: {
                id: string;
                value?: string;
                option?: {
                    id: string;
                    value?: string;
                    "delete"?: boolean;
                    isEnabled?: boolean;
                }[];
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            origin?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            classification?: {
                id: string;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            source?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            criteria?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            situation?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            civility?: {
                id: number;
                value?: string;
                "delete"?: boolean;
                isEnabled?: boolean;
            }[];
            defaultNationality?: string;
            itemInvoice?: {
                monthly?: {
                    id: "1" | 13 | 14 | "2" | 23 | 24 | "3" | "4";
                    value: string;
                    isEnabled?: boolean;
                }[];
                schedule?: {
                    id: "1" | "2" | "3" | "4";
                    value: string;
                    isEnabled?: boolean;
                }[];
            };
            deliveryOrder?: {
                id: number;
                value?: string;
                maskSignatureBlock: boolean;
                insert?: {
                    value?: string;
                    optionLength?: number;
                    option?: string[];
                }[];
                isEnabled?: boolean;
            }[];
            sharingEntity?: {
                credentials?: {
                    "object": string;
                    body: string;
                };
                account?: {
                    "object": string;
                    body: string;
                };
                resource?: {
                    "object": string;
                    body: string;
                };
                opportunity?: {
                    "object": string;
                    body: string;
                };
                candidate?: {
                    "object": string;
                    body: string;
                };
                contact?: {
                    "object": string;
                    body: string;
                };
                company?: {
                    "object": string;
                    body: string;
                };
                project?: {
                    "object": string;
                    body: string;
                };
                product?: {
                    "object": string;
                    body: string;
                };
                purchase?: {
                    "object": string;
                    body: string;
                };
                payment?: {
                    "object": string;
                    body: string;
                };
                positioning?: {
                    "object": string;
                    body: string;
                };
                delivery?: {
                    "object": string;
                    body: string;
                };
                groupment?: {
                    "object": string;
                    body: string;
                };
                inactivity?: {
                    "object": string;
                    body: string;
                };
                contract?: {
                    "object": string;
                    body: string;
                };
                advantage?: {
                    "object": string;
                    body: string;
                };
                invoice?: {
                    "object": string;
                    body: string;
                };
                order?: {
                    "object": string;
                    body: string;
                };
                timesheet?: {
                    "object": string;
                    body: string;
                };
                expenses?: {
                    "object": string;
                    body: string;
                };
                absencesRequest?: {
                    "object": string;
                    body: string;
                };
                action?: {
                    "object": string;
                    body: string;
                };
                quotation?: {
                    "object"?: string;
                    body?: string;
                    [key: string]: any;
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            setting?: {
                action?: {
                    forceMultiCreation?: boolean | undefined;
                    sort?: boolean | undefined;
                    contact?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    candidate?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    resource?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    opportunity?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    project?: {
                        id: number;
                        value?: string | undefined;
                        collaborative?: boolean | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    order?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    invoice?: {
                        id: number;
                        value?: string | undefined;
                        isNotification?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                state?: {
                    sort?: boolean | undefined;
                    candidate?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    resource?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    product?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    opportunity?: {
                        id: number;
                        value?: string | undefined;
                        active: boolean;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    positioning?: {
                        id: number;
                        value?: string | undefined;
                        active: boolean;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    project?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    delivery?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    contact?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    company?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    order?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    invoice?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    purchase?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    payment?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    quotation?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                displayedColumns?: {
                    opportunity?: ("origin" | "state" | "title" | "startDate" | "agency" | "pole" | "contact" | "turnoverWeightedExcludingTax" | "mainManager" | "expertiseArea" | "creationDate" | "numberOfActivePositionings" | "place" | "duration" | "closingDate" | "answerDate" | "activityAreas" | "tools" | "dueDate" | "hrManager" | "turnoverEstimatedExcludingTax" | "estimatesExcludingTax")[] | undefined;
                } | undefined;
                cache?: {
                    reporting?: {
                        state?: boolean | undefined;
                        duration?: number | undefined;
                    } | undefined;
                } | undefined;
                additionalTurnoverTypes?: {
                    state?: boolean | undefined;
                } | undefined;
                timezone?: "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Fort_Nelson" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Colombo" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kathmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qyzylorda" | "Asia/Riyadh" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ulaanbaatar" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faroe" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/Perth" | "Australia/Sydney" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Wake" | "Pacific/Wallis" | "UTC" | undefined;
                typeOf?: {
                    contract?: {
                        id: number;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                        delete?: boolean | undefined;
                    }[] | undefined;
                    purchase?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    resource?: {
                        id: number;
                        value?: string | undefined;
                        isExternal?: boolean | undefined;
                        isStructure?: boolean | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    activity?: {
                        id: 0 | 1 | 2 | 3 | 4;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    delivery?: {
                        id: number;
                        scenario?: 0 | 2 | 1 | 3 | undefined;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    project?: {
                        id: number;
                        mode: 1 | 2 | 3 | 4;
                        value?: string | undefined;
                        isInternal: boolean;
                        activityType?: "day" | "workUnit" | undefined;
                        scheduleProductionTurnover: boolean;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    subscription?: {
                        id: 0 | 1 | 2 | 3 | 4;
                        value?: string | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    employee?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    workingTime?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    additionalTurnover?: {
                        id: number;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                contractEndReason?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                currency?: {
                    id: number;
                    value?: string | undefined;
                    symbol?: string | undefined;
                    iso?: "EUR" | "USD" | "GBP" | "AFN" | "ALL" | "DZD" | "AOA" | "XCD" | "ARS" | "AMD" | "AWG" | "AZN" | "BSD" | "BHD" | "BDT" | "BBD" | "BYN" | "BZD" | "XOF" | "BMD" | "INR" | "BTN" | "BOB" | "BAM" | "BWP" | "NOK" | "BRL" | "BND" | "BGN" | "BIF" | "CVE" | "KHR" | "CAD" | "KYD" | "CLP" | "CLF" | "CNY" | "COP" | "KMF" | "CDF" | "NZD" | "CRC" | "HRK" | "CUP" | "ANG" | "CZK" | "DKK" | "DJF" | "DOP" | "EGP" | "SVC" | "ERN" | "SZL" | "ETB" | "FKP" | "FJD" | "XPF" | "GMD" | "GEL" | "GHS" | "GIP" | "GTQ" | "GNF" | "GYD" | "HTG" | "HNL" | "HKD" | "HUF" | "ISK" | "IDR" | "IRR" | "IQD" | "ILS" | "JMD" | "JPY" | "JOD" | "KZT" | "KES" | "KPW" | "KRW" | "KWD" | "KGS" | "LAK" | "LBP" | "LSL" | "ZAR" | "LRD" | "LYD" | "CHF" | "MOP" | "MKD" | "MGA" | "MWK" | "MYR" | "MVR" | "MRU" | "MUR" | "MXN" | "MDL" | "MNT" | "MAD" | "MZN" | "MMK" | "NAD" | "NPR" | "NIO" | "NGN" | "AUD" | "OMR" | "PKR" | "PAB" | "PGK" | "PYG" | "PEN" | "PHP" | "PLN" | "QAR" | "RON" | "RUB" | "RWF" | "SHP" | "WST" | "STN" | "SAR" | "RSD" | "SCR" | "SLL" | "SGD" | "XSU" | "SBD" | "SOS" | "SSP" | "LKR" | "SDG" | "SRD" | "SEK" | "SYP" | "TWD" | "TJS" | "TZS" | "THB" | "TOP" | "TTD" | "TND" | "TRY" | "TMT" | "UGX" | "UAH" | "AED" | "UYU" | "UZS" | "VUV" | "VES" | "VND" | "YER" | "ZMW" | "ZWL" | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                calendar?: {
                    id: string;
                    value?: string | undefined;
                    iso?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                taxRate?: {
                    id: number;
                    rate: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                paymentTerm?: {
                    id: number;
                    value: 0 | 1 | 2 | 3 | 4;
                    x?: number | undefined;
                    y?: number | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                paymentMethod?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                sendingMode?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                defaultOpportunityTypeCreated?: number | undefined;
                defaultPositioningSearchModule?: "resources" | "candidates" | undefined;
                filterPositioningSearchModule?: boolean | undefined;
                smoothAdditionalData?: boolean | undefined;
                profitabilityMethodOfCalculating?: "marginRate" | "brandRate" | undefined;
                showOwnOrderReference?: boolean | undefined;
                defaultMail?: {
                    quotation?: {
                        object: string;
                        body: string;
                    } | undefined;
                    invoice?: {
                        object: string;
                        body: string;
                    } | undefined;
                    deliveryOrder?: {
                        object: string;
                        body: string;
                    } | undefined;
                    timesReports?: {
                        object: string;
                        body: string;
                    } | undefined;
                    expensesReports?: {
                        object: string;
                        body: string;
                    } | undefined;
                    timesReportsAndExpensesReports?: {
                        object: string;
                        body: string;
                    } | undefined;
                    waitingForValidationTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    waitingForValidationExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    waitingForValidationAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    validatedTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    validatedExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    validatedAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    rejectedTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    rejectedExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    rejectedAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    refusedTimesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    refusedExpensesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    refusedAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    removalAbsencesReport?: {
                        object: string;
                        body: string;
                    } | undefined;
                    signatureDocumentRequest?: {
                        object: string;
                        body: string;
                    } | undefined;
                    signatureDocumentReminder?: {
                        object: string;
                        body: string;
                    } | undefined;
                    signatureDocumentValidation?: {
                        object: string;
                        body: string;
                    } | undefined;
                } | undefined;
                showLogoCompany?: boolean | undefined;
                markdownTextDashboard?: string | undefined;
                experience?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                training?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                tool?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                defaultAction?: {
                    pushResource?: string | undefined;
                    pushCandidate?: string | undefined;
                    pushContact?: string | undefined;
                } | undefined;
                activityArea?: {
                    id: string;
                    value?: string | undefined;
                    option?: {
                        id: string;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                expertiseArea?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                duration?: {
                    id: number | number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                languageSpoken?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                languageLevel?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                availability?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                evaluation?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                mobilityArea?: {
                    id: string;
                    value?: string | undefined;
                    option?: {
                        id: string;
                        value?: string | undefined;
                        delete?: boolean | undefined;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                origin?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                classification?: {
                    id: string;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                source?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                criteria?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                situation?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                civility?: {
                    id: number;
                    value?: string | undefined;
                    delete?: boolean | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                defaultNationality?: string | undefined;
                itemInvoice?: {
                    monthly?: {
                        id: "1" | 13 | 14 | "2" | 23 | 24 | "3" | "4";
                        value: string;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                    schedule?: {
                        id: "1" | "2" | "3" | "4";
                        value: string;
                        isEnabled?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                deliveryOrder?: {
                    id: number;
                    value?: string | undefined;
                    maskSignatureBlock: boolean;
                    insert?: {
                        value?: string | undefined;
                        optionLength?: number | undefined;
                        option?: string[] | undefined;
                    }[] | undefined;
                    isEnabled?: boolean | undefined;
                }[] | undefined;
                sharingEntity?: {
                    credentials?: {
                        object: string;
                        body: string;
                    } | undefined;
                    account?: {
                        object: string;
                        body: string;
                    } | undefined;
                    resource?: {
                        object: string;
                        body: string;
                    } | undefined;
                    opportunity?: {
                        object: string;
                        body: string;
                    } | undefined;
                    candidate?: {
                        object: string;
                        body: string;
                    } | undefined;
                    contact?: {
                        object: string;
                        body: string;
                    } | undefined;
                    company?: {
                        object: string;
                        body: string;
                    } | undefined;
                    project?: {
                        object: string;
                        body: string;
                    } | undefined;
                    product?: {
                        object: string;
                        body: string;
                    } | undefined;
                    purchase?: {
                        object: string;
                        body: string;
                    } | undefined;
                    payment?: {
                        object: string;
                        body: string;
                    } | undefined;
                    positioning?: {
                        object: string;
                        body: string;
                    } | undefined;
                    delivery?: {
                        object: string;
                        body: string;
                    } | undefined;
                    groupment?: {
                        object: string;
                        body: string;
                    } | undefined;
                    inactivity?: {
                        object: string;
                        body: string;
                    } | undefined;
                    contract?: {
                        object: string;
                        body: string;
                    } | undefined;
                    advantage?: {
                        object: string;
                        body: string;
                    } | undefined;
                    invoice?: {
                        object: string;
                        body: string;
                    } | undefined;
                    order?: {
                        object: string;
                        body: string;
                    } | undefined;
                    timesheet?: {
                        object: string;
                        body: string;
                    } | undefined;
                    expenses?: {
                        object: string;
                        body: string;
                    } | undefined;
                    absencesRequest?: {
                        object: string;
                        body: string;
                    } | undefined;
                    action?: {
                        object: string;
                        body: string;
                    } | undefined;
                    quotation?: {
                        [key: string]: any;
                        object?: string | undefined;
                        body?: string | undefined;
                    } | undefined;
                } | undefined;
            } | undefined;
            country?: {
                [key: string]: any;
                id: string;
                iso?: string | undefined;
                value?: string | undefined;
            }[] | undefined;
            nationality?: {
                [key: string]: any;
                id: string;
                value?: string | undefined;
            }[] | undefined;
            dashboard?: {
                fiscalYearTerm?: string | undefined;
                recruitmentsFunnelInterviewActions?: number[] | undefined;
                salesFunnelMeetingActions?: number[] | undefined;
            } | undefined;
            lastBackupDate?: string | undefined;
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteApplicationSettings(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postApplicationSettings(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get status
 */
export declare function getApplicationStatus(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteApplicationStatus(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postApplicationStatus(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putApplicationStatus(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get the types of days between 2 dates
 */
export declare function getApplicationWeekendAndBankHolidays(startDate: string, endDate: string, body?: string, { calendar }?: {
    calendar?: string[];
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            date?: string;
            weekend?: boolean;
            bankHoliday?: boolean;
        }[];
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteApplicationWeekendAndBankHolidays(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postApplicationWeekendAndBankHolidays(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putApplicationWeekendAndBankHolidays(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search installed apps
 */
export declare function getApps(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "app";
            attributes?: {
                name?: string;
                code?: string;
                title?: string;
                description?: string;
            };
            relationships?: {
                vendor?: {
                    data: {
                        id: string;
                        "type": "customer";
                    };
                };
            };
        }[];
        included?: {
            id: string;
            type: "customer";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postApps(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteApps(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putApps(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get app's basic data
 */
export declare function getAppsById(body?: {
    urlCallback?: string;
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "app";
            attributes?: {
                name?: string;
                code?: string;
                url?: string;
                integration?: "iFrame" | "module";
                signedRequest?: string;
                isRefreshTokenValidated?: boolean;
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "app";
            attributes?: {
                name?: string;
                code?: string;
                url?: string;
                integration?: "iFrame" | "module";
                signedRequest?: string;
                isRefreshTokenValidated?: boolean;
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Install App
 */
export declare function postAppsByAppCodeInstall(body?: {
    signedRequest: string;
}, { appCode }?: {
    appCode?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        result: boolean;
        expirationDate?: string;
        errorMessage?: string;
        redirectToConfiguration?: boolean;
        visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsByAppCodeInstall(body?: string, { appCode }?: {
    appCode?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsByAppCodeInstall(body?: string, { appCode }?: {
    appCode?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsByAppCodeInstall(body?: string, { appCode }?: {
    appCode?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Uninstall App
 */
export declare function deleteAppsByAppCodeUninstall(body?: {
    signedRequest: string;
}, { appCode }?: {
    appCode?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        result: boolean;
        errorMessage?: string;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsByAppCodeUninstall(body?: string, { appCode }?: {
    appCode?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsByAppCodeUninstall(body?: string, { appCode }?: {
    appCode?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsByAppCodeUninstall(body?: string, { appCode }?: {
    appCode?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsAbsencesAccounts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsAbsencesAccounts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsAbsencesAccounts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsAbsencesAccounts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsAccountingPayroll(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsAccountingPayroll(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsAccountingPayroll(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsAccountingPayroll(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsAdvancedCandidates(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsAdvancedCandidates(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsAdvancedCandidates(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsAdvancedCandidates(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsAdvancedProjects(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsAdvancedProjects(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsAdvancedProjects(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsAdvancedProjects(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsAdvantages(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsAdvantages(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsAdvantages(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsAdvantages(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsAnsweringValidators(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsAnsweringValidators(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsAnsweringValidators(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsAnsweringValidators(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsBackupDatabase(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsBackupDatabase(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsBackupDatabase(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsBackupDatabase(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsContracts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsContracts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsContracts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsContracts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsCorporama(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsCorporama(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsCorporama(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsCorporama(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsCorporateDocuments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsCorporateDocuments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsCorporateDocuments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsCorporateDocuments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsCreateActivityDocuments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsCreateActivityDocuments(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsCreateActivityDocuments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsCreateActivityDocuments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsDataClosing(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsDataClosing(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsDataClosing(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsDataClosing(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsDocTemplates(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsDocTemplates(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsDocTemplates(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsDocTemplates(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsEmailing(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "appemailingresource";
            attributes?: {
                firstName?: string;
                lastName?: string;
                email1?: string;
                email2?: string;
                email3?: string;
                canReadResource?: boolean;
            };
            relationships?: {
                resumes?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsEmailing(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "appemailingresource";
            attributes?: {
                firstName?: string;
                lastName?: string;
                email1?: string;
                email2?: string;
                email3?: string;
                canReadResource?: boolean;
            };
            relationships?: {
                resumes?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsEmailing(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsEmailing(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsExceptionalActivity(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsExceptionalActivity(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsExceptionalActivity(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsExceptionalActivity(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsExtractBi(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsExtractBi(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsExtractBi(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsExtractBi(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsExtractPayroll(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsExtractPayroll(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsExtractPayroll(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsExtractPayroll(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsGcalendar(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsGcalendar(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsGcalendar(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsGcalendar(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsGmail(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsGmail(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsGmail(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsGmail(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsGviewer(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsGviewer(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsGviewer(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsGviewer(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsHourAccounts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsHourAccounts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsHourAccounts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsHourAccounts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsIntranetAccounts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsIntranetAccounts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsIntranetAccounts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsIntranetAccounts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsMarkers(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsMarkers(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsMarkers(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsMarkers(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsMicrosoft(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsMicrosoft(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsMicrosoft(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsMicrosoft(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsNotifications(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsNotifications(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsNotifications(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsNotifications(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsOrganizationCharts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsOrganizationCharts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsOrganizationCharts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsOrganizationCharts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsPlanProduction(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsPlanProduction(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsPlanProduction(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsPlanProduction(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsPostProduction(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsPostProduction(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsPostProduction(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsPostProduction(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsQuotations(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsQuotations(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsQuotations(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsQuotations(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsResourcePlanner(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsResourcePlanner(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsResourcePlanner(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsResourcePlanner(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsSaasEditor(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsSaasEditor(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsSaasEditor(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsSaasEditor(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsSepa(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsSepa(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsSepa(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsSepa(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsSpecialReporting(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsSpecialReporting(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsSpecialReporting(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsSpecialReporting(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteAppsSurvey(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postAppsSurvey(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAppsSurvey(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAppsSurvey(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create an attached flag
 */
export declare function postAttachedFlags(body?: {
    data: {
        "type": "attachedflag";
        relationships: {
            dependsOn: {
                data: {
                    id: string;
                    "type": "resource";
                };
            } | {
                data: {
                    id: string;
                    "type": "candidate";
                };
            } | {
                data: {
                    id: string;
                    "type": "product";
                };
            } | {
                data: {
                    id: string;
                    "type": "opportunity";
                };
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            } | {
                data: {
                    id: string;
                    "type": "purchase";
                };
            } | {
                data: {
                    id: string;
                    "type": "order";
                };
            } | {
                data: {
                    id: string;
                    "type": "invoice";
                };
            } | {
                data: {
                    id: string;
                    "type": "positioning";
                };
            } | {
                data: {
                    id: string;
                    "type": "action";
                };
            } | {
                data: {
                    id: string;
                    "type": "contact";
                };
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            };
            flag: {
                data: {
                    id: string;
                    "type": "flag";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "attachedflag";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "positioning";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "action";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
                flag?: {
                    data: {
                        id: string;
                        "type": "flag";
                    };
                };
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete an attached flag
 */
export declare function deleteAttachedFlags(flag: number, body?: string, { company, opportunity, project, order, product, purchase, action, resource, candidate, positioning, contact, invoice }?: {
    company?: number;
    opportunity?: number;
    project?: number;
    order?: number;
    product?: number;
    purchase?: number;
    action?: number;
    resource?: number;
    candidate?: number;
    positioning?: number;
    contact?: number;
    invoice?: number;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getAttachedFlags(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putAttachedFlags(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search deliveries or purchases with a billing balance
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/billing-deliveries-purchases-balance.csv?keywords=PRJ1*
 *
 */
export declare function getBillingDeliveriesPurchasesBalance(body?: string, { keywords, projectTypes, projectStates, period, startDate, endDate, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    projectTypes?: number[];
    projectStates?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: ({
            id: string;
            "type": "delivery";
            attributes?: {
                startDate?: string;
                endDate?: string;
                title?: string;
                numberOfCorrelatedOrders?: number;
            };
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                };
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                order?: {
                    data: {
                        id: string;
                        "type": "order";
                    };
                };
            };
        } | {
            id: string;
            "type": "purchase";
            attributes?: {
                startDate?: string;
                endDate?: string;
                title?: string;
                numberOfCorrelatedOrders?: number;
            };
            relationships?: {
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                order?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                };
            };
        })[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                numberOfOrders?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                number?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postBillingDeliveriesPurchasesBalance(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteBillingDeliveriesPurchasesBalance(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putBillingDeliveriesPurchasesBalance(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search orders with a monthly billing balance
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/billing-monthly-balance.csv?keywords=BDC1*
 *
 */
export declare function getBillingMonthlyBalance(startMonth: string, body?: string, { keywords, projectTypes, orderPaymentMethods, orderStates, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    projectTypes?: number[];
    orderPaymentMethods?: number[];
    orderStates?: number[];
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
                turnoverProductionExcludingTax?: number | undefined;
                turnoverInvoicedExcludingTax?: number | undefined;
                deltaProductionExcludingTax?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "order";
            attributes?: {
                date?: string;
                "number"?: string;
                reference?: string;
                numberOfInvoices?: number;
                turnoverProductionExcludingTax?: number;
                turnoverInvoicedExcludingTax?: number;
                deltaProductionExcludingTax?: number;
                separateActivityExpensesAndPurchases?: boolean;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
            relationships?: {
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postBillingMonthlyBalance(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteBillingMonthlyBalance(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putBillingMonthlyBalance(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search projects with a billing balance
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/billing-projects-balance.csv?keywords=PRJ1*
 *
 */
export declare function getBillingProjectsBalance(body?: string, { keywords, projectTypes, projectStates, period, startDate, endDate, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    projectTypes?: number[];
    projectStates?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
                turnoverOrderedExcludingTax?: number | undefined;
                turnoverSignedExcludingTax?: number | undefined;
                deltaOrderedExcludingTax?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "project";
            attributes?: {
                creationDate?: string;
                typeOf?: number;
                mode?: number;
                reference?: string;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                turnoverSignedExcludingTax?: number;
                turnoverOrderedExcludingTax?: number;
                deltaOrderedExcludingTax?: number;
                numberOfOrders?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                };
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                };
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postBillingProjectsBalance(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteBillingProjectsBalance(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putBillingProjectsBalance(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search schedules with a billing balance
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/billing-schedules-balance.csv?keywords=BDC1*
 *
 */
export declare function getBillingSchedulesBalance(body?: string, { keywords, projectTypes, orderPaymentMethods, orderStates, period, startDate, endDate, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    projectTypes?: number[];
    orderPaymentMethods?: number[];
    orderStates?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
                turnoverInvoicedExcludingTax?: number | undefined;
                turnoverTermOfPaymentExcludingTax?: number | undefined;
                deltaInvoicedExcludingTax?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "schedule";
            attributes?: {
                date?: string;
                title?: string;
                turnoverTermOfPaymentExcludingTax?: number;
                turnoverInvoicedExcludingTax?: number;
                deltaInvoicedExcludingTax?: number;
                numberOfInvoices?: number;
            };
            relationships?: {
                order?: {
                    data: {
                        id: string;
                        "type": "order";
                    };
                };
                invoice?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "order";
            attributes?: {
                number?: string | undefined;
                reference?: string | undefined;
                separateActivityExpensesAndPurchases?: boolean | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
            relationships?: {
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postBillingSchedulesBalance(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteBillingSchedulesBalance(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putBillingSchedulesBalance(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search business units
 */
export declare function getBusinessUnits(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "businessunit";
            attributes?: {
                name?: string;
            };
            relationships?: {
                includedManagers?: any[];
            };
        }[];
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a business units
 */
export declare function postBusinessUnits(body?: {
    data: {
        "type": "businessunit";
        attributes: {
            name: string;
        };
        relationships?: {
            includedManagers?: {
                data: {
                    id: string;
                    "type": "resource";
                }[];
            };
            excludedManagersInSearch?: {
                data: {
                    id: string;
                    "type": "resource";
                }[];
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            managers?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "businessunit";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
            };
            relationships?: {
                includedManagers?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
                excludedManagersInSearch?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteBusinessUnits(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putBusinessUnits(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty business unit's default information data
 */
export declare function getBusinessUnitsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            managers?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
        };
        data: {
            id: "0";
            "type": "businessunit";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putBusinessUnitsDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            managers?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
        };
        data: {
            id: "0";
            "type": "businessunit";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteBusinessUnitsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postBusinessUnitsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get business unit's basic data
 */
export declare function getBusinessUnitsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            managers?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "businessunit";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
            };
            relationships?: {
                includedManagers?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
                excludedManagersInSearch?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the business unit
 */
export declare function deleteBusinessUnitsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a business unit
 */
export declare function putBusinessUnitsById(body?: {
    data: {
        id: string;
        "type": "businessunit";
        attributes?: {
            name?: string;
        };
        relationships?: {
            includedManagers?: {
                data: {
                    id: string;
                    "type": "resource";
                }[];
            };
            excludedManagersInSearch?: {
                data: {
                    id: string;
                    "type": "resource";
                }[];
            };
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            managers?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "businessunit";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
            };
            relationships?: {
                includedManagers?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
                excludedManagersInSearch?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postBusinessUnitsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search calendars
 */
export declare function getCalendars(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            iso: string;
            value: string;
            subCalendars?: {
                iso: string;
                value: string;
            }[];
        }[];
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postCalendars(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteCalendars(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putCalendars(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty calendar's default data
 */
export declare function getCalendarsDefault(body?: string, { year, iso }?: {
    year?: number;
    iso?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            iso: string;
            value: string;
            name: string;
            year: number;
            weekend: (1 | 2 | 3 | 4 | 5 | 6 | 7)[];
            holidays: string[];
            publicHolidays: string[];
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putCalendarsDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            iso: string;
            value: string;
            name: string;
            year: number;
            weekend: (1 | 2 | 3 | 4 | 5 | 6 | 7)[];
            holidays: string[];
            publicHolidays: string[];
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteCalendarsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postCalendarsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get calendar's basic data
 */
export declare function getCalendarsById(body?: string, { year, iso, id }?: {
    year?: number;
    iso?: string;
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            iso: string;
            value: string;
            name: string;
            year: number;
            weekend: (1 | 2 | 3 | 4 | 5 | 6 | 7)[];
            holidays: string[];
            publicHolidays: string[];
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a calendar
 */
export declare function putCalendarsById(body?: {
    meta: {
        version: string;
        isLogged: boolean;
        language: "fr" | "en";
        [key: string]: any;
    };
    data: {
        id: string;
        year: number;
        weekend: (1 | 2 | 3 | 4 | 5 | 6 | 7)[];
        holidays: string[];
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            iso: string;
            value: string;
            name: string;
            year: number;
            weekend: (1 | 2 | 3 | 4 | 5 | 6 | 7)[];
            holidays: string[];
            publicHolidays: string[];
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteCalendarsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postCalendarsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search candidates
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/candidates.csv?keywords=CAND100*
 *
 */
export declare function getCandidates(body?: string, { keywords, keywordsType, returnMoreData, contractTypes, activityAreas, expertiseAreas, tools, mobilityAreas, experiences, trainings, period, startDate, endDate, flags, candidateStates, perimeterManagersType, availabilityTypes, languages, evaluations, sources, candidateTypes, onlyVisible, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    keywordsType?: string;
    returnMoreData?: string[];
    contractTypes?: number[];
    activityAreas?: string[];
    expertiseAreas?: string[];
    tools?: string[];
    mobilityAreas?: string;
    experiences?: number[];
    trainings?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    candidateStates?: number[];
    perimeterManagersType?: string;
    availabilityTypes?: number[];
    languages?: string[];
    evaluations?: string[];
    sources?: string[];
    candidateTypes?: number[];
    onlyVisible?: boolean;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
            solr?: boolean | undefined;
        };
        data: {
            id: string;
            "type": "candidate";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                civility?: number;
                thumbnail?: string;
                firstName?: string;
                lastName?: string;
                typeOf?: number;
                state?: number;
                isVisible?: boolean;
                skills?: string;
                mobilityAreas?: string[];
                title?: string;
                availability?: any;
                email1?: string;
                email2?: string;
                email3?: string;
                phone1?: string;
                phone2?: string;
                town?: string;
                country?: string;
                source?: {
                    typeOf: number;
                    detail: string;
                };
                numberOfResumes?: number;
                numberOfActivePositionings?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                resume?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "document";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                previousAction?: {
                    data: {
                        id: string;
                        "type": "action";
                    };
                };
                nextAction?: {
                    data: {
                        id: string;
                        "type": "action";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                startDate?: string | undefined;
                typeOf?: number | undefined;
                text?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                startDate?: string | undefined;
                typeOf?: number | undefined;
                text?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a candidate
 */
export declare function postCandidates(body?: {
    data: {
        "type": "candidate";
        attributes: {
            creationDate?: string;
            civility?: number;
            firstName: string;
            lastName: string;
            state?: number;
            stateReason?: {
                typeOf?: number;
                detail?: string;
                [key: string]: any;
            };
            typeOf?: number;
            email1?: string;
            email2?: string;
            email3?: string;
            phone1?: string;
            phone2?: string;
            phone3?: string;
            fax?: string;
            address?: string;
            postcode?: string;
            town?: string;
            country?: string;
            source?: {
                typeOf: number;
                detail: string;
            };
            dateOfBirth?: string;
            mobilityAreas?: string[];
            globalEvaluation?: string;
            evaluations?: ({
                notations: {
                    criteria: number;
                    evaluation: string;
                }[];
                date: string;
                comments: string;
            } | {
                id: string;
                notations: {
                    criteria: number;
                    evaluation: string;
                }[];
                date: string;
                comments: string;
            })[];
            availability?: any;
            isVisible?: boolean;
            informationComments?: string;
            socialNetworks?: {
                network: "facebook" | "viadeo" | "linkedin" | "twitter";
                url: string;
            }[];
            importResumes?: boolean;
            importFiles?: boolean;
            importContractFiles?: boolean;
            importContract?: boolean;
            importFields?: any[];
        };
        relationships?: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            hrManager?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "candidate";
            attributes?: {
                creationDate?: string | undefined;
                updateDate?: string | undefined;
                civility?: number | undefined;
                thumbnail?: string | undefined;
                firstName?: string | undefined;
                lastName?: string | undefined;
                title?: string | undefined;
                typeOf?: number | undefined;
                state?: number | undefined;
                stateReason?: {
                    [key: string]: any;
                    typeOf?: number | undefined;
                    detail?: string | undefined;
                } | undefined;
                email1?: string | undefined;
                email2?: string | undefined;
                email3?: string | undefined;
                phone1?: string | undefined;
                phone2?: string | undefined;
                phone3?: string | undefined;
                fax?: string | undefined;
                address?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
                source?: {
                    typeOf: number;
                    detail: string;
                } | undefined;
                dateOfBirth?: string | undefined;
                mobilityAreas?: string[] | undefined;
                globalEvaluation?: string | undefined;
                evaluations?: {
                    id: string;
                    notations: {
                        criteria: number;
                        evaluation: string;
                    }[];
                    date: string;
                    comments: string;
                    manager: {
                        id: string;
                        firstName: string;
                        lastName: string;
                    };
                }[] | undefined;
                availability?: any;
                isVisible?: boolean | undefined;
                informationComments?: string | undefined;
                socialNetworks?: {
                    network: "facebook" | "viadeo" | "linkedin" | "twitter";
                    url: string;
                }[] | undefined;
            } | undefined;
            relationships?: {
                resource?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
                resumes?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
                state?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteCandidates(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putCandidates(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty candidate's default information data
 */
export declare function getCandidatesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "candidate";
            attributes?: {
                civility?: number;
                state?: number;
                country?: string;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putCandidatesDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "candidate";
            attributes?: {
                civility?: number;
                state?: number;
                country?: string;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteCandidatesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postCandidatesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get candidate's basic data
 */
export declare function getCandidatesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "candidate";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                civility?: number;
                thumbnail?: string;
                firstName?: string;
                lastName?: string;
                title?: string;
                dateOfBirth?: string;
                numberOfResumes?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putCandidatesById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "candidate";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                civility?: number;
                thumbnail?: string;
                firstName?: string;
                lastName?: string;
                title?: string;
                dateOfBirth?: string;
                numberOfResumes?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteCandidatesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postCandidatesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get resource's chart
 */
export declare function getChartsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "chart";
            attributes?: {
                typeOf?: "funnel" | "pie" | "bar" | "gauge";
                graph?: "myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin" | "chargedPeriodTurnoverProductionTurnoverSignedTurnover" | "periodTurnoverChargedMarginPeriodCharged";
                target?: {
                    operator: "<" | "<=" | "=" | ">" | ">=";
                    value: number;
                };
                period?: "thisWeek" | "thisMonth" | "thisQuarterly" | "thisHalfYear" | "thisYear" | "thisFiscalPeriod";
                values?: {
                    value: string;
                    scorecard: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                        typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    };
                }[];
                groupedScorecards?: {
                    interview?: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                        typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    }[];
                    meeting?: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                        typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    }[];
                    clientPresentation?: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                        typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    }[];
                };
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putChartsById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "chart";
            attributes?: {
                typeOf?: "funnel" | "pie" | "bar" | "gauge";
                graph?: "myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin" | "chargedPeriodTurnoverProductionTurnoverSignedTurnover" | "periodTurnoverChargedMarginPeriodCharged";
                target?: {
                    operator: "<" | "<=" | "=" | ">" | ">=";
                    value: number;
                };
                period?: "thisWeek" | "thisMonth" | "thisQuarterly" | "thisHalfYear" | "thisYear" | "thisFiscalPeriod";
                values?: {
                    value: string;
                    scorecard: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                        typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    };
                }[];
                groupedScorecards?: {
                    interview?: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                        typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    }[];
                    meeting?: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                        typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    }[];
                    clientPresentation?: {
                        reference?: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                        category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                        typeOf: "money" | "percentage" | "date" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "separator" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                        dictionaryId?: number;
                    }[];
                };
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteChartsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postChartsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search companies
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/companies.csv?keywords=CSOC100*
 *
 */
export declare function getCompanies(body?: string, { keywords, keywordsType, returnMoreData, states, expertiseAreas, origins, period, startDate, endDate, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    keywordsType?: string;
    returnMoreData?: string[];
    states?: number[];
    expertiseAreas?: string[];
    origins?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
            solr?: boolean | undefined;
        };
        data: {
            id: string;
            "type": "company";
            attributes?: {
                name?: string;
                expertiseArea?: string;
                state?: number;
                informationComments?: string;
                thumbnail?: string;
                website?: string;
                phone1?: string;
                town?: string;
                country?: string;
                creationDate?: string;
                numberbOfActiveOpportunity?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                previousAction?: {
                    data: {
                        id: string;
                        "type": "action";
                    };
                };
                nextAction?: {
                    data: {
                        id: string;
                        "type": "action";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                startDate?: string | undefined;
                typeOf?: number | undefined;
                text?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                startDate?: string | undefined;
                typeOf?: number | undefined;
                text?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a company
 */
export declare function postCompanies(body?: {
    data: {
        "type": "company";
        attributes: {
            creationDate?: string;
            name: string;
            state?: number;
            website?: string;
            phone1?: string;
            fax?: string;
            address?: string;
            postcode?: string;
            town?: string;
            country?: string;
            "number"?: string;
            origin?: {
                typeOf: number;
                detail: string;
            };
            staff?: number;
            expertiseArea?: string;
            informationComments?: string;
            departments?: string[];
            vatNumber?: string;
            registrationNumber?: string;
            legalStatus?: string;
            registeredOffice?: string;
            apeCode?: string;
            billingDetails?: ({
                name: string;
                contact: string;
                phone1: string;
                email1: string;
                email2: string;
                email3: string;
                address1: string;
                address2: string;
                address3: string;
                postcode: string;
                town: string;
                country: string;
                state: boolean;
            } | {
                id: string;
                name: string;
                contact: string;
                phone1: string;
                email1: string;
                email2: string;
                email3: string;
                address1: string;
                address2: string;
                address3: string;
                postcode: string;
                town: string;
                country: string;
                state: boolean;
            })[];
            socialNetworks?: {
                network: "facebook" | "viadeo" | "linkedin" | "twitter";
                url: string;
            }[];
        };
        relationships?: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
            influencers?: {
                data: {
                    id: string;
                    "type": "resource";
                }[];
            };
            parentCompany?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "company";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                thumbnail?: string;
                state?: number;
                website?: string;
                phone1?: string;
                fax?: string;
                address?: string;
                postcode?: string;
                town?: string;
                country?: string;
                "number"?: string;
                origin?: {
                    typeOf: number;
                    detail: string;
                };
                staff?: number;
                expertiseArea?: string;
                informationComments?: string;
                departments?: string[];
                vatNumber?: string;
                registrationNumber?: string;
                legalStatus?: string;
                registeredOffice?: string;
                apeCode?: string;
                billingDetails?: {
                    id: string;
                    name: string;
                    contact: string;
                    phone1: string;
                    email1: string;
                    email2: string;
                    email3: string;
                    address1: string;
                    address2: string;
                    address3: string;
                    postcode: string;
                    town: string;
                    country: string;
                    state: boolean;
                    isUsed: boolean;
                    canEdit: boolean;
                    canDelete: boolean;
                }[];
                socialNetworks?: {
                    network: "facebook" | "viadeo" | "linkedin" | "twitter";
                    url: string;
                }[];
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
                influencers?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
                parentCompany?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
                subsidiaries?: {
                    data: {
                        id: string;
                        "type": "company";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteCompanies(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putCompanies(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty company's default information data
 */
export declare function getCompaniesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "company";
            attributes?: {
                state?: number;
                country?: string;
                staff?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putCompaniesDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "company";
            attributes?: {
                state?: number;
                country?: string;
                staff?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteCompaniesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postCompaniesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get company's basic data
 */
export declare function getCompaniesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "company";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                thumbnail?: string;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the company
 */
export declare function deleteCompaniesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putCompaniesById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "company";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                thumbnail?: string;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postCompaniesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search threads
 */
export declare function getThreads(body?: string, { keywords, typeOf, period, startDate, endDate, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    typeOf?: string;
    period?: string;
    startDate?: string;
    endDate?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a thread
 */
export declare function postThreads(body?: any, { parent }?: {
    parent?: number;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteThreads(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putThreads(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty thread's default basic data
 */
export declare function getThreadsDefault(typeOf: string, body?: string, { resource, candidate, project, contact, company, opportunity, order, invoice, product, purchase, payment, delivery, inactivity, groupment, action, positioning, timesReport, expensesReport, absencesReport, contract, advantage, quotation, thread }?: {
    resource?: number;
    candidate?: number;
    project?: number;
    contact?: number;
    company?: number;
    opportunity?: number;
    order?: number;
    invoice?: number;
    product?: number;
    purchase?: number;
    payment?: number;
    delivery?: number;
    inactivity?: number;
    groupment?: number;
    action?: number;
    positioning?: number;
    timesReport?: number;
    expensesReport?: number;
    absencesReport?: number;
    contract?: number;
    advantage?: number;
    quotation?: number;
    thread?: number;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putThreadsDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteThreadsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postThreadsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get thread's basic data
 */
export declare function getThreadsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete thread
 */
export declare function deleteThreadsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "appOauthRedirection" | "appError";
                detail: string;
                oauth_redirection?: string | undefined;
                app_error?: string | undefined;
                app?: {
                    id: string;
                    name: string;
                    code: string;
                } | undefined;
            }[] | undefined;
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update thread
 */
export declare function putThreadsById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postThreadsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search contacts
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/contacts.csv?keywords=CCON100*
 *
 */
export declare function getContacts(body?: string, { keywords, keywordsType, returnMoreData, states, activityAreas, tools, expertiseAreas, origins, period, startDate, endDate, flags, encoding, exportToDownloadCenter, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    keywordsType?: string;
    returnMoreData?: string[];
    states?: number[];
    activityAreas?: string[];
    tools?: string[];
    expertiseAreas?: string[];
    origins?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    exportToDownloadCenter?: boolean;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
            solr?: boolean | undefined;
        };
        data: {
            id: string;
            "type": "contact";
            attributes?: {
                creationDate?: string;
                civility?: number;
                thumbnail?: string;
                firstName?: string;
                lastName?: string;
                state?: number;
                "function"?: string;
                department?: string;
                email1?: string;
                email2?: string;
                email3?: string;
                phone1?: string;
                phone2?: string;
                town?: string;
                country?: string;
                canReadContact?: boolean;
                canWriteContact?: boolean;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
                lastAction?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "action";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                previousAction?: {
                    data: {
                        id: string;
                        "type": "action";
                    };
                };
                nextAction?: {
                    data: {
                        id: string;
                        "type": "action";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                expertiseArea?: string | undefined;
                thumbnail?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                startDate?: string | undefined;
                typeOf?: number | undefined;
                text?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                startDate?: string | undefined;
                typeOf?: number | undefined;
                text?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                startDate?: string | undefined;
                typeOf?: number | undefined;
                text?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a contact
 */
export declare function postContacts(body?: {
    data: {
        "type": "contact";
        attributes: {
            creationDate?: string;
            civility?: number;
            firstName: string;
            lastName: string;
            state?: number;
            email1?: string;
            email2?: string;
            email3?: string;
            phone1?: string;
            phone2?: string;
            fax?: string;
            address?: string;
            postcode?: string;
            town?: string;
            country?: string;
            origin?: {
                typeOf: number;
                detail: string;
            };
            activityAreas?: string[];
            informationComments?: string;
            tools?: string[];
            department?: string;
            "function"?: string;
            socialNetworks?: {
                network: "facebook" | "viadeo" | "linkedin" | "twitter";
                url: string;
            }[];
        };
        relationships: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
            influencers?: {
                data: {
                    id: string;
                    "type": "resource";
                }[];
            };
            company: {
                data: {
                    id: string;
                    "type": "company";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "contact";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                civility?: number;
                thumbnail?: string;
                firstName?: string;
                lastName?: string;
                state?: number;
                email1?: string;
                email2?: string;
                email3?: string;
                phone1?: string;
                phone2?: string;
                fax?: string;
                address?: string;
                postcode?: string;
                town?: string;
                country?: string;
                origin?: {
                    typeOf: number;
                    detail: string;
                };
                activityAreas?: string[];
                informationComments?: string;
                tools?: string[];
                department?: string;
                "function"?: string;
                socialNetworks?: {
                    network: "facebook" | "viadeo" | "linkedin" | "twitter";
                    url: string;
                }[];
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                influencers?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                phone1?: string | undefined;
                postcode?: string | undefined;
                website?: string | undefined;
                registrationNumber?: string | undefined;
                fax?: string | undefined;
                town?: string | undefined;
                address?: string | undefined;
                country?: string | undefined;
                state?: number | undefined;
                staff?: number | undefined;
                informationComments?: string | undefined;
                departments?: string[] | undefined;
                expertiseArea?: string | undefined;
            } | undefined;
            relationships?: {
                parentCompany?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteContacts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putContacts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty contact's default information data
 */
export declare function getContactsDefault(company: number, body?: string, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "contact";
            attributes?: {
                state?: number;
                address?: string;
                postcode?: string;
                town?: string;
                country?: string;
                origin?: {
                    typeOf: number;
                    detail: string;
                };
                civility?: number;
            };
            relationships: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                company: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                phone1?: string | undefined;
                postcode?: string | undefined;
                website?: string | undefined;
                registrationNumber?: string | undefined;
                fax?: string | undefined;
                town?: string | undefined;
                address?: string | undefined;
                country?: string | undefined;
                state?: number | undefined;
                staff?: number | undefined;
                informationComments?: string | undefined;
                departments?: string[] | undefined;
                expertiseArea?: string | undefined;
            } | undefined;
            relationships?: {
                parentCompany?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putContactsDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "contact";
            attributes?: {
                state?: number;
                address?: string;
                postcode?: string;
                town?: string;
                country?: string;
                origin?: {
                    typeOf: number;
                    detail: string;
                };
                civility?: number;
            };
            relationships: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                company: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                phone1?: string | undefined;
                postcode?: string | undefined;
                website?: string | undefined;
                registrationNumber?: string | undefined;
                fax?: string | undefined;
                town?: string | undefined;
                address?: string | undefined;
                country?: string | undefined;
                state?: number | undefined;
                staff?: number | undefined;
                informationComments?: string | undefined;
                departments?: string[] | undefined;
                expertiseArea?: string | undefined;
            } | undefined;
            relationships?: {
                parentCompany?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteContactsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postContactsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get contact's basic data
 */
export declare function getContactsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "contact";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                civility?: number;
                firstName?: string;
                lastName?: string;
                thumbnail?: string;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the contact
 */
export declare function deleteContactsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putContactsById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "contact";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                civility?: number;
                firstName?: string;
                lastName?: string;
                thumbnail?: string;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postContactsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search contracts
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/contracts.csv?keywords=CTR100*
 *
 */
export declare function getContracts(body?: string, { keywords, resourceTypes, contractTypes, excludeResourceTypes, resourceStates, period, startDate, endDate, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    resourceTypes?: number[];
    contractTypes?: number[];
    excludeResourceTypes?: number[];
    resourceStates?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "contract";
            attributes?: {
                startDate?: string;
                endDate?: string;
                typeOf?: number;
                monthlySalary?: number;
                monthlyExpenses?: number;
                dailyExpenses?: number;
                contractAverageDailyCost?: number;
                employeeType?: number;
                workingTimeType?: number;
                classification?: string;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a contract
 */
export declare function postContracts(body?: {
    data: {
        "type": "contract";
        attributes?: {
            typeOf?: number;
            employeeType?: number;
            workingTimeType?: number;
            numberOfHoursPerWeek?: number;
            classification?: string;
            startDate?: string;
            endDate?: string;
            probationEndDate?: string;
            renewalProbationEndDate?: string;
            monthlySalary?: number;
            hourlySalary?: number;
            forceHourlySalary?: boolean;
            forceContractAverageDailyProductionCost?: boolean;
            contractAverageDailyProductionCost?: number;
            dailyExpenses?: number;
            monthlyExpenses?: number;
            numberOfWorkingDays?: number;
            chargeFactor?: number;
            expensesDetails?: ({
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
            } | {
                id: string;
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
            })[];
            advantageTypes?: {
                reference: number;
            }[];
            exceptionalScales?: {
                reference: number;
                exceptionalRules: {
                    reference: number;
                    priceExcludingTaxOrPriceRate: null | number;
                    grossCostOrSalaryRate: null | number;
                }[];
            }[];
            informationComments?: string;
            currency?: number;
            currencyAgency?: number;
            exchangeRate?: number;
            exchangeRateAgency?: number;
        };
        relationships: {
            dependsOn: {
                data: {
                    id: string;
                    "type": "resource";
                };
            } | {
                data: {
                    id: string;
                    "type": "candidate";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            parentContract?: {
                data: {
                    id: string;
                    "type": "contract";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "wrongContractAverageDailyCost" | "wrongContractAverageDailyCostCandidate";
                detail: string;
                databaseContractAverageDailyCost?: number | undefined;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "contract";
            attributes?: {
                typeOf?: number;
                creationDate?: string;
                updateDate?: string;
                employeeType?: number;
                workingTimeType?: number;
                numberOfHoursPerWeek?: number;
                classification?: string;
                startDate?: string;
                endDate?: string;
                endReason?: number;
                probationEndDate?: string;
                renewalProbationEndDate?: string;
                monthlySalary?: number;
                hourlySalary?: number;
                forceHourlySalary?: boolean;
                contractAverageDailyCost?: number;
                contractAverageDailyProductionCost?: number;
                forceContractAverageDailyProductionCost?: boolean;
                dailyExpenses?: number;
                monthlyExpenses?: number;
                numberOfWorkingDays?: number;
                chargeFactor?: number;
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                }[];
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                }[];
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: null | number;
                        grossCostOrSalaryRate: null | number;
                    }[];
                }[];
                informationComments?: string;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                parentContract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                childContract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                    default?: boolean | undefined;
                }[] | undefined;
                allowExceptionalScalesOnContracts?: boolean | undefined;
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules?: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: number;
                        grossCostOrSalaryRate: number;
                    }[] | undefined;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                startDate?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteContracts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putContracts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty contract's default basic data
 */
export declare function getContractsDefault(body?: string, { resource, parentContract, candidate }?: {
    resource?: number;
    parentContract?: number;
    candidate?: number;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "wrongContractAverageDailyCost" | "wrongContractAverageDailyCostCandidate";
                detail: string;
                databaseContractAverageDailyCost?: number | undefined;
            }[] | undefined;
        };
        data: {
            id: "0";
            "type": "contract";
            attributes?: {
                typeOf?: number;
                employeeType?: number;
                workingTimeType?: number;
                numberOfHoursPerWeek?: number;
                classification?: string;
                startDate?: string;
                endDate?: string;
                monthlySalary?: number;
                hourlySalary?: number;
                forceHourlySalary?: boolean;
                forceContractAverageDailyProductionCost?: boolean;
                contractAverageDailyCost?: number;
                contractAverageDailyProductionCost?: number;
                dailyExpenses?: number;
                monthlyExpenses?: number;
                numberOfWorkingDays?: number;
                chargeFactor?: number;
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                }[];
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                }[];
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: null | number;
                        grossCostOrSalaryRate: null | number;
                    }[];
                }[];
                informationComments?: string;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                parentContract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                contractsSalaryType?: "monthly" | "annual" | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                    default?: boolean | undefined;
                }[] | undefined;
                allowExceptionalScalesOnContracts?: boolean | undefined;
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules?: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: number;
                        grossCostOrSalaryRate: number;
                    }[] | undefined;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                startDate?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putContractsDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "wrongContractAverageDailyCost" | "wrongContractAverageDailyCostCandidate";
                detail: string;
                databaseContractAverageDailyCost?: number | undefined;
            }[] | undefined;
        };
        data: {
            id: "0";
            "type": "contract";
            attributes?: {
                typeOf?: number;
                employeeType?: number;
                workingTimeType?: number;
                numberOfHoursPerWeek?: number;
                classification?: string;
                startDate?: string;
                endDate?: string;
                monthlySalary?: number;
                hourlySalary?: number;
                forceHourlySalary?: boolean;
                forceContractAverageDailyProductionCost?: boolean;
                contractAverageDailyCost?: number;
                contractAverageDailyProductionCost?: number;
                dailyExpenses?: number;
                monthlyExpenses?: number;
                numberOfWorkingDays?: number;
                chargeFactor?: number;
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                }[];
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                }[];
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: null | number;
                        grossCostOrSalaryRate: null | number;
                    }[];
                }[];
                informationComments?: string;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                parentContract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                contractsSalaryType?: "monthly" | "annual" | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                    default?: boolean | undefined;
                }[] | undefined;
                allowExceptionalScalesOnContracts?: boolean | undefined;
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules?: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: number;
                        grossCostOrSalaryRate: number;
                    }[] | undefined;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                startDate?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteContractsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postContractsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get contract's basic data
 */
export declare function getContractsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "wrongContractAverageDailyCost" | "wrongContractAverageDailyCostCandidate";
                detail: string;
                databaseContractAverageDailyCost?: number | undefined;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "contract";
            attributes?: {
                typeOf?: number;
                creationDate?: string;
                updateDate?: string;
                employeeType?: number;
                workingTimeType?: number;
                numberOfHoursPerWeek?: number;
                classification?: string;
                startDate?: string;
                endDate?: string;
                endReason?: number;
                probationEndDate?: string;
                renewalProbationEndDate?: string;
                monthlySalary?: number;
                hourlySalary?: number;
                forceHourlySalary?: boolean;
                contractAverageDailyCost?: number;
                contractAverageDailyProductionCost?: number;
                forceContractAverageDailyProductionCost?: boolean;
                dailyExpenses?: number;
                monthlyExpenses?: number;
                numberOfWorkingDays?: number;
                chargeFactor?: number;
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                }[];
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                }[];
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: null | number;
                        grossCostOrSalaryRate: null | number;
                    }[];
                }[];
                informationComments?: string;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                parentContract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                childContract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                    default?: boolean | undefined;
                }[] | undefined;
                allowExceptionalScalesOnContracts?: boolean | undefined;
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules?: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: number;
                        grossCostOrSalaryRate: number;
                    }[] | undefined;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                startDate?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the contract
 */
export declare function deleteContractsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a contract
 */
export declare function putContractsById(body?: {
    data: {
        id: string;
        "type": "contract";
        attributes?: {
            typeOf?: number;
            employeeType?: number;
            workingTimeType?: number;
            numberOfHoursPerWeek?: number;
            classification?: string;
            startDate?: string;
            endDate?: string;
            probationEndDate?: string;
            renewalProbationEndDate?: string;
            monthlySalary?: number;
            hourlySalary?: number;
            forceHourlySalary?: boolean;
            forceContractAverageDailyProductionCost?: boolean;
            contractAverageDailyProductionCost?: number;
            dailyExpenses?: number;
            monthlyExpenses?: number;
            numberOfWorkingDays?: number;
            chargeFactor?: number;
            expensesDetails?: ({
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
            } | {
                id: string;
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
            })[];
            advantageTypes?: {
                reference: number;
            }[];
            exceptionalScales?: {
                reference: number;
                exceptionalRules: {
                    reference: number;
                    priceExcludingTaxOrPriceRate: null | number;
                    grossCostOrSalaryRate: null | number;
                }[];
            }[];
            informationComments?: string;
            currency?: number;
            currencyAgency?: number;
            exchangeRate?: number;
            exchangeRateAgency?: number;
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "wrongContractAverageDailyCost" | "wrongContractAverageDailyCostCandidate";
                detail: string;
                databaseContractAverageDailyCost?: number | undefined;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "contract";
            attributes?: {
                typeOf?: number;
                creationDate?: string;
                updateDate?: string;
                employeeType?: number;
                workingTimeType?: number;
                numberOfHoursPerWeek?: number;
                classification?: string;
                startDate?: string;
                endDate?: string;
                endReason?: number;
                probationEndDate?: string;
                renewalProbationEndDate?: string;
                monthlySalary?: number;
                hourlySalary?: number;
                forceHourlySalary?: boolean;
                contractAverageDailyCost?: number;
                contractAverageDailyProductionCost?: number;
                forceContractAverageDailyProductionCost?: boolean;
                dailyExpenses?: number;
                monthlyExpenses?: number;
                numberOfWorkingDays?: number;
                chargeFactor?: number;
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                }[];
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                }[];
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: null | number;
                        grossCostOrSalaryRate: null | number;
                    }[];
                }[];
                informationComments?: string;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                parentContract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                childContract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                    default?: boolean | undefined;
                }[] | undefined;
                allowExceptionalScalesOnContracts?: boolean | undefined;
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules?: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: number;
                        grossCostOrSalaryRate: number;
                    }[] | undefined;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                startDate?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postContractsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get boondmanager contract's basic data
 */
export declare function getBoondmanagerContractsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "boondmanagercontract";
            attributes?: {
                creationDate?: string;
                documentLink?: string;
                validatorDate?: string;
                validatorFirstName?: string;
                validatorLastName?: string;
                validatorFunction?: string;
                validatorState?: boolean;
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a contract
 */
export declare function putBoondmanagerContractsById(body?: {
    data: {
        id: string;
        "type": "boondmanagercontract";
        attributes?: {
            validatorFirstName?: string;
            validatorLastName?: string;
            validatorFunction?: string;
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "boondmanagercontract";
            attributes?: {
                creationDate?: string;
                documentLink?: string;
                validatorDate?: string;
                validatorFirstName?: string;
                validatorLastName?: string;
                validatorFunction?: string;
                validatorState?: boolean;
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteBoondmanagerContractsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postBoondmanagerContractsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get resource's dashboard
 */
export declare function getDashboard(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "dashboard";
            attributes?: {
                charts?: {
                    id: string;
                    typeOf: "funnel" | "pie" | "bar" | "gauge";
                }[];
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putDashboard(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "dashboard";
            attributes?: {
                charts?: {
                    id: string;
                    typeOf: "funnel" | "pie" | "bar" | "gauge";
                }[];
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteDashboard(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postDashboard(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a delivery
 */
export declare function postDeliveries(body?: {
    data: {
        "type": "delivery";
        attributes?: {
            startDate?: string;
            endDate?: string;
            title?: string;
            typeOf?: number;
            state?: number;
            averageDailyPriceExcludingTax?: number;
            forceAverageDailyPriceExcludingTax?: boolean;
            averageDailyContractCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            numberOfDaysFree?: number;
            informationComments?: string;
            conditions?: string;
            dailyExpenses?: number;
            monthlyExpenses?: number;
            numberOfWorkingDays?: number;
            weeklyWorkingHours?: number;
            averageHourlyPriceExcludingTax?: number;
            forceAverageHourlyPriceExcludingTax?: boolean;
            additionalTurnoverAndCosts?: {
                id: string;
                date: string;
                state: boolean;
                title: string;
                turnoverExcludingTax: number;
                costsExcludingTax: number;
                typeOf: number;
                purchase: {
                    data: null;
                } | {
                    id: string;
                    title?: string;
                    subscription: number;
                };
            }[];
            expensesDetails?: ({
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
                agency: {
                    id: string;
                };
            } | {
                id: string;
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
                agency: {
                    id: string;
                };
            })[];
            advantageTypes?: {
                reference: number;
                frequency?: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                category?: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                participationQuota?: number;
                agencyQuota?: number;
                employeeQuota?: number;
                agency?: {
                    id: string;
                };
            }[];
            exceptionalScales?: {
                reference: number;
                exceptionalRules: {
                    reference: number;
                    priceExcludingTaxOrPriceRate: null | number;
                    grossCostOrSalaryRate: null | number;
                }[];
                dependsOn: {
                    id: string;
                    "type": "agency";
                } | {
                    id: string;
                    "type": "company";
                };
            }[];
        };
        relationships: {
            project: {
                data: {
                    id: string;
                    "type": "project";
                };
            };
            dependsOn: {
                data: {
                    id: string;
                    "type": "resource";
                };
            } | {
                data: {
                    id: string;
                    "type": "product";
                };
            };
            contract?: {
                data: {
                    id: string;
                    "type": "contract";
                };
            };
            slave?: {
                data: {
                    id: string;
                    "type": "delivery";
                };
            };
            groupment?: {
                data: {
                    id: string;
                    "type": "groupment";
                };
            };
        };
    };
}, { forceTransferCreation, contact, company, projectTypeOf, opportunityTitle, addPositioning, sendMailToDependsOnManager, sendMailToProjectManager }?: {
    forceTransferCreation?: boolean;
    contact?: number;
    company?: number;
    projectTypeOf?: number;
    opportunityTitle?: string;
    addPositioning?: boolean;
    sendMailToDependsOnManager?: boolean;
    sendMailToProjectManager?: boolean;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "delivery";
            attributes?: {
                startDate?: string;
                endDate?: string;
                title?: string;
                typeOf?: number;
                state?: number;
                canShowAverageDailyContractCost?: boolean;
                averageDailyPriceExcludingTax?: number;
                forceAverageDailyPriceExcludingTax?: boolean;
                averageDailyCost?: number;
                averageDailyContractCost?: number;
                numberOfDaysInvoicedOrQuantity?: number;
                numberOfDaysFree?: number;
                informationComments?: string;
                conditions?: string;
                turnoverSimulatedExcludingTax?: number;
                costsSimulatedExcludingTax?: number;
                marginSimulatedExcludingTax?: number;
                profitabilitySimulated?: number;
                occupationRate?: number;
                dailyExpenses?: number;
                monthlyExpenses?: number;
                numberOfWorkingDays?: number;
                weeklyWorkingHours?: number;
                averageHourlyPriceExcludingTax?: number;
                forceAverageHourlyPriceExcludingTax?: boolean;
                additionalTurnoverAndCosts?: {
                    id: string;
                    date: string;
                    state: boolean;
                    title: string;
                    turnoverExcludingTax: number;
                    costsExcludingTax: number;
                    typeOf: number;
                    purchase: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        subscription: number;
                    };
                }[];
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[];
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[];
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: null | number;
                        grossCostOrSalaryRate: null | number;
                    }[];
                    dependsOn: {
                        id: string;
                        "type": "agency";
                        name: string;
                        currency: number;
                        exchangeRate: number;
                        exceptionScales?: {
                            reference: number;
                            exceptionalRules?: {
                                reference: number;
                                name: string;
                                priceExcludingTaxOrPriceRate: number;
                                grossCostOrSalaryRate: number;
                            }[];
                        }[];
                    } | {
                        id: string;
                        "type": "company";
                        name: string;
                        exceptionScales?: {
                            reference: number;
                            exceptionalRules: {
                                reference: number;
                                name: string;
                                priceExcludingTaxOrPriceRate: number;
                                grossCostOrSalaryRate: number;
                            }[];
                        }[];
                    };
                    agency?: {
                        id: string;
                        name: string;
                        currency: number;
                        exchangeRate: number;
                        workUnitTypes: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        }[];
                    };
                }[];
                creationDate?: string;
                updateDate?: string;
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                };
                contract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                purchase?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                };
                groupment?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "groupment";
                    };
                };
                master?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
                slave?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                contracts?: {
                    data: {
                        id: string;
                        "type": "contract";
                    }[];
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                name?: string | undefined;
                subscription?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                    state: boolean;
                }[] | undefined;
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules?: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: number;
                        grossCostOrSalaryRate: number;
                    }[] | undefined;
                }[] | undefined;
                exchangeRate?: number | undefined;
                currency?: number | undefined;
                allowAdvantagesOnProjects?: boolean | undefined;
                allowExceptionalScalesOnProjects?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                technical?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: number;
                        grossCostOrSalaryRate: number;
                    }[];
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                contractAverageDailyCost?: number | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                monthlySalary?: number | undefined;
                dailyExpenses?: number | undefined;
                monthlyExpenses?: number | undefined;
                currency?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRate?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "purchase";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getDeliveries(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteDeliveries(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putDeliveries(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get delivery's basic data
 */
export declare function getDeliveriesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "delivery";
            attributes?: {
                startDate?: string;
                endDate?: string;
                title?: string;
                typeOf?: number;
                state?: number;
                canShowAverageDailyContractCost?: boolean;
                averageDailyPriceExcludingTax?: number;
                forceAverageDailyPriceExcludingTax?: boolean;
                averageDailyCost?: number;
                averageDailyContractCost?: number;
                numberOfDaysInvoicedOrQuantity?: number;
                numberOfDaysFree?: number;
                informationComments?: string;
                conditions?: string;
                turnoverSimulatedExcludingTax?: number;
                costsSimulatedExcludingTax?: number;
                marginSimulatedExcludingTax?: number;
                profitabilitySimulated?: number;
                occupationRate?: number;
                dailyExpenses?: number;
                monthlyExpenses?: number;
                numberOfWorkingDays?: number;
                weeklyWorkingHours?: number;
                averageHourlyPriceExcludingTax?: number;
                forceAverageHourlyPriceExcludingTax?: boolean;
                additionalTurnoverAndCosts?: {
                    id: string;
                    date: string;
                    state: boolean;
                    title: string;
                    turnoverExcludingTax: number;
                    costsExcludingTax: number;
                    typeOf: number;
                    purchase: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        subscription: number;
                    };
                }[];
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[];
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[];
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: null | number;
                        grossCostOrSalaryRate: null | number;
                    }[];
                    dependsOn: {
                        id: string;
                        "type": "agency";
                        name: string;
                        currency: number;
                        exchangeRate: number;
                        exceptionScales?: {
                            reference: number;
                            exceptionalRules?: {
                                reference: number;
                                name: string;
                                priceExcludingTaxOrPriceRate: number;
                                grossCostOrSalaryRate: number;
                            }[];
                        }[];
                    } | {
                        id: string;
                        "type": "company";
                        name: string;
                        exceptionScales?: {
                            reference: number;
                            exceptionalRules: {
                                reference: number;
                                name: string;
                                priceExcludingTaxOrPriceRate: number;
                                grossCostOrSalaryRate: number;
                            }[];
                        }[];
                    };
                    agency?: {
                        id: string;
                        name: string;
                        currency: number;
                        exchangeRate: number;
                        workUnitTypes: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        }[];
                    };
                }[];
                creationDate?: string;
                updateDate?: string;
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                };
                contract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                purchase?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                };
                groupment?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "groupment";
                    };
                };
                master?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
                slave?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                contracts?: {
                    data: {
                        id: string;
                        "type": "contract";
                    }[];
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                name?: string | undefined;
                subscription?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                    state: boolean;
                }[] | undefined;
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules?: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: number;
                        grossCostOrSalaryRate: number;
                    }[] | undefined;
                }[] | undefined;
                exchangeRate?: number | undefined;
                currency?: number | undefined;
                allowAdvantagesOnProjects?: boolean | undefined;
                allowExceptionalScalesOnProjects?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                technical?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: number;
                        grossCostOrSalaryRate: number;
                    }[];
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                contractAverageDailyCost?: number | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                monthlySalary?: number | undefined;
                dailyExpenses?: number | undefined;
                monthlyExpenses?: number | undefined;
                currency?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRate?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "purchase";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the delivery
 */
export declare function deleteDeliveriesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a delivery
 */
export declare function putDeliveriesById(body?: {
    data: {
        id: string;
        "type": "delivery";
        attributes?: {
            startDate?: string;
            endDate?: string;
            title?: string;
            typeOf?: number;
            state?: number;
            averageDailyPriceExcludingTax?: number;
            forceAverageDailyPriceExcludingTax?: boolean;
            averageDailyContractCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            numberOfDaysFree?: number;
            informationComments?: string;
            conditions?: string;
            dailyExpenses?: number;
            monthlyExpenses?: number;
            numberOfWorkingDays?: number;
            weeklyWorkingHours?: number;
            averageHourlyPriceExcludingTax?: number;
            forceAverageHourlyPriceExcludingTax?: boolean;
            additionalTurnoverAndCosts?: {
                id: string;
                date: string;
                state: boolean;
                title: string;
                turnoverExcludingTax: number;
                costsExcludingTax: number;
                typeOf: number;
                purchase: {
                    data: null;
                } | {
                    id: string;
                    title?: string;
                    subscription: number;
                };
            }[];
            expensesDetails?: ({
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
                agency: {
                    id: string;
                };
            } | {
                id: string;
                expenseType: {
                    reference: number;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
                agency: {
                    id: string;
                };
            })[];
            advantageTypes?: {
                reference: number;
                frequency?: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                category?: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                participationQuota?: number;
                agencyQuota?: number;
                employeeQuota?: number;
                agency?: {
                    id: string;
                };
            }[];
            exceptionalScales?: {
                reference: number;
                exceptionalRules: {
                    reference: number;
                    priceExcludingTaxOrPriceRate: null | number;
                    grossCostOrSalaryRate: null | number;
                }[];
                dependsOn: {
                    id: string;
                    "type": "agency";
                } | {
                    id: string;
                    "type": "company";
                };
            }[];
        };
        relationships?: {
            contract?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "contract";
                };
            };
            slave?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "delivery";
                };
            };
        };
    };
}, { contact, forceTransferCreation, company, projectTypeOf, opportunityTitle, id }?: {
    contact?: number;
    forceTransferCreation?: boolean;
    company?: number;
    projectTypeOf?: number;
    opportunityTitle?: string;
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "delivery";
            attributes?: {
                startDate?: string;
                endDate?: string;
                title?: string;
                typeOf?: number;
                state?: number;
                canShowAverageDailyContractCost?: boolean;
                averageDailyPriceExcludingTax?: number;
                forceAverageDailyPriceExcludingTax?: boolean;
                averageDailyCost?: number;
                averageDailyContractCost?: number;
                numberOfDaysInvoicedOrQuantity?: number;
                numberOfDaysFree?: number;
                informationComments?: string;
                conditions?: string;
                turnoverSimulatedExcludingTax?: number;
                costsSimulatedExcludingTax?: number;
                marginSimulatedExcludingTax?: number;
                profitabilitySimulated?: number;
                occupationRate?: number;
                dailyExpenses?: number;
                monthlyExpenses?: number;
                numberOfWorkingDays?: number;
                weeklyWorkingHours?: number;
                averageHourlyPriceExcludingTax?: number;
                forceAverageHourlyPriceExcludingTax?: boolean;
                additionalTurnoverAndCosts?: {
                    id: string;
                    date: string;
                    state: boolean;
                    title: string;
                    turnoverExcludingTax: number;
                    costsExcludingTax: number;
                    typeOf: number;
                    purchase: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        subscription: number;
                    };
                }[];
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[];
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[];
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: null | number;
                        grossCostOrSalaryRate: null | number;
                    }[];
                    dependsOn: {
                        id: string;
                        "type": "agency";
                        name: string;
                        currency: number;
                        exchangeRate: number;
                        exceptionScales?: {
                            reference: number;
                            exceptionalRules?: {
                                reference: number;
                                name: string;
                                priceExcludingTaxOrPriceRate: number;
                                grossCostOrSalaryRate: number;
                            }[];
                        }[];
                    } | {
                        id: string;
                        "type": "company";
                        name: string;
                        exceptionScales?: {
                            reference: number;
                            exceptionalRules: {
                                reference: number;
                                name: string;
                                priceExcludingTaxOrPriceRate: number;
                                grossCostOrSalaryRate: number;
                            }[];
                        }[];
                    };
                    agency?: {
                        id: string;
                        name: string;
                        currency: number;
                        exchangeRate: number;
                        workUnitTypes: {
                            reference: number;
                            activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                            name: string;
                        }[];
                    };
                }[];
                creationDate?: string;
                updateDate?: string;
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                };
                contract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                purchase?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                };
                groupment?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "groupment";
                    };
                };
                master?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
                slave?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                contracts?: {
                    data: {
                        id: string;
                        "type": "contract";
                    }[];
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                name?: string | undefined;
                subscription?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                advantageTypes?: {
                    reference: number;
                    name: string;
                    frequency: "punctual" | "daily" | "monthly" | "quarterly" | "semiAnnual" | "annual";
                    category: "fixedAmount" | "variableSalaryBasis" | "package" | "loan";
                    participationQuota: number;
                    agencyQuota: number;
                    employeeQuota: number;
                    state: boolean;
                }[] | undefined;
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules?: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: number;
                        grossCostOrSalaryRate: number;
                    }[] | undefined;
                }[] | undefined;
                exchangeRate?: number | undefined;
                currency?: number | undefined;
                allowAdvantagesOnProjects?: boolean | undefined;
                allowExceptionalScalesOnProjects?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                technical?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                exceptionalScales?: {
                    reference: number;
                    name: string;
                    workUnitTypes: {
                        reference: number;
                        name: string;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    }[];
                    exceptionalRules: {
                        reference: number;
                        name: string;
                        priceExcludingTaxOrPriceRate: number;
                        grossCostOrSalaryRate: number;
                    }[];
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                contractAverageDailyCost?: number | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                monthlySalary?: number | undefined;
                dailyExpenses?: number | undefined;
                monthlyExpenses?: number | undefined;
                currency?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRate?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "purchase";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postDeliveriesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search deliveries & groupments
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/deliveries-groupments.csv?keywords=MIS100*
 *
 */
export declare function getDeliveriesGroupments(body?: string, { keywords, projectTypes, projectStates, deliveryStates, expertiseAreas, activityAreas, transferType, sumAdditionalData, showGroupment, period, startDate, endDate, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    projectTypes?: number[];
    projectStates?: number[];
    deliveryStates?: number[];
    expertiseAreas?: string[];
    activityAreas?: string;
    transferType?: string;
    sumAdditionalData?: boolean;
    showGroupment?: boolean;
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
                turnoverSimulatedExcludingTax?: number | undefined;
                marginSimulatedExcludingTax?: number | undefined;
                profitabilitySimulated?: number | undefined;
            } | undefined;
        };
        data: ({
            id: string;
            "type": "delivery";
            attributes?: {
                startDate?: string;
                endDate?: string;
                title?: string;
                turnoverSimulatedExcludingTax?: number;
                marginSimulatedExcludingTax?: number;
                profitabilitySimulated?: number;
                canReadDelivery?: boolean;
            };
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                };
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                groupment?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
            };
        } | {
            id: string;
            "type": "groupment";
            attributes?: {
                startDate?: string;
                endDate?: string;
                title?: string;
                turnoverSimulatedExcludingTax?: number;
                marginSimulatedExcludingTax?: number;
                profitabilitySimulated?: number;
                canReadGroupment?: boolean;
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
            };
        })[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postDeliveriesGroupments(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteDeliveriesGroupments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putDeliveriesGroupments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the device
 */
export declare function deleteDevicesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getDevicesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putDevicesById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postDevicesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a document
 */
export declare function postDocuments(body?: {
    parentType: string;
    parentId: number;
    expenseId?: number;
    qualify?: boolean;
    ocr?: boolean;
    file?: any;
    fileUrl?: string;
    parsing?: boolean;
    hash?: string;
    parsingData?: string;
    temporary?: boolean;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
                category?: "other" | "signedProof" | "signatureRequested" | undefined;
                ocrData?: {
                    [key: string]: any;
                    expenseSummary?: {
                        [key: string]: any;
                        startDate?: string | undefined;
                        expenseType?: {
                            [key: string]: any;
                            reference?: number | undefined;
                            taxRate?: number | undefined;
                        } | undefined;
                        amountExcludingTax?: number | undefined;
                        taxAmount?: number | undefined;
                        tax?: number | undefined;
                        currency?: number | undefined;
                        isKilometricExpense?: any;
                    } | undefined;
                }[] | undefined;
            } | undefined;
            relationships?: {
                [key: string]: any;
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        };
        included?: {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                canReadProject?: boolean | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getDocuments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: Blob;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteDocuments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putDocuments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search documents for app's viewer.
 *
 * You must have an app's viewer installed.
 *
 */
export declare function getDocumentsViewer(body?: string, { documents }?: {
    documents?: string[];
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "appError";
                detail: string;
                app_error?: string | undefined;
                app?: {
                    id: string;
                    name: string;
                    code: string;
                } | undefined;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "document";
            attributes?: {
                name?: string;
                urlEmbedded?: string;
                urlMain?: string;
            };
        }[];
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postDocumentsViewer(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteDocumentsViewer(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putDocumentsViewer(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get document content
 */
export declare function getDocumentsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: Blob;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update information data related to a document
 */
export declare function putDocumentsById(body?: {
    data: {
        id: string;
        "type": "document";
        attributes?: {
            name: string;
            category: "other" | "signedProof" | "signatureRequested";
        };
        relationships?: {
            project?: {
                data: {
                    id: string;
                    "type": "project";
                };
            };
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        data: {
            id: string;
            "type": "document";
            attributes?: {
                name?: string;
                category?: "other" | "signedProof" | "signatureRequested";
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
            };
        };
        included?: ({
            id: string;
            "type": "project";
            attributes?: {
                reference?: string;
                canReadProject?: boolean;
            };
        })[];
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the document
 */
export declare function deleteDocumentsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postDocumentsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Manage download center
 *
 */
export declare function getDownloadCenter(body?: string, { perimeterManagers, folder }?: {
    perimeterManagers?: number[];
    folder?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "downloadcenterfolder";
            attributes?: {
                name?: string;
                urlVisitor?: string;
                isLocked?: any;
            };
            relationships?: {
                files?: {
                    data: {
                        id: string;
                        "type": "downloadcenterfile";
                    }[];
                };
            };
        }[];
        included?: {
            id: string;
            type: "downloadcenterfile";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putDownloadCenter(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "downloadcenterfolder";
            attributes?: {
                name?: string;
                urlVisitor?: string;
                isLocked?: any;
            };
            relationships?: {
                files?: {
                    data: {
                        id: string;
                        "type": "downloadcenterfile";
                    }[];
                };
            };
        }[];
        included?: {
            id: string;
            type: "downloadcenterfile";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteDownloadCenter(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postDownloadCenter(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search download center's files
 *
 */
export declare function getDownloadCenterByPerimeterManagerAndFolder(body?: string, { key, customerCode, perimeterManager, folder }?: {
    key?: string;
    customerCode?: string;
    perimeterManager?: string;
    folder?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "downloadcenterfolder";
            attributes?: {
                name?: string;
                urlVisitor?: string;
            };
            relationships?: {
                files?: {
                    data: {
                        id: string;
                        "type": "downloadcenterfile";
                    }[];
                };
            };
        };
        included?: {
            id: string;
            type: "downloadcenterfile";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the download center's folder
 */
export declare function deleteDownloadCenterByPerimeterManagerAndFolder(body?: string, { perimeterManager, folder }?: {
    perimeterManager?: string;
    folder?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putDownloadCenterByPerimeterManagerAndFolder(body?: any, { perimeterManager, folder }?: {
    perimeterManager?: string;
    folder?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "downloadcenterfolder";
            attributes?: {
                name?: string;
                urlVisitor?: string;
            };
            relationships?: {
                files?: {
                    data: {
                        id: string;
                        "type": "downloadcenterfile";
                    }[];
                };
            };
        };
        included?: {
            id: string;
            type: "downloadcenterfile";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postDownloadCenterByPerimeterManagerAndFolder(body?: string, { perimeterManager, folder }?: {
    perimeterManager?: string;
    folder?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete sign request
 */
export declare function deleteSignatures(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getSignatures(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putSignatures(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postSignatures(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search expenses
 *
 * This API is accessible only if :
 * * x-JWT security scheme is used
 * * `allRights` into the payload is `true`
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/expenses.csv?keywords=TPS1*
 *
 */
export declare function getExpenses(body?: string, { keywords, activityType, category, resourceTypes, excludeResourceTypes, period, startDate, endDate, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    activityType?: "absence" | "internal" | "production";
    category?: "actual" | "fixed";
    resourceTypes?: number[];
    excludeResourceTypes?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "expense";
            attributes?: {
                category?: "actual" | "fixed";
                activityType?: "production" | "absence" | "internal";
                expenseType?: {
                    reference: number;
                    taxRate: number;
                    name: string;
                };
                row?: number;
                startDate?: string;
                reinvoiced?: boolean;
                amountIncludingTax?: number;
                tax?: number;
                numberOfKilometers?: number;
                "number"?: number;
                title?: string;
                currency?: number;
                exchangeRate?: number;
                isKilometricExpense?: boolean;
            };
            relationships?: {
                expensesReport?: {
                    data: {
                        id: string;
                        "type": "expensesreport";
                    };
                };
                delivery?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
                batch?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "batch";
                    };
                };
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "expensesreport";
            attributes?: {
                term?: string | undefined;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected" | undefined;
                ratePerKilometerType?: {
                    reference: number;
                    name: string;
                    amount: number;
                } | undefined;
                advance?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "batch";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postExpenses(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteExpenses(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putExpenses(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search expenses
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/expenses-reports.csv?keywords=EXP1*
 *
 */
export declare function getExpensesReports(startMonth: string, endMonth: string, body?: string, { keywords, perimeterAgenciesType, resourceTypes, validationStates, closed, encoding, extractType, exportToDownloadCenter, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    perimeterAgenciesType?: string;
    resourceTypes?: number[];
    validationStates?: ("waitingForValidation" | "validated" | "rejected")[];
    closed?: boolean;
    encoding?: string;
    extractType?: string;
    exportToDownloadCenter?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
            canExportCertified?: boolean | undefined;
        };
        data: {
            id: string;
            "type": "expensesreport";
            attributes?: {
                term?: string;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                paid?: boolean;
                closed?: boolean;
            };
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create an expenses
 */
export declare function postExpensesReports(body?: {
    data: {
        "type": "expensesreport";
        attributes: {
            term: string;
            informationComments?: string;
            ratePerKilometerType?: {
                reference: number;
                amount: number;
            };
            paid?: boolean;
            advance?: number;
            actualExpenses?: ({
                startDate: string;
                "number": number;
                title: string;
                currency?: number;
                exchangeRate?: number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                tax?: number;
                reinvoiced: boolean;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                "number": number;
                title: string;
                currency?: number;
                exchangeRate?: number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                tax?: number;
                reinvoiced: boolean;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            })[];
            fixedExpenses?: ({
                startDate: string;
                row: number | number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                row: number | number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            })[];
        };
        relationships: {
            resource: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "expensesOutsideContractDates" | "expensesOutsideDeliveryDates";
                detail: string;
                project: {
                    data: null;
                } | {
                    id: string;
                    reference: string;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                    title: string;
                    startDate: string;
                    endDate: string;
                };
            }[] | undefined;
            expectedValidatorsAllowedForValidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForUnvalidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForReject?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            isOcrEnabled?: boolean | undefined;
        };
        data: {
            id: string;
            "type": "expensesreport";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                term?: string;
                informationComments?: string;
                closed?: boolean;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                ratePerKilometerType?: {
                    reference: number;
                    name: string;
                    amount: number;
                };
                paid?: boolean;
                advance?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                actualExpenses?: {
                    id: string;
                    startDate: string;
                    "number": number;
                    title: string;
                    currency: number;
                    exchangeRate: number;
                    numberOfKilometers: number;
                    amountIncludingTax: number;
                    tax: number;
                    reinvoiced: boolean;
                    isKilometricExpense: boolean;
                    activityType: "production" | "absence" | "internal";
                    file?: string;
                    expenseType: {
                        data: null;
                    } | {
                        reference: number;
                        taxRate: number;
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[];
                fixedExpenses?: {
                    id: string;
                    startDate: string;
                    row: number;
                    numberOfKilometers: number;
                    amountIncludingTax: number;
                    isKilometricExpense: boolean;
                    activityType: "production" | "absence" | "internal";
                    expenseType: {
                        data: null;
                    } | {
                        reference: number;
                        taxRate: number;
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[];
                projectsExpenses?: {
                    startDate: string;
                    row: number;
                    numberOfKilometers: number;
                    amountIncludingTax: number;
                    isKilometricExpense: boolean;
                    activityType: "production" | "absence" | "internal";
                    expenseType: {
                        data: null;
                    } | {
                        reference: number;
                        taxRate: number;
                        name: string;
                    };
                    delivery: {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    project: {
                        id: string;
                        reference?: string;
                    };
                }[];
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
                timesReport?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "timesreport";
                    };
                };
                orders?: {
                    data: {
                        id: string;
                        "type": "order";
                    }[];
                };
                projects?: {
                    data: {
                        id: string;
                        "type": "project";
                    }[];
                };
                validations?: {
                    data: {
                        id: string;
                        "type": "validation";
                    }[];
                };
                validationWorkflow?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
                certification?: {
                    data: {
                        id: string;
                        "type": "expenseshistory";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                ratePerKilometerTypes?: {
                    reference: number;
                    name: string;
                    amount: number;
                }[] | undefined;
                expensesLegals?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "batch";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                deliveries?: any[] | undefined;
                batches?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "validation";
            attributes?: {
                date?: string | undefined;
                state?: "waitingForValidation" | "validated" | "rejected" | undefined;
                reason?: string | undefined;
            } | undefined;
            relationships?: {
                realValidator?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                expectedValidator?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "timesreport";
            attributes?: {
                regularTimes?: {
                    id: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                reference?: string | undefined;
                number?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "expenseshistory";
            attributes?: {
                updateDate?: string | undefined;
                state?: 0 | 2 | 1 | undefined;
                errorMsg?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteExpensesReports(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putExpensesReports(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty expenses default basic data
 */
export declare function getExpensesReportsDefault(resource: number, term: string, body?: string, { agency }?: {
    agency?: number;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "expensesOutsideContractDates" | "expensesOutsideDeliveryDates";
                detail: string;
                project: {
                    data: null;
                } | {
                    id: string;
                    reference: string;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                    title: string;
                    startDate: string;
                    endDate: string;
                };
            }[] | undefined;
            expectedValidatorsAllowedForValidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForUnvalidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForReject?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            isOcrEnabled?: boolean | undefined;
        };
        data: {
            id: "0";
            "type": "expensesreport";
            attributes?: {
                term?: string;
                ratePerKilometerType?: {
                    reference: number;
                    name: string;
                    amount: number;
                };
                currencyAgency?: number;
                exchangeRateAgency?: number;
                fixedExpenses?: {
                    startDate: string;
                    row: number;
                    numberOfKilometers: number;
                    amountIncludingTax: number;
                    isKilometricExpense: boolean;
                    activityType: "production" | "absence" | "internal";
                    expenseType: {
                        data: null;
                    } | {
                        reference: number;
                        taxRate: number;
                        name: string;
                    };
                }[];
                projectsExpenses?: {
                    startDate: string;
                    row: number;
                    numberOfKilometers: number;
                    amountIncludingTax: number;
                    isKilometricExpense: boolean;
                    activityType: "production" | "absence" | "internal";
                    expenseType: {
                        data: null;
                    } | {
                        reference: number;
                        taxRate: number;
                        name: string;
                    };
                    delivery: {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    project: {
                        id: string;
                        reference?: string;
                    };
                }[];
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                timesReport?: {
                    data: null;
                } | {
                    id: string;
                    "type": "timesreport";
                };
                projects?: {
                    data: {
                        id: string;
                        "type": "project";
                    }[];
                };
                validationWorkflow?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                ratePerKilometerTypes?: {
                    reference: number;
                    name: string;
                    amount: number;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "batch";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                deliveries?: any[] | undefined;
                batches?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "timesreport";
            relationships?: {
                regularTimes?: {
                    id: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[] | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putExpensesReportsDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "expensesOutsideContractDates" | "expensesOutsideDeliveryDates";
                detail: string;
                project: {
                    data: null;
                } | {
                    id: string;
                    reference: string;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                    title: string;
                    startDate: string;
                    endDate: string;
                };
            }[] | undefined;
            expectedValidatorsAllowedForValidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForUnvalidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForReject?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            isOcrEnabled?: boolean | undefined;
        };
        data: {
            id: "0";
            "type": "expensesreport";
            attributes?: {
                term?: string;
                ratePerKilometerType?: {
                    reference: number;
                    name: string;
                    amount: number;
                };
                currencyAgency?: number;
                exchangeRateAgency?: number;
                fixedExpenses?: {
                    startDate: string;
                    row: number;
                    numberOfKilometers: number;
                    amountIncludingTax: number;
                    isKilometricExpense: boolean;
                    activityType: "production" | "absence" | "internal";
                    expenseType: {
                        data: null;
                    } | {
                        reference: number;
                        taxRate: number;
                        name: string;
                    };
                }[];
                projectsExpenses?: {
                    startDate: string;
                    row: number;
                    numberOfKilometers: number;
                    amountIncludingTax: number;
                    isKilometricExpense: boolean;
                    activityType: "production" | "absence" | "internal";
                    expenseType: {
                        data: null;
                    } | {
                        reference: number;
                        taxRate: number;
                        name: string;
                    };
                    delivery: {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    project: {
                        id: string;
                        reference?: string;
                    };
                }[];
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                timesReport?: {
                    data: null;
                } | {
                    id: string;
                    "type": "timesreport";
                };
                projects?: {
                    data: {
                        id: string;
                        "type": "project";
                    }[];
                };
                validationWorkflow?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                ratePerKilometerTypes?: {
                    reference: number;
                    name: string;
                    amount: number;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "batch";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                deliveries?: any[] | undefined;
                batches?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "timesreport";
            relationships?: {
                regularTimes?: {
                    id: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[] | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteExpensesReportsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postExpensesReportsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get expenses basic data
 */
export declare function getExpensesReportsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "expensesOutsideContractDates" | "expensesOutsideDeliveryDates";
                detail: string;
                project: {
                    data: null;
                } | {
                    id: string;
                    reference: string;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                    title: string;
                    startDate: string;
                    endDate: string;
                };
            }[] | undefined;
            expectedValidatorsAllowedForValidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForUnvalidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForReject?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            isOcrEnabled?: boolean | undefined;
        };
        data: {
            id: string;
            "type": "expensesreport";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                term?: string;
                informationComments?: string;
                closed?: boolean;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                ratePerKilometerType?: {
                    reference: number;
                    name: string;
                    amount: number;
                };
                paid?: boolean;
                advance?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                actualExpenses?: {
                    id: string;
                    startDate: string;
                    "number": number;
                    title: string;
                    currency: number;
                    exchangeRate: number;
                    numberOfKilometers: number;
                    amountIncludingTax: number;
                    tax: number;
                    reinvoiced: boolean;
                    isKilometricExpense: boolean;
                    activityType: "production" | "absence" | "internal";
                    file?: string;
                    expenseType: {
                        data: null;
                    } | {
                        reference: number;
                        taxRate: number;
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[];
                fixedExpenses?: {
                    id: string;
                    startDate: string;
                    row: number;
                    numberOfKilometers: number;
                    amountIncludingTax: number;
                    isKilometricExpense: boolean;
                    activityType: "production" | "absence" | "internal";
                    expenseType: {
                        data: null;
                    } | {
                        reference: number;
                        taxRate: number;
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[];
                projectsExpenses?: {
                    startDate: string;
                    row: number;
                    numberOfKilometers: number;
                    amountIncludingTax: number;
                    isKilometricExpense: boolean;
                    activityType: "production" | "absence" | "internal";
                    expenseType: {
                        data: null;
                    } | {
                        reference: number;
                        taxRate: number;
                        name: string;
                    };
                    delivery: {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    project: {
                        id: string;
                        reference?: string;
                    };
                }[];
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
                timesReport?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "timesreport";
                    };
                };
                orders?: {
                    data: {
                        id: string;
                        "type": "order";
                    }[];
                };
                projects?: {
                    data: {
                        id: string;
                        "type": "project";
                    }[];
                };
                validations?: {
                    data: {
                        id: string;
                        "type": "validation";
                    }[];
                };
                validationWorkflow?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
                certification?: {
                    data: {
                        id: string;
                        "type": "expenseshistory";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                ratePerKilometerTypes?: {
                    reference: number;
                    name: string;
                    amount: number;
                }[] | undefined;
                expensesLegals?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "batch";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                deliveries?: any[] | undefined;
                batches?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "validation";
            attributes?: {
                date?: string | undefined;
                state?: "waitingForValidation" | "validated" | "rejected" | undefined;
                reason?: string | undefined;
            } | undefined;
            relationships?: {
                realValidator?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                expectedValidator?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "timesreport";
            attributes?: {
                regularTimes?: {
                    id: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                reference?: string | undefined;
                number?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "expenseshistory";
            attributes?: {
                updateDate?: string | undefined;
                state?: 0 | 2 | 1 | undefined;
                errorMsg?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the expenses
 */
export declare function deleteExpensesReportsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to an expenses
 */
export declare function putExpensesReportsById(body?: {
    data: {
        id: string;
        "type": "expensesreport";
        attributes?: {
            informationComments?: string;
            ratePerKilometerType?: {
                reference: number;
                amount: number;
            };
            paid?: boolean;
            advance?: number;
            actualExpenses?: ({
                startDate: string;
                "number": number;
                title: string;
                currency?: number;
                exchangeRate?: number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                tax?: number;
                reinvoiced: boolean;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                "number": number;
                title: string;
                currency?: number;
                exchangeRate?: number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                tax?: number;
                reinvoiced: boolean;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            })[];
            fixedExpenses?: ({
                startDate: string;
                row: number | number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                row: number | number;
                numberOfKilometers?: number;
                amountIncludingTax?: number;
                isKilometricExpense: boolean;
                activityType: "production" | "absence" | "internal";
                expenseType: {
                    data: null;
                } | {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            })[];
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "expensesOutsideContractDates" | "expensesOutsideDeliveryDates";
                detail: string;
                project: {
                    data: null;
                } | {
                    id: string;
                    reference: string;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                    title: string;
                    startDate: string;
                    endDate: string;
                };
            }[] | undefined;
            expectedValidatorsAllowedForValidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForUnvalidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForReject?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            isOcrEnabled?: boolean | undefined;
        };
        data: {
            id: string;
            "type": "expensesreport";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                term?: string;
                informationComments?: string;
                closed?: boolean;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                ratePerKilometerType?: {
                    reference: number;
                    name: string;
                    amount: number;
                };
                paid?: boolean;
                advance?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                actualExpenses?: {
                    id: string;
                    startDate: string;
                    "number": number;
                    title: string;
                    currency: number;
                    exchangeRate: number;
                    numberOfKilometers: number;
                    amountIncludingTax: number;
                    tax: number;
                    reinvoiced: boolean;
                    isKilometricExpense: boolean;
                    activityType: "production" | "absence" | "internal";
                    file?: string;
                    expenseType: {
                        data: null;
                    } | {
                        reference: number;
                        taxRate: number;
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[];
                fixedExpenses?: {
                    id: string;
                    startDate: string;
                    row: number;
                    numberOfKilometers: number;
                    amountIncludingTax: number;
                    isKilometricExpense: boolean;
                    activityType: "production" | "absence" | "internal";
                    expenseType: {
                        data: null;
                    } | {
                        reference: number;
                        taxRate: number;
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[];
                projectsExpenses?: {
                    startDate: string;
                    row: number;
                    numberOfKilometers: number;
                    amountIncludingTax: number;
                    isKilometricExpense: boolean;
                    activityType: "production" | "absence" | "internal";
                    expenseType: {
                        data: null;
                    } | {
                        reference: number;
                        taxRate: number;
                        name: string;
                    };
                    delivery: {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    project: {
                        id: string;
                        reference?: string;
                    };
                }[];
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
                timesReport?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "timesreport";
                    };
                };
                orders?: {
                    data: {
                        id: string;
                        "type": "order";
                    }[];
                };
                projects?: {
                    data: {
                        id: string;
                        "type": "project";
                    }[];
                };
                validations?: {
                    data: {
                        id: string;
                        "type": "validation";
                    }[];
                };
                validationWorkflow?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
                certification?: {
                    data: {
                        id: string;
                        "type": "expenseshistory";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                ratePerKilometerTypes?: {
                    reference: number;
                    name: string;
                    amount: number;
                }[] | undefined;
                expensesLegals?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "batch";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                deliveries?: any[] | undefined;
                batches?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "validation";
            attributes?: {
                date?: string | undefined;
                state?: "waitingForValidation" | "validated" | "rejected" | undefined;
                reason?: string | undefined;
            } | undefined;
            relationships?: {
                realValidator?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                expectedValidator?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "timesreport";
            attributes?: {
                regularTimes?: {
                    id: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                reference?: string | undefined;
                number?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "expenseshistory";
            attributes?: {
                updateDate?: string | undefined;
                state?: 0 | 2 | 1 | undefined;
                errorMsg?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postExpensesReportsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search flags
 */
export declare function getFlags(body?: string, { perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "flag";
            attributes?: {
                name?: string;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        }[];
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a flag
 */
export declare function postFlags(body?: {
    data: {
        "type": "flag";
        attributes: {
            name: string;
        };
        relationships: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "flag";
            attributes?: {
                name?: string;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteFlags(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putFlags(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get flag's basic data
 */
export declare function getFlagsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "flag";
            attributes?: {
                name?: string;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the flag
 */
export declare function deleteFlagsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a flag
 */
export declare function putFlagsById(body?: {
    data: {
        id: string;
        "type": "flag";
        attributes?: {
            name?: string;
        };
        relationships?: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "flag";
            attributes?: {
                name?: string;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postFlagsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Log out user
 */
export declare function deleteGoogleById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postGoogleById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putGoogleById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getGoogleById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a groupment
 */
export declare function postGroupments(body?: {
    data: {
        "type": "groupment";
        attributes?: {
            startDate?: string;
            endDate?: string;
            title?: string;
            averageDailyPriceExcludingTax?: number;
            averageDailyCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            informationComments?: string;
            loadDistribution?: "manual" | "proportional" | "weighted";
            deliveries?: {
                delivery: {
                    id: string;
                    title: string;
                    startDate: string;
                    endDate: string;
                    averageDailyPriceExcludingTax?: number;
                    averageDailyCost: number;
                    additionalTurnoverExcludingTax?: number;
                    additionalCostsExcludingTax?: number;
                    dependsOn?: {
                        id: string;
                        firstName: string;
                        lastName: string;
                    };
                    groupment?: {
                        data: null;
                    } | {
                        id: string;
                    };
                };
                weighting: number;
                schedule: number;
            }[];
        };
        relationships: {
            project: {
                data: {
                    id: string;
                    "type": "project";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "groupment";
            attributes?: {
                startDate?: string;
                endDate?: string;
                title?: string;
                averageDailyPriceExcludingTax?: number;
                averageDailyCost?: number;
                numberOfDaysInvoicedOrQuantity?: number;
                numberOfDaysFree?: number;
                informationComments?: string;
                turnoverSimulatedExcludingTax?: number;
                costsSimulatedExcludingTax?: number;
                marginSimulatedExcludingTax?: number;
                profitabilitySimulated?: number;
                loadDistribution?: "manual" | "proportional" | "weighted";
                deliveries?: {
                    delivery: {
                        id: string;
                        title: string;
                        startDate: string;
                        endDate: string;
                        averageDailyPriceExcludingTax?: number;
                        averageDailyCost: number;
                        additionalTurnoverExcludingTax?: number;
                        additionalCostsExcludingTax?: number;
                        dependsOn?: {
                            id: string;
                            firstName: string;
                            lastName: string;
                        };
                        groupment?: {
                            data: null;
                        } | {
                            id: string;
                        };
                    };
                    weighting: number;
                    schedule: number;
                }[];
                creationDate?: string;
                updateDate?: string;
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                exchangeRate?: number | undefined;
                currency?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                averageDailyCost?: number | undefined;
                averageDailyPriceExcludingTax?: number | undefined;
                additionalTurnoverExcludingTax?: number | undefined;
                additionalCostsExcludingTax?: number | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                groupment?: {
                    data: {
                        id: string;
                        "type": "groupment";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                technical?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                deliveries?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    }[];
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getGroupments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteGroupments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putGroupments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty groupment's default information data
 */
export declare function getGroupmentsDefault(project: number, body?: string, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "groupment";
            attributes?: {
                startDate?: string;
                endDate?: string;
                loadDistribution?: "manual" | "proportional" | "weighted";
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                exchangeRate?: number | undefined;
                currency?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                averageDailyCost?: number | undefined;
                averageDailyPriceExcludingTax?: number | undefined;
                additionalTurnoverExcludingTax?: number | undefined;
                additionalCostsExcludingTax?: number | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                groupment?: {
                    data: {
                        id: string;
                        "type": "groupment";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                technical?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                deliveries?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    }[];
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putGroupmentsDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "groupment";
            attributes?: {
                startDate?: string;
                endDate?: string;
                loadDistribution?: "manual" | "proportional" | "weighted";
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                exchangeRate?: number | undefined;
                currency?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                averageDailyCost?: number | undefined;
                averageDailyPriceExcludingTax?: number | undefined;
                additionalTurnoverExcludingTax?: number | undefined;
                additionalCostsExcludingTax?: number | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                groupment?: {
                    data: {
                        id: string;
                        "type": "groupment";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                technical?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                deliveries?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    }[];
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteGroupmentsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postGroupmentsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get groupment's basic data
 */
export declare function getGroupmentsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "groupment";
            attributes?: {
                startDate?: string;
                endDate?: string;
                title?: string;
                averageDailyPriceExcludingTax?: number;
                averageDailyCost?: number;
                numberOfDaysInvoicedOrQuantity?: number;
                numberOfDaysFree?: number;
                informationComments?: string;
                turnoverSimulatedExcludingTax?: number;
                costsSimulatedExcludingTax?: number;
                marginSimulatedExcludingTax?: number;
                profitabilitySimulated?: number;
                loadDistribution?: "manual" | "proportional" | "weighted";
                deliveries?: {
                    delivery: {
                        id: string;
                        title: string;
                        startDate: string;
                        endDate: string;
                        averageDailyPriceExcludingTax?: number;
                        averageDailyCost: number;
                        additionalTurnoverExcludingTax?: number;
                        additionalCostsExcludingTax?: number;
                        dependsOn?: {
                            id: string;
                            firstName: string;
                            lastName: string;
                        };
                        groupment?: {
                            data: null;
                        } | {
                            id: string;
                        };
                    };
                    weighting: number;
                    schedule: number;
                }[];
                creationDate?: string;
                updateDate?: string;
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                exchangeRate?: number | undefined;
                currency?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                averageDailyCost?: number | undefined;
                averageDailyPriceExcludingTax?: number | undefined;
                additionalTurnoverExcludingTax?: number | undefined;
                additionalCostsExcludingTax?: number | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                groupment?: {
                    data: {
                        id: string;
                        "type": "groupment";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                technical?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                deliveries?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    }[];
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the groupment
 */
export declare function deleteGroupmentsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a groupment
 */
export declare function putGroupmentsById(body?: {
    data: {
        id: string;
        "type": "groupment";
        attributes?: {
            startDate?: string;
            endDate?: string;
            title?: string;
            averageDailyPriceExcludingTax?: number;
            averageDailyCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            informationComments?: string;
            loadDistribution?: "manual" | "proportional" | "weighted";
            deliveries?: {
                delivery: {
                    id: string;
                    title: string;
                    startDate: string;
                    endDate: string;
                    averageDailyPriceExcludingTax?: number;
                    averageDailyCost: number;
                    additionalTurnoverExcludingTax?: number;
                    additionalCostsExcludingTax?: number;
                    dependsOn?: {
                        id: string;
                        firstName: string;
                        lastName: string;
                    };
                    groupment?: {
                        data: null;
                    } | {
                        id: string;
                    };
                };
                weighting: number;
                schedule: number;
            }[];
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "groupment";
            attributes?: {
                startDate?: string;
                endDate?: string;
                title?: string;
                averageDailyPriceExcludingTax?: number;
                averageDailyCost?: number;
                numberOfDaysInvoicedOrQuantity?: number;
                numberOfDaysFree?: number;
                informationComments?: string;
                turnoverSimulatedExcludingTax?: number;
                costsSimulatedExcludingTax?: number;
                marginSimulatedExcludingTax?: number;
                profitabilitySimulated?: number;
                loadDistribution?: "manual" | "proportional" | "weighted";
                deliveries?: {
                    delivery: {
                        id: string;
                        title: string;
                        startDate: string;
                        endDate: string;
                        averageDailyPriceExcludingTax?: number;
                        averageDailyCost: number;
                        additionalTurnoverExcludingTax?: number;
                        additionalCostsExcludingTax?: number;
                        dependsOn?: {
                            id: string;
                            firstName: string;
                            lastName: string;
                        };
                        groupment?: {
                            data: null;
                        } | {
                            id: string;
                        };
                    };
                    weighting: number;
                    schedule: number;
                }[];
                creationDate?: string;
                updateDate?: string;
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                exchangeRate?: number | undefined;
                currency?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                averageDailyCost?: number | undefined;
                averageDailyPriceExcludingTax?: number | undefined;
                additionalTurnoverExcludingTax?: number | undefined;
                additionalCostsExcludingTax?: number | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                groupment?: {
                    data: {
                        id: string;
                        "type": "groupment";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                technical?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                deliveries?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    }[];
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postGroupmentsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create an inactivity
 */
export declare function postInactivities(body?: {
    data: {
        "type": "delivery";
        attributes?: {
            startDate?: string;
            endDate?: string;
            title?: string;
            averageDailyContractCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            informationComments?: string;
            dailyExpenses?: number;
            monthlyExpenses?: number;
            numberOfWorkingDays?: number;
            expensesDetails?: {
                id: string;
                expenseType: {
                    reference: number;
                    name: string;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
                agency: {
                    id: string;
                    name: string;
                };
            }[];
            currency?: number;
            exchangeRate?: number;
            currencyAgency?: number;
            exchangeRateAgency?: number;
            inactivityType?: "internal" | "absence";
        };
        relationships: {
            resource: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            contract?: {
                data: {
                    id: string;
                    "type": "contract";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "inactivity";
            attributes?: {
                startDate?: string;
                endDate?: string;
                title?: string;
                averageDailyCost?: number;
                averageDailyContractCost?: number;
                numberOfDaysInvoicedOrQuantity?: number;
                informationComments?: string;
                costsSimulatedExcludingTax?: number;
                occupationRate?: number;
                dailyExpenses?: number;
                monthlyExpenses?: number;
                numberOfWorkingDays?: number;
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[];
                inactivityType?: "internal" | "absence";
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                creationDate?: string;
                updateDate?: string;
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                contract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                contracts?: {
                    data: {
                        id: string;
                        "type": "contract";
                    }[];
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                exchangeRate?: number | undefined;
                currency?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                contractAverageDailyCost?: number | undefined;
                monthlySalary?: number | undefined;
                dailyExpenses?: number | undefined;
                monthlyExpenses?: number | undefined;
                currency?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRate?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getInactivities(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteInactivities(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putInactivities(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty inactivity's default information data
 */
export declare function getInactivitiesDefault(resource: number, body?: string, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putInactivitiesDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteInactivitiesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postInactivitiesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get inactivity's basic data
 */
export declare function getInactivitiesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "inactivity";
            attributes?: {
                startDate?: string;
                endDate?: string;
                title?: string;
                averageDailyCost?: number;
                averageDailyContractCost?: number;
                numberOfDaysInvoicedOrQuantity?: number;
                informationComments?: string;
                costsSimulatedExcludingTax?: number;
                occupationRate?: number;
                dailyExpenses?: number;
                monthlyExpenses?: number;
                numberOfWorkingDays?: number;
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[];
                inactivityType?: "internal" | "absence";
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                creationDate?: string;
                updateDate?: string;
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                contract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                contracts?: {
                    data: {
                        id: string;
                        "type": "contract";
                    }[];
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                exchangeRate?: number | undefined;
                currency?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                contractAverageDailyCost?: number | undefined;
                monthlySalary?: number | undefined;
                dailyExpenses?: number | undefined;
                monthlyExpenses?: number | undefined;
                currency?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRate?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the inactivity
 */
export declare function deleteInactivitiesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to an inactivity
 */
export declare function putInactivitiesById(body?: {
    data: {
        id: string;
        "type": "inactivity";
        attributes?: {
            startDate?: string;
            endDate?: string;
            title?: string;
            averageDailyContractCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            informationComments?: string;
            dailyExpenses?: number;
            monthlyExpenses?: number;
            numberOfWorkingDays?: number;
            expensesDetails?: {
                id: string;
                expenseType: {
                    reference: number;
                    name: string;
                };
                periodicity: "daily" | "monthly";
                netAmount: number;
                agency: {
                    id: string;
                    name: string;
                };
            }[];
            currency?: number;
            exchangeRate?: number;
            currencyAgency?: number;
            exchangeRateAgency?: number;
            inactivityType?: "internal" | "absence";
        };
        relationships?: {
            contract?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "contract";
                };
            };
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "inactivity";
            attributes?: {
                startDate?: string;
                endDate?: string;
                title?: string;
                averageDailyCost?: number;
                averageDailyContractCost?: number;
                numberOfDaysInvoicedOrQuantity?: number;
                informationComments?: string;
                costsSimulatedExcludingTax?: number;
                occupationRate?: number;
                dailyExpenses?: number;
                monthlyExpenses?: number;
                numberOfWorkingDays?: number;
                expensesDetails?: {
                    id: string;
                    expenseType: {
                        reference: number;
                        name: string;
                    };
                    periodicity: "daily" | "monthly";
                    netAmount: number;
                    agency: {
                        id: string;
                        name: string;
                    };
                }[];
                inactivityType?: "internal" | "absence";
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                creationDate?: string;
                updateDate?: string;
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                contract?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                contracts?: {
                    data: {
                        id: string;
                        "type": "contract";
                    }[];
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                calendar?: string | undefined;
                expenseTypes?: {
                    reference: number;
                    name: string;
                    taxRate: number;
                }[] | undefined;
                exchangeRate?: number | undefined;
                currency?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                contractAverageDailyCost?: number | undefined;
                monthlySalary?: number | undefined;
                dailyExpenses?: number | undefined;
                monthlyExpenses?: number | undefined;
                currency?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRate?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postInactivitiesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search invoices
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/invoices.csv?keywords=FACT1*
 *
 */
export declare function getInvoices(body?: string, { keywords, projectTypes, paymentMethods, states, closed, creditNote, period, startDate, endDate, flags, encoding, extractType, exportToDownloadCenter, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    projectTypes?: number[];
    paymentMethods?: number[];
    states?: number[];
    closed?: boolean;
    creditNote?: boolean;
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    extractType?: string;
    exportToDownloadCenter?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
                turnoverInvoicedExcludingTax?: number | undefined;
                turnoverInvoicedIncludingTax?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "invoice";
            attributes?: {
                date?: string;
                expectedPaymentDate?: string;
                turnoverInvoicedExcludingTax?: number;
                turnoverInvoicedIncludingTax?: number;
                isCreditNote?: boolean;
                reference?: string;
                state?: number;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                paymentMethod?: number;
                closed?: boolean;
            };
            relationships?: {
                order?: {
                    data: {
                        id: string;
                        "type": "order";
                    };
                };
                schedule?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "schedule";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "order";
            attributes?: {
                number?: string | undefined;
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
            } | undefined;
            relationships?: {
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "schedule";
            attributes?: {
                date?: string | undefined;
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create an invoice
 */
export declare function postInvoices(body?: {
    data: {
        "type": "invoice";
        attributes?: {
            date?: string;
            startDate?: string;
            endDate?: string;
            reference?: string;
            state?: number;
            performedPaymentDate?: string;
            paymentMethod?: number;
            currency?: number;
            exchangeRate?: number;
            isCreditNote?: boolean;
            currencyAgency?: number;
            exchangeRateAgency?: number;
            discountRate?: number;
            showCommentsOnPDF?: boolean;
            invoiceRecords?: ({
                invoiceRecordType: null | {
                    reference: number;
                };
                description: string;
                amountExcludingTax: number;
                quantity: number;
                taxRates: number[];
            } | {
                id: string;
                invoiceRecordType: null | {
                    reference: number;
                };
                description: string;
                amountExcludingTax: number;
                quantity: number;
                taxRates: number[];
            })[];
        };
        relationships: {
            order: {
                data: {
                    id: string;
                    "type": "order";
                };
            };
            schedule?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "schedule";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                [key: string]: any;
                code?: "invoiceDateModified" | undefined;
                detail?: string | undefined;
                date?: string | undefined;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "invoice";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                date?: string;
                startDate?: string;
                endDate?: string;
                reference?: string;
                expectedPaymentDate?: string;
                state?: number;
                performedPaymentDate?: string;
                paymentMethod?: number;
                informationComments?: string;
                isCreditNote?: boolean;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                currencyName?: string;
                currencySymbol?: string;
                exchangeRateAgency?: number;
                discountRate?: number;
                closed?: boolean;
                locked?: boolean;
                orderLegals?: string;
                orderPaymentTerm?: number;
                bankDetailDescription?: string;
                bankDetailBic?: string;
                bankDetailIban?: string;
                agencyName?: string;
                agencyVatNumber?: string;
                agencyRegistrationNumber?: string;
                agencyAddress?: string;
                agencyPostcode?: string;
                agencyTown?: string;
                agencyCountry?: string;
                agencyApeCode?: string;
                agencyEmail?: string;
                agencyPhone?: string;
                agencyRegisteredOffice?: string;
                agencyLegalStatus?: string;
                factorName?: string;
                factorSiren?: string;
                factorNic?: string;
                factorLegalStatus?: string;
                factorRegisteredOffice?: string;
                factorVatNumber?: string;
                factorAddress?: string;
                factorPostcode?: string;
                factorTown?: string;
                factorCountry?: string;
                factorApeCode?: string;
                billingDetailName?: string;
                billingDetailContact?: string;
                billingDetailAddress1?: string;
                billingDetailAddress2?: string;
                billingDetailAddress3?: string;
                billingDetailPostcode?: string;
                billingDetailTown?: string;
                billingDetailCountry?: string;
                headOfficeName?: string;
                headOfficeContact?: string;
                headOfficeAddress1?: string;
                headOfficeAddress2?: string;
                headOfficeAddress3?: string;
                headOfficePostcode?: string;
                headOfficeTown?: string;
                headOfficeCountry?: string;
                activityDetails?: {
                    resource: {
                        id: string;
                        firstName: string;
                        lastName: string;
                        regularTimes: {
                            workUnitType: {
                                reference: number;
                                activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                name: string;
                            };
                            agency: {
                                id: string;
                                name: string;
                            };
                            averageDailyPriceExcludingTax: number;
                            numberOfWorkingDays: number;
                            numberOfWorkUnits: number;
                        }[];
                        exceptionalTimes: {
                            workUnitType: {
                                reference: number;
                                activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                name: string;
                            };
                            agency: {
                                id: string;
                                name: string;
                            };
                            priceExcludingTax: number;
                            duration: number;
                        }[];
                        exceptionalCalendars: {
                            workUnitType: {
                                reference: number;
                                activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                name: string;
                            };
                            agency: {
                                id: string;
                                name: string;
                            };
                            priceExcludingTax: number;
                            duration: number;
                        }[];
                        timesReports: {
                            id: string;
                            term: string;
                        }[];
                        expensesReports: {
                            id: string;
                            term: string;
                        }[];
                    };
                }[];
                turnoverInvoicedExcludingTax?: number;
                turnoverInvoicedIncludingTax?: number;
                totalExcludingTax?: number;
                totalIncludingTax?: number;
                showCommentsOnPDF?: boolean;
                invoiceRecords?: {
                    id: string;
                    invoiceRecordType: null | {
                        reference: number;
                        name: string;
                    };
                    description: string;
                    amountExcludingTax: number;
                    totalDiscountExcludingTax?: string;
                    totalDiscountIncludingTax?: string;
                    totalAmountExcludingTax?: string;
                    totalAmountIncludingTax?: string;
                    quantity: number;
                    turnoverExcludingTax: string;
                    turnoverIncludingTax: string;
                    taxRate: number;
                    taxRates: number[];
                }[];
            };
            relationships?: {
                order?: {
                    data: {
                        id: string;
                        "type": "order";
                    };
                };
                schedule?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "schedule";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included: ({
            id: string;
            "type": "resource";
            attributes?: {
                lastName?: string;
                firstName?: string;
            };
        } | {
            id: string;
            "type": "contact";
            attributes?: {
                lastName?: string;
                firstName?: string;
            };
        } | {
            id: string;
            "type": "company";
            attributes?: {
                name?: string;
                registrationNumber?: string;
                legalStatus?: string;
                registeredOffice?: string;
                vatNumber?: string;
                "number"?: string;
                address?: string;
                postcode?: string;
                town?: string;
                country?: string;
                apeCode?: string;
            };
        } | {
            id: string;
            "type": "opportunity";
            attributes?: {
                title?: string;
                reference?: string;
            };
        } | {
            id: string;
            "type": "detail";
            attributes?: {
                name?: string;
                contact?: string;
                phone1?: string;
                email1?: string;
                email2?: string;
                email3?: string;
                address1?: string;
                address2?: string;
                address3?: string;
                postcode?: string;
                town?: string;
                country?: string;
            };
        } | {
            id: string;
            "type": "bankdetail";
            attributes?: {
                description?: string;
                iban?: string;
                bic?: string;
            };
        } | {
            id: string;
            "type": "schedule";
            attributes?: {
                date?: string;
                title?: string;
            };
        } | {
            id: string;
            "type": "project";
            attributes?: {
                reference?: string;
                typeOf?: number;
                mode?: number;
                workUnitRate?: number;
            };
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                };
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                };
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
            };
        } | {
            id: string;
            "type": "agency";
            attributes?: {
                invoiceRecordTypes?: {
                    reference: number;
                    name: string;
                }[];
                name?: string;
                email1?: string;
                phone1?: string;
                registrationNumber?: string;
                legalStatus?: string;
                registeredOffice?: string;
                vatNumber?: string;
                address?: string;
                postcode?: string;
                town?: string;
                country?: string;
                apeCode?: string;
                invoicesLogo?: string;
                ordersDistinguishHeadOffice?: boolean;
                invoicesLockingStates?: number[];
                ordersAllowMultiplesTaxRates?: boolean;
            };
        } | {
            id: string;
            "type": "order";
            attributes?: {
                reference?: string;
                "number"?: string;
                legals?: string;
                paymentTerm?: number;
                schedules?: {
                    id: string;
                    date: string;
                    title: string;
                }[];
                billingInstructions?: string;
                sendingMode?: number;
                typeOf?: "schedule" | "monthly";
                taxRate?: number;
                taxRates?: number[];
                showFooterOnPDF?: boolean;
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                billingDetail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "detail";
                    };
                };
                headOffice?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "detail";
                    };
                };
                bankDetail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "bankdetail";
                    };
                };
                factor?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
            };
        })[];
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteInvoices(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putInvoices(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty invoice's default information data
 */
export declare function getInvoicesDefault(order: number, body?: string, { isCreditNote, schedule, term, autoFillItemsWithTimesExpensesPurchases }?: {
    isCreditNote?: boolean;
    schedule?: number;
    term?: string;
    autoFillItemsWithTimesExpensesPurchases?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "invoice";
            attributes?: {
                date?: string;
                isCreditNote?: boolean;
                startDate?: string;
                endDate?: string;
                expectedPaymentDate?: string;
                state?: number;
                hasAttachment?: boolean;
                paymentMethod?: number;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                discountRate?: number;
                turnoverInvoicedExcludingTax?: number;
                turnoverInvoicedIncludingTax?: number;
                totalExcludingTax?: number;
                totalIncludingTax?: number;
                activityDetails?: {
                    resource: {
                        id: string;
                        firstName: string;
                        lastName: string;
                        regularTimes: {
                            workUnitType: {
                                reference: number;
                                activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                name: string;
                            };
                            agency: {
                                id: string;
                                name: string;
                            };
                            averageDailyPriceExcludingTax: number;
                            numberOfWorkingDays: number;
                            numberOfWorkUnits: number;
                        }[];
                        exceptionalTimes: {
                            workUnitType: {
                                reference: number;
                                activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                name: string;
                            };
                            agency: {
                                id: string;
                                name: string;
                            };
                            priceExcludingTax: number;
                            duration: number;
                        }[];
                        exceptionalCalendars: {
                            workUnitType: {
                                reference: number;
                                activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                name: string;
                            };
                            agency: {
                                id: string;
                                name: string;
                            };
                            priceExcludingTax: number;
                            duration: number;
                        }[];
                        timesReports: {
                            id: string;
                            term: string;
                        }[];
                        expensesReports: {
                            id: string;
                            term: string;
                        }[];
                    };
                }[];
                invoiceRecords?: ({
                    invoiceRecordType: null | {
                        reference: number;
                    };
                    description: string;
                    amountExcludingTax: number;
                    quantity: number;
                    taxRates: number[];
                } | {
                    id: string;
                    invoiceRecordType: null | {
                        reference: number;
                    };
                    description: string;
                    amountExcludingTax: number;
                    quantity: number;
                    taxRates: number[];
                })[];
                informationComments?: string;
                showCommentsOnPDF?: boolean;
            };
            relationships?: {
                order?: {
                    data: {
                        id: string;
                        "type": "order";
                    };
                };
                schedule?: {
                    data: {
                        id: string;
                        "type": "schedule";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                registrationNumber?: string | undefined;
                legalStatus?: string | undefined;
                registeredOffice?: string | undefined;
                vatNumber?: string | undefined;
                number?: string | undefined;
                address?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
                apeCode?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "detail";
            attributes?: {
                name?: string | undefined;
                contact?: string | undefined;
                phone1?: string | undefined;
                email1?: string | undefined;
                email2?: string | undefined;
                email3?: string | undefined;
                address1?: string | undefined;
                address2?: string | undefined;
                address3?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "bankdetail";
            attributes?: {
                description?: string | undefined;
                iban?: string | undefined;
                bic?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "schedule";
            attributes?: {
                date?: string | undefined;
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                invoiceRecordTypes?: {
                    reference: number;
                    name: string;
                }[] | undefined;
                name?: string | undefined;
                email1?: string | undefined;
                phone1?: string | undefined;
                registrationNumber?: string | undefined;
                legalStatus?: string | undefined;
                registeredOffice?: string | undefined;
                invoicesLockingStates?: number[] | undefined;
                ordersDistinguishHeadOffice?: boolean | undefined;
                vatNumber?: string | undefined;
                address?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
                apeCode?: string | undefined;
                ordersAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                reference?: string | undefined;
                number?: string | undefined;
                legals?: string | undefined;
                paymentTerm?: number | undefined;
                schedules?: {
                    id: string;
                    date: string;
                    title: string;
                }[] | undefined;
                typeOf?: "monthly" | "schedule" | undefined;
                taxRate?: number | undefined;
                taxRates?: number[] | undefined;
                showFooterOnPDF?: boolean | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                billingDetail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "detail";
                    };
                } | undefined;
                headOffice?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "detail";
                    };
                } | undefined;
                bankDetail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "bankdetail";
                    };
                } | undefined;
                factor?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putInvoicesDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "invoice";
            attributes?: {
                date?: string;
                isCreditNote?: boolean;
                startDate?: string;
                endDate?: string;
                expectedPaymentDate?: string;
                state?: number;
                hasAttachment?: boolean;
                paymentMethod?: number;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                discountRate?: number;
                turnoverInvoicedExcludingTax?: number;
                turnoverInvoicedIncludingTax?: number;
                totalExcludingTax?: number;
                totalIncludingTax?: number;
                activityDetails?: {
                    resource: {
                        id: string;
                        firstName: string;
                        lastName: string;
                        regularTimes: {
                            workUnitType: {
                                reference: number;
                                activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                name: string;
                            };
                            agency: {
                                id: string;
                                name: string;
                            };
                            averageDailyPriceExcludingTax: number;
                            numberOfWorkingDays: number;
                            numberOfWorkUnits: number;
                        }[];
                        exceptionalTimes: {
                            workUnitType: {
                                reference: number;
                                activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                name: string;
                            };
                            agency: {
                                id: string;
                                name: string;
                            };
                            priceExcludingTax: number;
                            duration: number;
                        }[];
                        exceptionalCalendars: {
                            workUnitType: {
                                reference: number;
                                activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                                name: string;
                            };
                            agency: {
                                id: string;
                                name: string;
                            };
                            priceExcludingTax: number;
                            duration: number;
                        }[];
                        timesReports: {
                            id: string;
                            term: string;
                        }[];
                        expensesReports: {
                            id: string;
                            term: string;
                        }[];
                    };
                }[];
                invoiceRecords?: ({
                    invoiceRecordType: null | {
                        reference: number;
                    };
                    description: string;
                    amountExcludingTax: number;
                    quantity: number;
                    taxRates: number[];
                } | {
                    id: string;
                    invoiceRecordType: null | {
                        reference: number;
                    };
                    description: string;
                    amountExcludingTax: number;
                    quantity: number;
                    taxRates: number[];
                })[];
                informationComments?: string;
                showCommentsOnPDF?: boolean;
            };
            relationships?: {
                order?: {
                    data: {
                        id: string;
                        "type": "order";
                    };
                };
                schedule?: {
                    data: {
                        id: string;
                        "type": "schedule";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                registrationNumber?: string | undefined;
                legalStatus?: string | undefined;
                registeredOffice?: string | undefined;
                vatNumber?: string | undefined;
                number?: string | undefined;
                address?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
                apeCode?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "detail";
            attributes?: {
                name?: string | undefined;
                contact?: string | undefined;
                phone1?: string | undefined;
                email1?: string | undefined;
                email2?: string | undefined;
                email3?: string | undefined;
                address1?: string | undefined;
                address2?: string | undefined;
                address3?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "bankdetail";
            attributes?: {
                description?: string | undefined;
                iban?: string | undefined;
                bic?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "schedule";
            attributes?: {
                date?: string | undefined;
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                invoiceRecordTypes?: {
                    reference: number;
                    name: string;
                }[] | undefined;
                name?: string | undefined;
                email1?: string | undefined;
                phone1?: string | undefined;
                registrationNumber?: string | undefined;
                legalStatus?: string | undefined;
                registeredOffice?: string | undefined;
                invoicesLockingStates?: number[] | undefined;
                ordersDistinguishHeadOffice?: boolean | undefined;
                vatNumber?: string | undefined;
                address?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
                apeCode?: string | undefined;
                ordersAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                reference?: string | undefined;
                number?: string | undefined;
                legals?: string | undefined;
                paymentTerm?: number | undefined;
                schedules?: {
                    id: string;
                    date: string;
                    title: string;
                }[] | undefined;
                typeOf?: "monthly" | "schedule" | undefined;
                taxRate?: number | undefined;
                taxRates?: number[] | undefined;
                showFooterOnPDF?: boolean | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                billingDetail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "detail";
                    };
                } | undefined;
                headOffice?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "detail";
                    };
                } | undefined;
                bankDetail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "bankdetail";
                    };
                } | undefined;
                factor?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteInvoicesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postInvoicesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get invoice's basic data
 */
export declare function getInvoicesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "invoice";
            attributes?: {
                date?: string;
                creationDate?: string;
                reference?: string;
                isCreditNote?: boolean;
                closed?: boolean;
                hasAttachment?: boolean;
            };
            relationships?: {
                order?: {
                    data: {
                        id: string;
                        "type": "order";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                number?: string | undefined;
                reference?: string | undefined;
                typeOf?: "monthly" | "schedule" | undefined;
                schedules?: {
                    id: string;
                    date: string;
                    title: string;
                    turnoverQuotaExcludingTax: number;
                    turnoverTermOfPaymentExcludingTax: number;
                    forceTermOfPaymentExcludingTax: boolean;
                    invoices?: {
                        id: string;
                    }[] | undefined;
                }[] | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the invoice
 */
export declare function deleteInvoicesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putInvoicesById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "invoice";
            attributes?: {
                date?: string;
                creationDate?: string;
                reference?: string;
                isCreditNote?: boolean;
                closed?: boolean;
                hasAttachment?: boolean;
            };
            relationships?: {
                order?: {
                    data: {
                        id: string;
                        "type": "order";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                number?: string | undefined;
                reference?: string | undefined;
                typeOf?: "monthly" | "schedule" | undefined;
                schedules?: {
                    id: string;
                    date: string;
                    title: string;
                    turnoverQuotaExcludingTax: number;
                    turnoverTermOfPaymentExcludingTax: number;
                    forceTermOfPaymentExcludingTax: boolean;
                    invoices?: {
                        id: string;
                    }[] | undefined;
                }[] | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postInvoicesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search logs entity (Resource, Candidate, Project, Opportunity, Order, Invoice, Contact)
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/logs.csv?keywords=COMP100*
 *
 */
export declare function getLogs(body?: string, { keywords, logTypes, logActions, logAuths, period, startDate, endDate, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    logTypes?: string[];
    logActions?: string[];
    logAuths?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            type: "log";
            attributes?: {
                creationDate?: string | undefined;
                typeOf?: "candidate" | "order" | "action" | "target" | "role" | "global" | "absencesreport" | "agency" | "resource" | "validation" | "pole" | "app" | "device" | "company" | "opportunity" | "project" | "invoice" | "contact" | "positioning" | "delivery" | "advantage" | "contract" | "flag" | "businessunit" | "customer" | "product" | "purchase" | "payment" | "inactivity" | "groupment" | "quotation" | "thread" | "expensesreport" | "timesreport" | "actiontemplate" | "savedsearch" | "webhook" | undefined;
                action?: string | undefined;
                text?: string | undefined;
                auth?: "basic" | "normal" | "xjwtapp" | "xjwtclient" | undefined;
                content?: {
                    [key: string]: any;
                } | undefined;
                numberOfFiles?: number | undefined;
                canReadLog?: boolean | undefined;
                canReadDependsOn?: boolean | undefined;
                isEntityDeleted?: boolean | undefined;
            } | undefined;
            relationships?: {
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                createdFromApp?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                file?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "document";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "advantage";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "action";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "inactivity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "groupment";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "timesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "expensesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "absencesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "positioning";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "payment";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "businessunit";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "role";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "customer";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "quotation";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "device";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "validation";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "actiontemplate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "flag";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "thread";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "savedsearch";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "webhook";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "target";
                    };
                } | undefined;
            } | undefined;
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                reference?: string | undefined;
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                reference?: string | undefined;
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                number?: string | undefined;
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                reference?: string | undefined;
                number?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "invoice";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "timesreport";
            attributes?: {
                term?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "expensesreport";
            attributes?: {
                term?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "absencesreport";
            attributes?: {
                creationDate?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                reference?: string | undefined;
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "businessunit";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "role";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "app";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "customer";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "quotation";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "device";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "actiontemplate";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "flag";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "thread";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "savedsearch";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "webhook";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "target";
            attributes?: {
                name?: "global" | "activityExpenses" | "billing" | "commercial" | "humanResources" | "recruitment" | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "validation";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postLogs(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteLogs(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putLogs(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get log's basic data
 */
export declare function getLogsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "log";
            attributes?: {
                creationDate?: string | undefined;
                typeOf?: "candidate" | "order" | "action" | "target" | "role" | "global" | "absencesreport" | "agency" | "resource" | "validation" | "pole" | "app" | "device" | "company" | "opportunity" | "project" | "invoice" | "contact" | "positioning" | "delivery" | "advantage" | "contract" | "flag" | "businessunit" | "customer" | "product" | "purchase" | "payment" | "inactivity" | "groupment" | "quotation" | "thread" | "expensesreport" | "timesreport" | "actiontemplate" | "savedsearch" | "webhook" | undefined;
                action?: string | undefined;
                text?: string | undefined;
                auth?: "basic" | "normal" | "xjwtapp" | "xjwtclient" | undefined;
                content?: {
                    [key: string]: any;
                } | undefined;
                numberOfFiles?: number | undefined;
                canReadLog?: boolean | undefined;
                canReadDependsOn?: boolean | undefined;
                isEntityDeleted?: boolean | undefined;
            } | undefined;
            relationships?: {
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                createdFromApp?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "advantage";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "action";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "inactivity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "groupment";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "timesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "expensesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "absencesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "positioning";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "payment";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "businessunit";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "role";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "customer";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "quotation";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "device";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "validation";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "actiontemplate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "flag";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "thread";
                    };
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                number?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "invoice";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "timesreport";
            attributes?: {
                term?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "expensesreport";
            attributes?: {
                term?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "absencesreport";
            attributes?: {
                creationDate?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "businessunit";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "role";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "app";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "customer";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "quotation";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "device";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "actiontemplate";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "flag";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "thread";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "savedsearch";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "webhook";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "target";
            attributes?: {
                name?: "global" | "activityExpenses" | "billing" | "commercial" | "humanResources" | "recruitment" | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putLogsById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "log";
            attributes?: {
                creationDate?: string | undefined;
                typeOf?: "candidate" | "order" | "action" | "target" | "role" | "global" | "absencesreport" | "agency" | "resource" | "validation" | "pole" | "app" | "device" | "company" | "opportunity" | "project" | "invoice" | "contact" | "positioning" | "delivery" | "advantage" | "contract" | "flag" | "businessunit" | "customer" | "product" | "purchase" | "payment" | "inactivity" | "groupment" | "quotation" | "thread" | "expensesreport" | "timesreport" | "actiontemplate" | "savedsearch" | "webhook" | undefined;
                action?: string | undefined;
                text?: string | undefined;
                auth?: "basic" | "normal" | "xjwtapp" | "xjwtclient" | undefined;
                content?: {
                    [key: string]: any;
                } | undefined;
                numberOfFiles?: number | undefined;
                canReadLog?: boolean | undefined;
                canReadDependsOn?: boolean | undefined;
                isEntityDeleted?: boolean | undefined;
            } | undefined;
            relationships?: {
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                createdFromApp?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "advantage";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "action";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "inactivity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "groupment";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "timesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "expensesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "absencesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "positioning";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "payment";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "businessunit";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "role";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "customer";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "quotation";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "device";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "validation";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "actiontemplate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "flag";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "thread";
                    };
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                number?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "invoice";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "timesreport";
            attributes?: {
                term?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "expensesreport";
            attributes?: {
                term?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "absencesreport";
            attributes?: {
                creationDate?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "businessunit";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "role";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "app";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "customer";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "quotation";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "device";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "actiontemplate";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "flag";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "thread";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "savedsearch";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "webhook";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "target";
            attributes?: {
                name?: "global" | "activityExpenses" | "billing" | "commercial" | "humanResources" | "recruitment" | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteLogsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postLogsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search marketplace's apps
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/invoices.csv?keywords=FACT1*
 *
 */
export declare function getMarketplace(body?: string, { keywords, categories, onlyMyApps, validations, visibilities, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    categories?: string[];
    onlyMyApps?: boolean;
    validations?: string[];
    visibilities?: string[];
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "app";
            attributes?: {
                name?: string;
                isInstalled?: boolean;
                logo?: string;
                code?: string;
                integration?: "iFrame" | "module";
                website?: string;
                isValidated?: boolean;
                isPublic?: boolean;
                title?: string;
                description?: string;
            };
            relationships?: {
                vendor?: {
                    data: {
                        id: string;
                        "type": "vendor";
                    };
                };
            };
        }[];
        included?: {
            id: string;
            type: "vendor";
            attributes?: {
                name?: string | undefined;
                logo?: string | undefined;
                isOwner?: boolean | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a marketplace's apps
 */
export declare function postMarketplace(body?: {
    data: {
        "type": "app";
        attributes: {
            name: string;
            title?: string;
            category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
            code: string;
            url?: string;
            website?: string;
            testimoniesUrl?: string;
            termsOfUseUrl?: string;
            description?: string;
            price?: string;
            logo?: string;
            isPublic?: boolean;
            tokenSecurity?: "permanent" | "temporary";
            isValidated?: boolean;
            hasConfigurationPage?: boolean;
            apisAllowed?: {
                page: "application/dictionary" | "application/perimeters" | "application/flags" | "application/assignments" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absencesReports" | "expensesReports" | "timesReports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources" | "accounts" | "dashboard" | "accounts/(id}" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "timesReports/@id" | "expensesReports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                event: "read" | "create" | "update" | "delete";
            }[];
            customersAllowed?: string[];
            hostsAllowed?: string[];
            buttonsSetting?: {
                page: "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries-inactivities" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absences-reports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries-groupments" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absences-reports" | "expenses-reports" | "times-reports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources";
                title: string;
                "function": string;
            }[];
            iFramesSetting?: {
                page: "dashboard" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                scrolling: boolean;
                height: number;
                isHalfWidth: boolean;
                "function": string;
            }[];
            triggersSetting?: {
                page: "actions/@id" | "candidates/@id" | "resources/@id" | "products/@id" | "contracts/@id" | "advantages/@id" | "opportunities/@id" | "projects/@id" | "positionings/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "times-reports/@id" | "expenses-reports/@id" | "absences-reports/@id" | "purchases/@id" | "payments/@id" | "orders/@id" | "invoices/@id" | "contacts/@id" | "companies/@id";
                event: "create" | "update" | "delete";
                "function": string;
            }[];
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "app";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                title?: string;
                category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                code?: string;
                key?: string;
                url?: string;
                integration?: "iFrame" | "module";
                website?: string;
                testimoniesUrl?: string;
                termsOfUseUrl?: string;
                description?: string;
                price?: string;
                logo?: string;
                isPublic?: boolean;
                tokenSecurity?: "permanent" | "temporary";
                isRefreshTokenValidated?: boolean;
                isValidated?: boolean;
                isInstalled?: boolean;
                isBoondManagerApp?: boolean;
                hasConfigurationPage?: boolean;
                apisAllowed?: {
                    page: "application/dictionary" | "application/perimeters" | "application/flags" | "application/assignments" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absencesReports" | "expensesReports" | "timesReports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources" | "accounts" | "dashboard" | "accounts/(id}" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "timesReports/@id" | "expensesReports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                    event: "read" | "create" | "update" | "delete";
                }[];
                customersAllowed?: string[];
                hostsAllowed?: string[];
                buttonsSetting?: {
                    page: "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries-inactivities" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absences-reports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries-groupments" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absences-reports" | "expenses-reports" | "times-reports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources";
                    title: string;
                    "function": string;
                }[];
                iFramesSetting?: {
                    page: "dashboard" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                    scrolling: boolean;
                    height: number;
                    isHalfWidth: boolean;
                    "function": string;
                }[];
                triggersSetting?: {
                    page: "actions/@id" | "candidates/@id" | "resources/@id" | "products/@id" | "contracts/@id" | "advantages/@id" | "opportunities/@id" | "projects/@id" | "positionings/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "times-reports/@id" | "expenses-reports/@id" | "absences-reports/@id" | "purchases/@id" | "payments/@id" | "orders/@id" | "invoices/@id" | "contacts/@id" | "companies/@id";
                    event: "create" | "update" | "delete";
                    "function": string;
                }[];
                visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
            };
            relationships?: {
                vendor?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "vendor";
            attributes?: {
                name?: string | undefined;
                email1?: string | undefined;
                phone1?: string | undefined;
                address?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
                website?: string | undefined;
                isOwner?: boolean | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteMarketplace(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putMarketplace(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty marketplace's App default information data
 */
export declare function getMarketplaceDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "action";
            attributes?: {
                category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                isPublic?: boolean;
                tokenSecurity?: "permanent" | "temporary";
            };
            relationships?: {
                vendor?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "vendor";
            attributes?: {
                name?: string | undefined;
                email1?: string | undefined;
                phone1?: string | undefined;
                address?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
                website?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putMarketplaceDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "action";
            attributes?: {
                category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                isPublic?: boolean;
                tokenSecurity?: "permanent" | "temporary";
            };
            relationships?: {
                vendor?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "vendor";
            attributes?: {
                name?: string | undefined;
                email1?: string | undefined;
                phone1?: string | undefined;
                address?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
                website?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteMarketplaceDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postMarketplaceDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get marketplace's App basic data
 */
export declare function getMarketplaceById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "app";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                title?: string;
                category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                code?: string;
                key?: string;
                url?: string;
                integration?: "iFrame" | "module";
                website?: string;
                testimoniesUrl?: string;
                termsOfUseUrl?: string;
                description?: string;
                price?: string;
                logo?: string;
                isPublic?: boolean;
                tokenSecurity?: "permanent" | "temporary";
                isRefreshTokenValidated?: boolean;
                isValidated?: boolean;
                isInstalled?: boolean;
                isBoondManagerApp?: boolean;
                hasConfigurationPage?: boolean;
                apisAllowed?: {
                    page: "application/dictionary" | "application/perimeters" | "application/flags" | "application/assignments" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absencesReports" | "expensesReports" | "timesReports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources" | "accounts" | "dashboard" | "accounts/(id}" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "timesReports/@id" | "expensesReports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                    event: "read" | "create" | "update" | "delete";
                }[];
                customersAllowed?: string[];
                hostsAllowed?: string[];
                buttonsSetting?: {
                    page: "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries-inactivities" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absences-reports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries-groupments" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absences-reports" | "expenses-reports" | "times-reports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources";
                    title: string;
                    "function": string;
                }[];
                iFramesSetting?: {
                    page: "dashboard" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                    scrolling: boolean;
                    height: number;
                    isHalfWidth: boolean;
                    "function": string;
                }[];
                triggersSetting?: {
                    page: "actions/@id" | "candidates/@id" | "resources/@id" | "products/@id" | "contracts/@id" | "advantages/@id" | "opportunities/@id" | "projects/@id" | "positionings/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "times-reports/@id" | "expenses-reports/@id" | "absences-reports/@id" | "purchases/@id" | "payments/@id" | "orders/@id" | "invoices/@id" | "contacts/@id" | "companies/@id";
                    event: "create" | "update" | "delete";
                    "function": string;
                }[];
                visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
            };
            relationships?: {
                vendor?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "vendor";
            attributes?: {
                name?: string | undefined;
                email1?: string | undefined;
                phone1?: string | undefined;
                address?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
                website?: string | undefined;
                isOwner?: boolean | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete a marketplace's App
 */
export declare function deleteMarketplaceById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a marketplace's App
 */
export declare function putMarketplaceById(body?: {
    data: {
        id: string;
        "type": "app";
        attributes?: {
            name?: string;
            title?: string;
            category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
            url?: string;
            website?: string;
            testimoniesUrl?: string;
            termsOfUseUrl?: string;
            description?: string;
            price?: string;
            logo?: string;
            isPublic?: boolean;
            tokenSecurity?: "permanent" | "temporary";
            isValidated?: boolean;
            hasConfigurationPage?: boolean;
            apisAllowed?: {
                page: "application/dictionary" | "application/perimeters" | "application/flags" | "application/assignments" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absencesReports" | "expensesReports" | "timesReports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources" | "accounts" | "dashboard" | "accounts/(id}" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "timesReports/@id" | "expensesReports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                event: "read" | "create" | "update" | "delete";
            }[];
            customersAllowed?: string[];
            hostsAllowed?: string[];
            buttonsSetting?: {
                page: "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries-inactivities" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absences-reports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries-groupments" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absences-reports" | "expenses-reports" | "times-reports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources";
                title: string;
                "function": string;
            }[];
            iFramesSetting?: {
                page: "dashboard" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                scrolling: boolean;
                height: number;
                isHalfWidth: boolean;
                "function": string;
            }[];
            triggersSetting?: {
                page: "actions/@id" | "candidates/@id" | "resources/@id" | "products/@id" | "contracts/@id" | "advantages/@id" | "opportunities/@id" | "projects/@id" | "positionings/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "times-reports/@id" | "expenses-reports/@id" | "absences-reports/@id" | "purchases/@id" | "payments/@id" | "orders/@id" | "invoices/@id" | "contacts/@id" | "companies/@id";
                event: "create" | "update" | "delete";
                "function": string;
            }[];
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "app";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                title?: string;
                category?: "other" | "mail" | "calendar" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer";
                code?: string;
                key?: string;
                url?: string;
                integration?: "iFrame" | "module";
                website?: string;
                testimoniesUrl?: string;
                termsOfUseUrl?: string;
                description?: string;
                price?: string;
                logo?: string;
                isPublic?: boolean;
                tokenSecurity?: "permanent" | "temporary";
                isRefreshTokenValidated?: boolean;
                isValidated?: boolean;
                isInstalled?: boolean;
                isBoondManagerApp?: boolean;
                hasConfigurationPage?: boolean;
                apisAllowed?: {
                    page: "application/dictionary" | "application/perimeters" | "application/flags" | "application/assignments" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absencesReports" | "expensesReports" | "timesReports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources" | "accounts" | "dashboard" | "accounts/(id}" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "timesReports/@id" | "expensesReports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                    event: "read" | "create" | "update" | "delete";
                }[];
                customersAllowed?: string[];
                hostsAllowed?: string[];
                buttonsSetting?: {
                    page: "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries-inactivities" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absences-reports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries-groupments" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id" | "purchases" | "payments" | "actions" | "opportunities" | "candidates" | "absences-reports" | "expenses-reports" | "times-reports" | "invoices" | "orders" | "billing-deliveries-purchases-balance" | "billing-monthly-schedule" | "billing-projects-balance" | "billing-schedules-balance" | "contacts" | "companies" | "positionings" | "products" | "projects" | "deliveries-inactivities-groupments" | "resources";
                    title: string;
                    "function": string;
                }[];
                iFramesSetting?: {
                    page: "dashboard" | "resources/@id" | "resources/@id/information" | "resources/@id/administrative" | "resources/@id/technical-data" | "resources/@id/actions" | "resources/@id/positionings" | "resources/@id/deliveries" | "resources/@id/times-reports" | "resources/@id/expenses-reports" | "resources/@id/absences-reports" | "resources/@id/absences-accounts" | "candidates/@id" | "candidates/@id/information" | "candidates/@id/administrative" | "candidates/@id/technical-data" | "candidates/@id/actions" | "candidates/@id/positionings" | "contacts/@id" | "contacts/@id/information" | "contacts/@id/actions" | "contacts/@id/opportunities" | "contacts/@id/projects" | "contacts/@id/purchases" | "contacts/@id/orders" | "contacts/@id/invoices" | "companies/@id" | "companies/@id/information" | "companies/@id/contacts" | "companies/@id/actions" | "companies/@id/opportunities" | "companies/@id/projects" | "companies/@id/purchases" | "companies/@id/orders" | "companies/@id/invoices" | "opportunities/@id" | "opportunities/@id/information" | "opportunities/@id/positionings" | "opportunities/@id/actions" | "absencesReports/@id" | "invoices/@id" | "invoices/@id/information" | "invoices/@id/actions" | "times-reports/@id" | "expenses-reports/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "products/@id" | "products/@id/information" | "products/@id/actions" | "products/@id/opportunities" | "products/@id/projects" | "projects/@id" | "projects/@id/information" | "projects/@id/batches-markers" | "projects/@id/actions" | "projects/@id/deliveries" | "projects/@id/advantages" | "projects/@id/purchases" | "projects/@id/productivity" | "projects/@id/orders" | "purchases/@id" | "purchases/@id/information" | "purchases/@id/payments" | "purchases/@id/actions" | "purchases/@id/projects" | "payments/@id" | "positionings/@id" | "actions/@id" | "advantages/@id" | "orders/@id" | "orders/@id/information" | "orders/@id/invoices" | "orders/@id/actions" | "contracts/@id";
                    scrolling: boolean;
                    height: number;
                    isHalfWidth: boolean;
                    "function": string;
                }[];
                triggersSetting?: {
                    page: "actions/@id" | "candidates/@id" | "resources/@id" | "products/@id" | "contracts/@id" | "advantages/@id" | "opportunities/@id" | "projects/@id" | "positionings/@id" | "deliveries/@id" | "groupments/@id" | "inactivities/@id" | "times-reports/@id" | "expenses-reports/@id" | "absences-reports/@id" | "purchases/@id" | "payments/@id" | "orders/@id" | "invoices/@id" | "contacts/@id" | "companies/@id";
                    event: "create" | "update" | "delete";
                    "function": string;
                }[];
                visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
            };
            relationships?: {
                vendor?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "vendor";
            attributes?: {
                name?: string | undefined;
                email1?: string | undefined;
                phone1?: string | undefined;
                address?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
                website?: string | undefined;
                isOwner?: boolean | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postMarketplaceById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get marketplace's App access
 */
export declare function getMarketplaceByIdConfigure(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "app";
            attributes?: {
                name?: string;
                visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update marketplace's App access
 */
export declare function putMarketplaceByIdConfigure(body?: {
    data: {
        id: string;
        "type": "app";
        attributes?: {
            visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "app";
            attributes?: {
                name?: string;
                visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteMarketplaceByIdConfigure(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postMarketplaceByIdConfigure(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get marketplace's App access
 */
export declare function getMarketplaceByAppCodeConfigure(appCode: string, body?: string, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "app";
            attributes?: {
                name?: string;
                visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update marketplace's App access
 */
export declare function putMarketplaceByAppCodeConfigure(appCode: string, body?: {
    data: {
        id: string;
        "type": "app";
        attributes?: {
            visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "app";
            attributes?: {
                name?: string;
                visibility?: "allowedManagers" | "allManagers" | "allowedManagersAndResources" | "allManagersAndResources";
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteMarketplaceByAppCodeConfigure(appCode: string, body?: string, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postMarketplaceByAppCodeConfigure(appCode: string, body?: string, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Refresh App token
 */
export declare function postMarketplaceRefreshToken(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "app";
            attributes?: {
                appRefreshToken?: string;
                appToken?: string;
                createdAt?: string;
                expiresIn?: number;
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteMarketplaceRefreshToken(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putMarketplaceRefreshToken(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getMarketplaceRefreshToken(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Log out user
 */
export declare function deleteMicrosoftById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postMicrosoftById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putMicrosoftById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getMicrosoftById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search opportunities
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/opportunities.csv?keywords=AO100*
 *
 */
export declare function getOpportunities(body?: string, { keywords, returnMoreData, perimeterManagersType, positioningStates, period, startDate, endDate, opportunityStates, opportunityTypes, expertiseAreas, activityAreas, tools, places, durations, origins, flags, onlyVisible, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    returnMoreData?: string[];
    perimeterManagersType?: string;
    positioningStates?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    opportunityStates?: number[];
    opportunityTypes?: string[];
    expertiseAreas?: string[];
    activityAreas?: string;
    tools?: string[];
    places?: string[];
    durations?: number[];
    origins?: string[];
    flags?: number[];
    onlyVisible?: boolean;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
                turnoverWeightedExcludingTax?: number | undefined;
                turnoverEstimatedExcludingTax?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "opportunity";
            attributes?: {
                creationDate?: string;
                title?: string;
                reference?: string;
                typeOf?: number;
                mode?: 1 | 2 | 3 | 4;
                state?: number;
                place?: string;
                isVisible?: boolean;
                startDate?: string | "immediate";
                closingDate?: string;
                answerDate?: string;
                duration?: number;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                turnoverWeightedExcludingTax?: number;
                estimatesExcludingTax?: number;
                turnoverEstimatedExcludingTax?: number;
                expertiseArea?: string;
                activityAreas?: string[];
                origin?: {
                    typeOf: number;
                    detail: string;
                };
                tools?: string[];
                numberOfActivePositionings?: number;
                canShowContact?: boolean;
                canShowCompany?: boolean;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                };
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                thumbnail?: string | undefined;
                canReadContact?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                thumbnail?: string | undefined;
                canReadCompany?: boolean | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create an opportunity
 */
export declare function postOpportunities(body?: {
    data: {
        "type": "opportunity";
        attributes: {
            creationDate?: string;
            title: string;
            reference?: string;
            state?: number;
            stateReason?: {
                typeOf?: number;
                detail?: string;
                [key: string]: any;
            };
            typeOf?: number;
            origin?: {
                typeOf: number;
                detail: string;
            };
            expertiseArea?: string;
            activityAreas?: string[];
            tools?: string[];
            place?: string;
            duration?: number;
            estimatesExcludingTax?: number;
            turnoverEstimatedExcludingTax?: number;
            weighting?: number;
            isVisible?: boolean;
            startDate?: string | "immediate";
            currency?: number;
            exchangeRate?: number;
            currencyAgency?: number;
            exchangeRateAgency?: number;
        };
        relationships?: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
            company?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            };
            contact?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "contact";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "opportunity";
            attributes?: {
                creationDate?: string | undefined;
                updateDate?: string | undefined;
                workUnitRate?: number | undefined;
                title?: string | undefined;
                reference?: string | undefined;
                state?: number | undefined;
                stateReason?: {
                    [key: string]: any;
                    typeOf?: number | undefined;
                    detail?: string | undefined;
                } | undefined;
                typeOf?: number | undefined;
                mode?: 2 | 1 | 3 | 4 | undefined;
                origin?: {
                    typeOf: number;
                    detail: string;
                } | undefined;
                description?: string | undefined;
                criteria?: string | undefined;
                expertiseArea?: string | undefined;
                activityAreas?: string[] | undefined;
                tools?: string[] | undefined;
                place?: string | undefined;
                duration?: number | undefined;
                turnoverWeightedExcludingTax?: number | undefined;
                estimatesExcludingTax?: number | undefined;
                turnoverEstimatedExcludingTax?: number | undefined;
                weighting?: number | undefined;
                isVisible?: boolean | undefined;
                startDate?: string | undefined;
                closingDate?: string | undefined;
                answerDate?: string | undefined;
                validateSimulation?: boolean | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                numberOfProjects?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                workUnitRateOnProjectsAndOpportunities?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteOpportunities(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putOpportunities(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty opportunity's default information data
 */
export declare function getOpportunitiesDefault(body?: string, { contact, company, typeOf }?: {
    contact?: number;
    company?: number;
    typeOf?: number;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            type: "opportunity";
            attributes?: {
                state?: number | undefined;
                stateReason?: {
                    [key: string]: any;
                    typeOf?: number | undefined;
                    detail?: string | undefined;
                } | undefined;
                typeOf?: number | undefined;
                mode?: 2 | 1 | 3 | 4 | undefined;
                startDate?: string | undefined;
                activityAreas?: string[] | undefined;
                expertiseArea?: string | undefined;
                place?: string | undefined;
                tools?: string[] | undefined;
                answerDate?: string | undefined;
                closingDate?: string | undefined;
                currency?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRate?: number | undefined;
                exchangeRateAgency?: number | undefined;
                origin?: {
                    typeOf: number;
                    detail: string;
                } | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putOpportunitiesDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            type: "opportunity";
            attributes?: {
                state?: number | undefined;
                stateReason?: {
                    [key: string]: any;
                    typeOf?: number | undefined;
                    detail?: string | undefined;
                } | undefined;
                typeOf?: number | undefined;
                mode?: 2 | 1 | 3 | 4 | undefined;
                startDate?: string | undefined;
                activityAreas?: string[] | undefined;
                expertiseArea?: string | undefined;
                place?: string | undefined;
                tools?: string[] | undefined;
                answerDate?: string | undefined;
                closingDate?: string | undefined;
                currency?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRate?: number | undefined;
                exchangeRateAgency?: number | undefined;
                origin?: {
                    typeOf: number;
                    detail: string;
                } | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteOpportunitiesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postOpportunitiesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get opportunity's basic data
 */
export declare function getOpportunitiesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "opportunity";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                title?: string;
                reference?: string;
                typeOf?: number;
                mode?: 1 | 2 | 3 | 4;
                state?: number;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                workUnitRate?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                };
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
            };
            included?: ({
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the opportunity
 */
export declare function deleteOpportunitiesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putOpportunitiesById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "opportunity";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                title?: string;
                reference?: string;
                typeOf?: number;
                mode?: 1 | 2 | 3 | 4;
                state?: number;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                workUnitRate?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                };
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
            };
            included?: ({
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postOpportunitiesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search orders
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/orders.csv?keywords=BDC1*
 *
 */
export declare function getOrders(body?: string, { keywords, projectTypes, paymentMethods, states, period, startDate, endDate, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    projectTypes?: number[];
    paymentMethods?: number[];
    states?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
                turnoverInvoicedExcludingTax?: number | undefined;
                turnoverOrderedExcludingTax?: number | undefined;
                deltaInvoicedExcludingTax?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "order";
            attributes?: {
                date?: string;
                "number"?: string;
                reference?: string;
                customerAgreement?: boolean;
                turnoverInvoicedExcludingTax?: number;
                turnoverOrderedExcludingTax?: number;
                deltaInvoicedExcludingTax?: number;
                state?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
            relationships?: {
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create an order
 */
export declare function postOrders(body?: {
    data: {
        "type": "order";
        attributes: {
            date?: string;
            "number": string;
            customerAgreement?: boolean;
            state?: number;
            typeOf?: "schedule" | "monthly";
            reference?: string;
            language?: "fr" | "en";
            paymentMethod?: number;
            paymentTerm?: number;
            taxRates?: number[];
            turnoverOrderedExcludingTax?: number;
            informationComments?: string;
            legals?: string;
            createInvoiceAutomatically?: boolean;
            copyCommentsOnNewInvoice?: boolean;
            showCommentsOnPDF?: boolean;
            showFactorOnPDF?: boolean;
            showCompanyVATNumberOnPDF?: boolean;
            showCompanyNumberOnPDF?: boolean;
            showBankDetailsOnPDF?: boolean;
            showProjectReferenceOnPDF?: boolean;
            showResourcesNameOnPDF?: boolean;
            showAverageDailyPriceOnPDF?: boolean;
            showNumberOfWorkingDaysOnPDF?: boolean;
            showFooterOnPDF?: boolean;
            separateActivityExpensesAndPurchases?: boolean;
            groupDeliveries?: boolean;
            schedules?: ({
                date: string;
                title: string;
                turnoverQuotaExcludingTax: number;
                turnoverTermOfPaymentExcludingTax: number;
                forceTermOfPaymentExcludingTax: boolean;
            } | {
                id: string;
                date: string;
                title: string;
                turnoverQuotaExcludingTax: number;
                turnoverTermOfPaymentExcludingTax: number;
                forceTermOfPaymentExcludingTax: boolean;
            })[];
        };
        relationships: {
            project: {
                data: {
                    id: string;
                    "type": "project";
                };
            };
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            bankDetail?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "bankdetail";
                };
            };
            billingDetail?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "detail";
                };
            };
            factor?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            };
            deliveriesPurchases?: {
                data: ({
                    id: string;
                    "type": "delivery";
                } | {
                    id: string;
                    "type": "purchase";
                })[];
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "noBillingDetail" | "noBankDetail" | "orderHasNoCompany";
                detail: string;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "order";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                date?: string;
                "number"?: string;
                customerAgreement?: boolean;
                state?: number;
                typeOf?: "schedule" | "monthly";
                reference?: string;
                startDate?: string;
                endDate?: string;
                language?: "fr" | "en";
                paymentMethod?: number;
                paymentTerm?: number;
                sendingMode?: number;
                billingInstructions?: string;
                taxRate?: number;
                taxRates?: number[];
                turnoverOrderedExcludingTax?: number;
                informationComments?: string;
                legals?: string;
                createInvoiceAutomatically?: boolean;
                copyCommentsOnNewInvoice?: boolean;
                showCommentsOnPDF?: boolean;
                showFactorOnPDF?: boolean;
                showCompanyVATNumberOnPDF?: boolean;
                showCompanyNumberOnPDF?: boolean;
                showBankDetailsOnPDF?: boolean;
                showProjectReferenceOnPDF?: boolean;
                showResourcesNameOnPDF?: boolean;
                showAverageDailyPriceOnPDF?: boolean;
                showNumberOfWorkingDaysOnPDF?: boolean;
                showFooterOnPDF?: boolean;
                separateActivityExpensesAndPurchases?: boolean;
                groupDeliveries?: boolean;
                monitorSignedTimesheets?: boolean;
                blockInvoiceGeneration?: boolean;
                attachSignedTimesheetsToEmail?: boolean;
                schedules?: {
                    id: string;
                    date: string;
                    title: string;
                    turnoverQuotaExcludingTax: number;
                    turnoverTermOfPaymentExcludingTax: number;
                    forceTermOfPaymentExcludingTax: boolean;
                    invoices?: {
                        id: string;
                    }[];
                }[];
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                bankDetail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "bankdetail";
                    };
                };
                billingDetail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "detail";
                    };
                };
                headOffice?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "detail";
                    };
                };
                factor?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
                deliveriesPurchases?: {
                    data: ({
                        id: string;
                        "type": "delivery";
                    } | {
                        id: string;
                        "type": "purchase";
                    })[];
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                banksDetails?: {
                    id: string;
                    description: string;
                    iban: string;
                    bic: string;
                    isDefault: boolean;
                }[] | undefined;
                ordersDistinguishHeadOffice?: boolean | undefined;
                ordersAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                number?: string | undefined;
                vatNumber?: string | undefined;
                billingDetails?: {
                    id: string;
                    name: string;
                    contact: string;
                    phone1: string;
                    email1: string;
                    email2: string;
                    email3: string;
                    address1: string;
                    address2: string;
                    address3: string;
                    postcode: string;
                    town: string;
                    country: string;
                    state: boolean;
                    isUsed: boolean;
                    canEdit: boolean;
                    canDelete: boolean;
                }[] | undefined;
                address?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
                canReadCompany?: boolean | undefined;
                canWriteCompany?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                deliveries?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    }[];
                } | undefined;
                purchases?: {
                    data: {
                        id: string;
                        "type": "purchase";
                    }[];
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "purchase";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
                date?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                subscription?: number | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteOrders(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putOrders(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty order's default information data
 */
export declare function getOrdersDefault(project: number, body?: string, { deliveries, purchases }?: {
    deliveries?: number[];
    purchases?: number[];
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "order";
            attributes?: {
                date?: string;
                startDate?: string;
                endDate?: string;
                state?: number;
                typeOf?: "schedule" | "monthly";
                language?: "fr" | "en";
                paymentMethod?: number;
                paymentTerm?: number;
                taxRate?: number;
                taxRates?: number[];
                turnoverOrderedExcludingTax?: number;
                legals?: string;
                createInvoiceAutomatically?: boolean;
                copyCommentsOnNewInvoice?: boolean;
                showCommentsOnPDF?: boolean;
                showFactorOnPDF?: boolean;
                showCompanyVATNumberOnPDF?: boolean;
                showCompanyNumberOnPDF?: boolean;
                showBankDetailsOnPDF?: boolean;
                showProjectReferenceOnPDF?: boolean;
                showResourcesNameOnPDF?: boolean;
                showAverageDailyPriceOnPDF?: boolean;
                showNumberOfWorkingDaysOnPDF?: boolean;
                showFooterOnPDF?: boolean;
                separateActivityExpensesAndPurchases?: boolean;
                groupDeliveries?: boolean;
                monitorSignedTimesheets?: boolean;
                blockInvoiceGeneration?: boolean;
                attachSignedTimesheetsToEmail?: boolean;
                schedules?: {
                    id: string;
                    date: string;
                    title: string;
                    turnoverQuotaExcludingTax: number;
                    turnoverTermOfPaymentExcludingTax: number;
                    forceTermOfPaymentExcludingTax: boolean;
                    invoices?: {
                        id: string;
                    }[];
                }[];
                billingInstructions?: string;
                sendingMode?: number;
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                bankDetail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "bankdetail";
                    };
                };
                billingDetail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "detail";
                    };
                };
                headOffice?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "detail";
                    };
                };
                factor?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
                deliveriesPurchases?: {
                    data: ({
                        id: string;
                        "type": "delivery";
                    } | {
                        id: string;
                        "type": "purchase";
                    })[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                ordersDistinguishHeadOffice?: boolean | undefined;
                ordersSeparateActivityExpensesAndPurchases?: boolean | undefined;
                ordersGroupDeliveries?: boolean | undefined;
                ordersMonitorSignedTimesheets?: boolean | undefined;
                ordersBlockInvoiceGeneration?: boolean | undefined;
                ordersAttachSignedTimesheetsToEmail?: boolean | undefined;
                ordersAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                vatNumber?: string | undefined;
                billingDetails?: {
                    id: string;
                    name: string;
                    contact: string;
                    phone1: string;
                    email1: string;
                    email2: string;
                    email3: string;
                    address1: string;
                    address2: string;
                    address3: string;
                    postcode: string;
                    town: string;
                    country: string;
                    state: boolean;
                    isUsed: boolean;
                    canEdit: boolean;
                    canDelete: boolean;
                }[] | undefined;
                address?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
                canReadCompany?: boolean | undefined;
                canWriteCompany?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                deliveries?: any[] | undefined;
                purchases?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "purchase";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
                date?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                subscription?: number | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putOrdersDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "order";
            attributes?: {
                date?: string;
                startDate?: string;
                endDate?: string;
                state?: number;
                typeOf?: "schedule" | "monthly";
                language?: "fr" | "en";
                paymentMethod?: number;
                paymentTerm?: number;
                taxRate?: number;
                taxRates?: number[];
                turnoverOrderedExcludingTax?: number;
                legals?: string;
                createInvoiceAutomatically?: boolean;
                copyCommentsOnNewInvoice?: boolean;
                showCommentsOnPDF?: boolean;
                showFactorOnPDF?: boolean;
                showCompanyVATNumberOnPDF?: boolean;
                showCompanyNumberOnPDF?: boolean;
                showBankDetailsOnPDF?: boolean;
                showProjectReferenceOnPDF?: boolean;
                showResourcesNameOnPDF?: boolean;
                showAverageDailyPriceOnPDF?: boolean;
                showNumberOfWorkingDaysOnPDF?: boolean;
                showFooterOnPDF?: boolean;
                separateActivityExpensesAndPurchases?: boolean;
                groupDeliveries?: boolean;
                monitorSignedTimesheets?: boolean;
                blockInvoiceGeneration?: boolean;
                attachSignedTimesheetsToEmail?: boolean;
                schedules?: {
                    id: string;
                    date: string;
                    title: string;
                    turnoverQuotaExcludingTax: number;
                    turnoverTermOfPaymentExcludingTax: number;
                    forceTermOfPaymentExcludingTax: boolean;
                    invoices?: {
                        id: string;
                    }[];
                }[];
                billingInstructions?: string;
                sendingMode?: number;
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                bankDetail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "bankdetail";
                    };
                };
                billingDetail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "detail";
                    };
                };
                headOffice?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "detail";
                    };
                };
                factor?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
                deliveriesPurchases?: {
                    data: ({
                        id: string;
                        "type": "delivery";
                    } | {
                        id: string;
                        "type": "purchase";
                    })[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                ordersDistinguishHeadOffice?: boolean | undefined;
                ordersSeparateActivityExpensesAndPurchases?: boolean | undefined;
                ordersGroupDeliveries?: boolean | undefined;
                ordersMonitorSignedTimesheets?: boolean | undefined;
                ordersBlockInvoiceGeneration?: boolean | undefined;
                ordersAttachSignedTimesheetsToEmail?: boolean | undefined;
                ordersAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                vatNumber?: string | undefined;
                billingDetails?: {
                    id: string;
                    name: string;
                    contact: string;
                    phone1: string;
                    email1: string;
                    email2: string;
                    email3: string;
                    address1: string;
                    address2: string;
                    address3: string;
                    postcode: string;
                    town: string;
                    country: string;
                    state: boolean;
                    isUsed: boolean;
                    canEdit: boolean;
                    canDelete: boolean;
                }[] | undefined;
                address?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
                canReadCompany?: boolean | undefined;
                canWriteCompany?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                deliveries?: any[] | undefined;
                purchases?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "purchase";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
                date?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                subscription?: number | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteOrdersDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postOrdersDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get order's basic data
 */
export declare function getOrdersById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "order";
            attributes?: {
                date?: string;
                "number"?: string;
                reference?: string;
                typeOf?: "schedule" | "monthly";
                schedules?: {
                    id: string;
                    date: string;
                    title: string;
                    turnoverQuotaExcludingTax: number;
                    turnoverTermOfPaymentExcludingTax: number;
                    forceTermOfPaymentExcludingTax: boolean;
                    invoices?: {
                        id: string;
                    }[];
                }[];
                startDate?: string;
                endDate?: string;
                separateActivityExpensesAndPurchases?: boolean;
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the order
 */
export declare function deleteOrdersById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putOrdersById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "order";
            attributes?: {
                date?: string;
                "number"?: string;
                reference?: string;
                typeOf?: "schedule" | "monthly";
                schedules?: {
                    id: string;
                    date: string;
                    title: string;
                    turnoverQuotaExcludingTax: number;
                    turnoverTermOfPaymentExcludingTax: number;
                    forceTermOfPaymentExcludingTax: boolean;
                    invoices?: {
                        id: string;
                    }[];
                }[];
                startDate?: string;
                endDate?: string;
                separateActivityExpensesAndPurchases?: boolean;
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postOrdersById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search payments
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/payments.csv?keywords=ACH1*
 *
 */
export declare function getPayments(body?: string, { keywords, subscriptionTypes, purchaseTypes, paymentStates, paymentMethods, period, startDate, endDate, flags, encoding, exportToDownloadCenter, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    subscriptionTypes?: number[];
    purchaseTypes?: number[];
    paymentStates?: number[];
    paymentMethods?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    exportToDownloadCenter?: boolean;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
                amountExcludingTax?: number | undefined;
                amountIncludingTax?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "payment";
            attributes?: {
                date?: string;
                performedDate?: string;
                expectedDate?: string;
                state?: number;
                "number"?: string;
                amountExcludingTax?: number;
                amountIncludingTax?: number;
                numberOfFiles?: number;
            };
            relationships?: {
                purchase?: {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                };
                file?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "document";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "purchase";
            attributes?: {
                title?: string | undefined;
                subscription?: number | undefined;
                typeOf?: number | undefined;
                reference?: string | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a payment
 */
export declare function postPayments(body?: {
    data: {
        "type": "positioning";
        attributes?: {
            date?: string;
            state?: number;
            paymentMethod?: number;
            taxRates?: number[];
            startDate?: string;
            endDate?: string;
            "number"?: string;
            performedDate?: string;
            amountExcludingTax?: number;
            informationComments?: string;
        };
        relationships: {
            purchase: {
                data: {
                    id: string;
                    "type": "purchase";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "payment";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                date?: string;
                state?: number;
                paymentMethod?: number;
                taxRate?: number;
                taxRates?: number[];
                startDate?: string;
                endDate?: string;
                "number"?: string;
                expectedDate?: string;
                performedDate?: string;
                amountExcludingTax?: number;
                amountIncludingTax?: number;
                informationComments?: string;
                activityDetails?: {
                    resource: {
                        id: string;
                        firstName: string;
                        lastName: string;
                        averageDailyCost: number;
                        costsProduction: number;
                        numberOfWorkingDays?: number;
                        timesReports: {
                            id: string;
                            term: string;
                        }[];
                        expensesReports: {
                            id: string;
                            term: string;
                        }[];
                    };
                }[];
            };
            relationships?: {
                purchase?: {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "purchase";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
                subscription?: number | undefined;
                typeOf?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                paymentTerm?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | undefined;
                additionalTurnoverAndCosts?: {
                    data: null;
                } | {
                    [key: string]: any;
                    data?: {
                        id: string;
                        type: "additionalturnoverandcost";
                    } | undefined;
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                purchasesAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "additionalturnoverandcost";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deletePayments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putPayments(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty payment's default basic data
 */
export declare function getPaymentsDefault(purchase: number, body?: string, { term }?: {
    term?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "payment";
            attributes?: {
                date?: string;
                state?: number;
                paymentMethod?: number;
                taxRate?: number;
                taxRates?: number[];
                startDate?: string;
                endDate?: string;
                expectedDate?: string;
                amountExcludingTax?: number;
                amountIncludingTax?: number;
            };
            relationships?: {
                purchase?: {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "purchase";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
                typeOf?: number | undefined;
                subscription?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                paymentTerm?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                purchasesAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putPaymentsDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "payment";
            attributes?: {
                date?: string;
                state?: number;
                paymentMethod?: number;
                taxRate?: number;
                taxRates?: number[];
                startDate?: string;
                endDate?: string;
                expectedDate?: string;
                amountExcludingTax?: number;
                amountIncludingTax?: number;
            };
            relationships?: {
                purchase?: {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "purchase";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
                typeOf?: number | undefined;
                subscription?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                paymentTerm?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                purchasesAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deletePaymentsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postPaymentsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get payment's basic data
 */
export declare function getPaymentsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "payment";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                date?: string;
                state?: number;
                paymentMethod?: number;
                taxRate?: number;
                taxRates?: number[];
                startDate?: string;
                endDate?: string;
                "number"?: string;
                expectedDate?: string;
                performedDate?: string;
                amountExcludingTax?: number;
                amountIncludingTax?: number;
                informationComments?: string;
                activityDetails?: {
                    resource: {
                        id: string;
                        firstName: string;
                        lastName: string;
                        averageDailyCost: number;
                        costsProduction: number;
                        numberOfWorkingDays?: number;
                        timesReports: {
                            id: string;
                            term: string;
                        }[];
                        expensesReports: {
                            id: string;
                            term: string;
                        }[];
                    };
                }[];
            };
            relationships?: {
                purchase?: {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "purchase";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
                subscription?: number | undefined;
                typeOf?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                paymentTerm?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | undefined;
                additionalTurnoverAndCosts?: {
                    data: null;
                } | {
                    [key: string]: any;
                    data?: {
                        id: string;
                        type: "additionalturnoverandcost";
                    } | undefined;
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                purchasesAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "additionalturnoverandcost";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the payment
 */
export declare function deletePaymentsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a payment
 */
export declare function putPaymentsById(body?: {
    data: {
        id: string;
        "type": "payment";
        attributes?: {
            date?: string;
            state?: number;
            paymentMethod?: number;
            taxRates?: number[];
            startDate?: string;
            endDate?: string;
            "number"?: string;
            performedDate?: string;
            amountExcludingTax?: number;
            informationComments?: string;
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "payment";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                date?: string;
                state?: number;
                paymentMethod?: number;
                taxRate?: number;
                taxRates?: number[];
                startDate?: string;
                endDate?: string;
                "number"?: string;
                expectedDate?: string;
                performedDate?: string;
                amountExcludingTax?: number;
                amountIncludingTax?: number;
                informationComments?: string;
                activityDetails?: {
                    resource: {
                        id: string;
                        firstName: string;
                        lastName: string;
                        averageDailyCost: number;
                        costsProduction: number;
                        numberOfWorkingDays?: number;
                        timesReports: {
                            id: string;
                            term: string;
                        }[];
                        expensesReports: {
                            id: string;
                            term: string;
                        }[];
                    };
                }[];
            };
            relationships?: {
                purchase?: {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "purchase";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
                subscription?: number | undefined;
                typeOf?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                paymentTerm?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | undefined;
                additionalTurnoverAndCosts?: {
                    data: null;
                } | {
                    [key: string]: any;
                    data?: {
                        id: string;
                        type: "additionalturnoverandcost";
                    } | undefined;
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                purchasesAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "additionalturnoverandcost";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postPaymentsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search poles
 */
export declare function getPoles(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "pole";
            attributes?: {
                name?: string;
                state?: boolean;
            };
        }[];
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a pole
 */
export declare function postPoles(body?: {
    data: {
        "type": "pole";
        attributes: {
            name: string;
            state?: boolean;
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "pole";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                state?: boolean;
            };
            relationships?: {
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deletePoles(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putPoles(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get pole's basic data
 */
export declare function getPolesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "pole";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                state?: boolean;
            };
            relationships?: {
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the pole
 */
export declare function deletePolesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a pole
 */
export declare function putPolesById(body?: {
    data: {
        id: string;
        "type": "pole";
        attributes?: {
            name?: string;
            state?: boolean;
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "pole";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                state?: boolean;
            };
            relationships?: {
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postPolesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search positionings
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/positionings.csv?keywords=POS100*
 *
 */
export declare function getPositionings(body?: string, { keywords, perimeterManagersType, positioningType, entityTypes, opportunityTypes, positioningStates, opportunityStates, returnMoreData, period, startDate, endDate, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    perimeterManagersType?: string;
    positioningType?: string;
    entityTypes?: number[];
    opportunityTypes?: number[];
    positioningStates?: number[];
    opportunityStates?: number[];
    returnMoreData?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "positioning";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                state?: number;
                startDate?: string;
                endDate?: string;
                informationComments?: string;
                canReadPositioning?: boolean;
                canShowDependsOn?: boolean;
                canShowOpportunity?: boolean;
                canShowUpdateDate?: boolean;
                canShowState?: boolean;
                canShowCreationDate?: boolean;
                canShowStartDate?: boolean;
                canShowEndDate?: boolean;
                canShowInformationComments?: boolean;
            };
            relationships?: {
                createdBy?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                creator?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                opportunity?: {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                thumbnail?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
                thumbnail?: string | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: 2 | 1 | 3 | 4 | undefined;
                isVisible?: boolean | undefined;
                canShowContact?: boolean | undefined;
                canShowCompany?: boolean | undefined;
                currency?: number | undefined;
                canReadOpportunity?: boolean | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                reference?: string | undefined;
                subscription?: number | undefined;
                name?: string | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                canReadContact?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                canReadCompany?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            data: null;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a positioning.
 *
 * If state is `won` it will attach this positioning to a new project or an existing one.
 *
 */
export declare function postPositionings(body?: {
    data: {
        "type": "positioning";
        attributes?: {
            state?: number;
            stateReason?: {
                typeOf?: number;
                detail?: string;
                [key: string]: any;
            };
            startDate?: string;
            endDate?: string;
            averageDailyPriceExcludingTax?: number;
            averageDailyCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            numberOfDaysFree?: number;
            informationComments?: string;
            includedInSimulation?: boolean;
            additionalTurnoverAndCosts?: {
                id: string;
                title: string;
                turnoverExcludingTax: number;
                costsExcludingTax: number;
                typeOf: number;
            }[];
        };
        relationships: {
            opportunity: {
                data: {
                    id: string;
                    "type": "opportunity";
                };
            };
            project?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            };
            dependsOn: {
                data: {
                    id: string;
                    "type": "resource";
                };
            } | {
                data: {
                    id: string;
                    "type": "candidate";
                };
            } | {
                data: {
                    id: string;
                    "type": "product";
                };
            };
        };
    };
}, { sendMailToDependsOnManager, sendMailToOpportunityManager }?: {
    sendMailToDependsOnManager?: boolean;
    sendMailToOpportunityManager?: boolean;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "positioning";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                state?: number;
                startDate?: string;
                endDate?: string;
                averageDailyPriceExcludingTax?: number;
                averageDailyCost?: number;
                numberOfDaysInvoicedOrQuantity?: number;
                numberOfDaysFree?: number;
                informationComments?: string;
                includedInSimulation?: boolean;
                additionalTurnoverAndCosts?: {
                    id: string;
                    title: string;
                    turnoverExcludingTax: number;
                    costsExcludingTax: number;
                    typeOf: number;
                }[];
                turnoverSimulatedExcludingTax?: number;
                costsSimulatedExcludingTax?: number;
                marginSimulatedExcludingTax?: number;
                profitabilitySimulated?: number;
                occupationRate?: number;
            };
            relationships?: {
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                opportunity?: {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                };
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                name?: string | undefined;
                subscription?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                calendar?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: 2 | 1 | 3 | 4 | undefined;
                state?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                canShowContact?: boolean | undefined;
                canShowCompany?: boolean | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deletePositionings(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putPositionings(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get positioning's basic data
 */
export declare function getPositioningsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "positioning";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                state?: number;
                startDate?: string;
                endDate?: string;
                averageDailyPriceExcludingTax?: number;
                averageDailyCost?: number;
                numberOfDaysInvoicedOrQuantity?: number;
                numberOfDaysFree?: number;
                informationComments?: string;
                includedInSimulation?: boolean;
                additionalTurnoverAndCosts?: {
                    id: string;
                    title: string;
                    turnoverExcludingTax: number;
                    costsExcludingTax: number;
                    typeOf: number;
                }[];
                turnoverSimulatedExcludingTax?: number;
                costsSimulatedExcludingTax?: number;
                marginSimulatedExcludingTax?: number;
                profitabilitySimulated?: number;
                occupationRate?: number;
            };
            relationships?: {
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                opportunity?: {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                };
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                name?: string | undefined;
                subscription?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                calendar?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: 2 | 1 | 3 | 4 | undefined;
                state?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                canShowContact?: boolean | undefined;
                canShowCompany?: boolean | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the positioning
 */
export declare function deletePositioningsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a positioning.
 *
 * If state is `won` it will attach this positioning to a new project or an existing one.
 *
 */
export declare function putPositioningsById(body?: {
    data: {
        id: string;
        "type": "positioning";
        attributes?: {
            state?: number;
            stateReason?: {
                typeOf?: number;
                detail?: string;
                [key: string]: any;
            };
            startDate?: string;
            endDate?: string;
            averageDailyPriceExcludingTax?: number;
            averageDailyCost?: number;
            numberOfDaysInvoicedOrQuantity?: number;
            numberOfDaysFree?: number;
            informationComments?: string;
            includedInSimulation?: boolean;
            additionalTurnoverAndCosts?: ({
                title: string;
                turnoverExcludingTax: number;
                costsExcludingTax: number;
                typeOf: number;
            } | {
                id: string;
                title: string;
                turnoverExcludingTax: number;
                costsExcludingTax: number;
                typeOf: number;
            })[];
        };
        relationships?: {
            project?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            };
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "positioning";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                state?: number;
                startDate?: string;
                endDate?: string;
                averageDailyPriceExcludingTax?: number;
                averageDailyCost?: number;
                numberOfDaysInvoicedOrQuantity?: number;
                numberOfDaysFree?: number;
                informationComments?: string;
                includedInSimulation?: boolean;
                additionalTurnoverAndCosts?: {
                    id: string;
                    title: string;
                    turnoverExcludingTax: number;
                    costsExcludingTax: number;
                    typeOf: number;
                }[];
                turnoverSimulatedExcludingTax?: number;
                costsSimulatedExcludingTax?: number;
                marginSimulatedExcludingTax?: number;
                profitabilitySimulated?: number;
                occupationRate?: number;
            };
            relationships?: {
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                opportunity?: {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                };
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                name?: string | undefined;
                subscription?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                calendar?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: 2 | 1 | 3 | 4 | undefined;
                state?: number | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                canShowContact?: boolean | undefined;
                canShowCompany?: boolean | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postPositioningsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search products
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/products.csv?keywords=PROD100*
 *
 */
export declare function getProducts(body?: string, { keywords, productStates, productTypes, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    productStates?: number[];
    productTypes?: number[];
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "product";
            attributes?: {
                reference?: string;
                subscription?: number;
                name?: string;
                priceExcludingTax?: number;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a product
 */
export declare function postProducts(body?: {
    data: {
        "type": "product";
        attributes: {
            name: string;
            reference?: string;
            state?: number;
            subscription?: number;
            taxRate?: number;
            currency?: number;
            currencyAgency?: number;
            exchangeRate?: number;
            exchangeRateAgency?: number;
            priceExcludingTax?: number;
            description?: string;
        };
        relationships: {
            mainManager: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "product";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                reference?: string;
                state?: number;
                subscription?: number;
                taxRate?: number;
                taxRates?: number[];
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
                priceExcludingTax?: number;
                priceIncludingTax?: number;
                description?: string;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                productsAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteProducts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putProducts(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty product's default information data
 */
export declare function getProductsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "product";
            attributes?: {
                state?: number;
                subscription?: number;
                taxRate?: number;
                taxRates?: number[];
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
                priceExcludingTax?: number;
                priceIncludingTax?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                productsAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putProductsDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "product";
            attributes?: {
                state?: number;
                subscription?: number;
                taxRate?: number;
                taxRates?: number[];
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
                priceExcludingTax?: number;
                priceIncludingTax?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                productsAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteProductsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postProductsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get product's basic data
 */
export declare function getProductsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "product";
            attributes?: {
                updateDate?: string;
                name?: string;
                subscription?: number;
                reference?: string;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the product
 */
export declare function deleteProductsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putProductsById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "product";
            attributes?: {
                updateDate?: string;
                name?: string;
                subscription?: number;
                reference?: string;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postProductsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search projects
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/projects.csv?keywords=PRJ100*
 *
 */
export declare function getProjects(body?: string, { keywords, projectTypes, projectStates, period, startDate, endDate, expertiseAreas, activityAreas, flags, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    projectTypes?: number[];
    projectStates?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    expertiseAreas?: string[];
    activityAreas?: string;
    flags?: number[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
                turnoverSimulatedExcludingTax?: number | undefined;
                marginSimulatedExcludingTax?: number | undefined;
                profitabilitySimulated?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "project";
            attributes?: {
                startDate?: string;
                endDate?: string;
                typeOf?: number;
                mode?: number;
                reference?: string;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                turnoverSimulatedExcludingTax?: number;
                marginSimulatedExcludingTax?: number;
                profitabilitySimulated?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                };
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                };
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                thumbnail?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a project which mode is only 'product' or `fixed'
 */
export declare function postProjects(body?: {
    data: {
        "type": "project";
        attributes?: {
            creationDate?: string;
            reference?: string;
            state?: number;
            stateReason?: {
                typeOf?: number;
                detail?: string;
                [key: string]: any;
            };
            typeOf: number;
            address?: string;
            postcode?: string;
            town?: string;
            country?: string;
            informationComments?: string;
            startDate?: string;
            endDate?: string;
            currency?: number;
            exchangeRate?: number;
            currencyAgency?: number;
            exchangeRateAgency?: number;
            showBatchesMarkersTab?: boolean;
        };
        relationships?: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
            opportunity?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            };
            company?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            };
            contact?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "contact";
                };
            };
            technical?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "contact";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "project";
            attributes?: {
                creationDate?: string | undefined;
                updateDate?: string | undefined;
                workUnitRate?: number | undefined;
                reference?: string | undefined;
                state?: number | undefined;
                stateReason?: {
                    [key: string]: any;
                    typeOf?: number | undefined;
                    detail?: string | undefined;
                } | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                address?: string | undefined;
                postcode?: string | undefined;
                town?: string | undefined;
                country?: string | undefined;
                informationComments?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                currency?: number | undefined;
                exchangeRate?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRateAgency?: number | undefined;
                showBatchesMarkersTab?: boolean | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
                opportunity?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                technical?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteProjects(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putProjects(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get project's basic data
 */
export declare function getProjectsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "project";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                isProjectManager?: boolean;
                reference?: string;
                typeOf?: number;
                mode?: number;
                workUnitRate?: number;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                deliveryRecruitment?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                allowAdvantagesOnProjects?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the project
 */
export declare function deleteProjectsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putProjectsById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "project";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                isProjectManager?: boolean;
                reference?: string;
                typeOf?: number;
                mode?: number;
                workUnitRate?: number;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                deliveryRecruitment?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                allowAdvantagesOnProjects?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postProjectsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search purchases
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/purchases.csv?keywords=ACH1*
 *
 */
export declare function getPurchases(body?: string, { keywords, subscriptionTypes, purchaseStates, purchaseTypes, paymentMethods, period, startDate, endDate, flags, encoding, exportToDownloadCenter, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    subscriptionTypes?: number[];
    purchaseStates?: number[];
    purchaseTypes?: number[];
    paymentMethods?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    encoding?: string;
    exportToDownloadCenter?: boolean;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
                totalAmountExcludingTax?: number | undefined;
                deltaExcludingTax?: number | undefined;
                engagedPaymentsAmountExcludingTax?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "purchase";
            attributes?: {
                date?: string;
                title?: string;
                subscription?: number;
                typeOf?: number;
                reference?: string;
                state?: number;
                taxRate?: number;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                amountExcludingTax?: number;
                quantity?: number;
                totalAmountExcludingTax?: number;
                deltaExcludingTax?: number;
                engagedPaymentsAmountExcludingTax?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                };
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a purchase
 */
export declare function postPurchases(body?: {
    data: {
        "type": "purchase";
        attributes: {
            date?: string;
            startDate?: string;
            endDate?: string;
            title: string;
            reference?: string;
            "number"?: string;
            state?: number;
            typeOf?: number;
            subscription?: number;
            paymentTerm?: number;
            paymentMethod?: number;
            taxRates?: number[];
            informationComments?: string;
            quantity?: number;
            amountExcludingTax?: number;
            toReinvoice?: boolean;
            reinvoiceRate?: number | ("" | "false" | "off");
            reinvoiceAmountExcludingTax?: number;
            showInformationCommentsOnPDF?: boolean;
            currency?: number;
            currencyAgency?: number;
            exchangeRate?: number;
            exchangeRateAgency?: number;
            createPayments?: "manually" | number;
        };
        relationships?: {
            mainManager?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
            company?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            };
            contact?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "contact";
                };
            };
            project?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            };
            delivery?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            };
            additionalTurnoverAndCosts?: {
                data: null;
            } | {
                data?: {
                    id: string;
                    "type": "additionalturnoverandcost";
                };
                [key: string]: any;
            };
            billingDetail?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "detail";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "purchase";
            attributes?: {
                creationDate?: string | undefined;
                updateDate?: string | undefined;
                date?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                title?: string | undefined;
                reference?: string | undefined;
                number?: string | undefined;
                state?: number | undefined;
                typeOf?: number | undefined;
                subscription?: number | undefined;
                paymentTerm?: number | undefined;
                paymentMethod?: number | undefined;
                taxRate?: number | undefined;
                taxRates?: number[] | undefined;
                informationComments?: string | undefined;
                quantity?: number | undefined;
                amountExcludingTax?: number | undefined;
                amountIncludingTax?: number | undefined;
                totalAmountExcludingTax?: number | undefined;
                totalAmountIncludingTax?: number | undefined;
                toReinvoice?: boolean | undefined;
                reinvoiceRate?: number | "" | "false" | "off" | undefined;
                reinvoiceAmountExcludingTax?: number | undefined;
                showInformationCommentsOnPDF?: boolean | undefined;
                currency?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRate?: number | undefined;
                exchangeRateAgency?: number | undefined;
                additionalTurnoverAndCosts?: {
                    id?: string | undefined;
                    typeOf: number;
                    dependsOn: {
                        [key: string]: any;
                        id?: number | undefined;
                        type?: string | undefined;
                    }[];
                }[] | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | undefined;
                billingDetail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "detail";
                    };
                } | undefined;
                files?: {
                    [key: string]: any;
                    data?: {
                        id: string;
                        type: "document";
                    }[] | undefined;
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                purchasesAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                vatNumber?: string | undefined;
                billingDetails?: {
                    id: string;
                    name: string;
                    contact: string;
                    phone1: string;
                    email1: string;
                    email2: string;
                    email3: string;
                    address1: string;
                    address2: string;
                    address3: string;
                    postcode: string;
                    town: string;
                    country: string;
                    state: boolean;
                    isUsed: boolean;
                    canEdit: boolean;
                    canDelete: boolean;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deletePurchases(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putPurchases(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty purchase's default information data
 */
export declare function getPurchasesDefault(body?: string, { project, delivery, additionalTurnoverAndCosts, contact, company }?: {
    project?: number;
    delivery?: number;
    additionalTurnoverAndCosts?: number;
    contact?: number;
    company?: number;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            type: "purchase";
            attributes?: {
                date?: string | undefined;
                state?: number | undefined;
                title?: string | undefined;
                typeOf?: number | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                subscription?: number | undefined;
                paymentTerm?: number | undefined;
                paymentMethod?: number | undefined;
                taxRate?: number | undefined;
                taxRates?: number[] | undefined;
                createPayments?: number | "manually" | undefined;
                amountExcludingTax?: number | undefined;
                amountIncludingTax?: number | undefined;
                totalAmountExcludingTax?: number | undefined;
                totalAmountIncludingTax?: number | undefined;
                toReinvoice?: boolean | undefined;
                reinvoiceAmountExcludingTax?: number | undefined;
                reinvoiceRate?: number | "" | "false" | "off" | undefined;
                quantity?: number | undefined;
                currency?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRate?: number | undefined;
                exchangeRateAgency?: number | undefined;
                additionalTurnoverAndCosts?: {
                    id?: string | undefined;
                    typeOf: number;
                    dependsOn: {
                        [key: string]: any;
                        id?: number | undefined;
                        type?: string | undefined;
                    }[];
                }[] | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | undefined;
                billingDetail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "detail";
                    };
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                vatNumber?: string | undefined;
                billingDetails?: {
                    id: string;
                    name: string;
                    contact: string;
                    phone1: string;
                    email1: string;
                    email2: string;
                    email3: string;
                    address1: string;
                    address2: string;
                    address3: string;
                    postcode: string;
                    town: string;
                    country: string;
                    state: boolean;
                    isUsed: boolean;
                    canEdit: boolean;
                    canDelete: boolean;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                purchasesAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putPurchasesDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            type: "purchase";
            attributes?: {
                date?: string | undefined;
                state?: number | undefined;
                title?: string | undefined;
                typeOf?: number | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                subscription?: number | undefined;
                paymentTerm?: number | undefined;
                paymentMethod?: number | undefined;
                taxRate?: number | undefined;
                taxRates?: number[] | undefined;
                createPayments?: number | "manually" | undefined;
                amountExcludingTax?: number | undefined;
                amountIncludingTax?: number | undefined;
                totalAmountExcludingTax?: number | undefined;
                totalAmountIncludingTax?: number | undefined;
                toReinvoice?: boolean | undefined;
                reinvoiceAmountExcludingTax?: number | undefined;
                reinvoiceRate?: number | "" | "false" | "off" | undefined;
                quantity?: number | undefined;
                currency?: number | undefined;
                currencyAgency?: number | undefined;
                exchangeRate?: number | undefined;
                exchangeRateAgency?: number | undefined;
                additionalTurnoverAndCosts?: {
                    id?: string | undefined;
                    typeOf: number;
                    dependsOn: {
                        [key: string]: any;
                        id?: number | undefined;
                        type?: string | undefined;
                    }[];
                }[] | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | undefined;
                billingDetail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "detail";
                    };
                } | undefined;
            } | undefined;
        };
        included?: ({
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
                vatNumber?: string | undefined;
                billingDetails?: {
                    id: string;
                    name: string;
                    contact: string;
                    phone1: string;
                    email1: string;
                    email2: string;
                    email3: string;
                    address1: string;
                    address2: string;
                    address3: string;
                    postcode: string;
                    town: string;
                    country: string;
                    state: boolean;
                    isUsed: boolean;
                    canEdit: boolean;
                    canDelete: boolean;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                purchasesAllowMultiplesTaxRates?: boolean | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deletePurchasesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postPurchasesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get purchase's basic data
 */
export declare function getPurchasesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "purchase";
            attributes?: {
                date?: string;
                title?: string;
                reference?: string;
                typeOf?: number;
                startDate?: string;
                endDate?: string;
                subscription?: number;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
            };
            included?: ({
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the purchase
 */
export declare function deletePurchasesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putPurchasesById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "purchase";
            attributes?: {
                date?: string;
                title?: string;
                reference?: string;
                typeOf?: number;
                startDate?: string;
                endDate?: string;
                subscription?: number;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
            };
            included?: ({
                id: string;
                "type": "company";
                attributes?: {
                    name?: string;
                };
            })[];
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postPurchasesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search production plans reporting
 */
export declare function getReportingProductionPlans(startDate: string, endDate: string, body?: string, { keywords, resourceTypes, resourceStates, positioningStates, positioningPeriod, showContracts, projects, contacts, companies, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    resourceTypes?: number[];
    resourceStates?: number[];
    positioningStates?: number[];
    positioningPeriod?: string;
    showContracts?: boolean;
    projects?: number[];
    contacts?: number[];
    companies?: number[];
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "resource";
            attributes?: {
                firstName?: string;
                lastName?: string;
            };
            relationships?: {
                candidate?: {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                };
                contracts?: {
                    data: {
                        id: string;
                        "type": "contract";
                    }[];
                };
                deliveries?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    }[];
                };
                inactivities?: {
                    data: {
                        id: string;
                        "type": "inactivity";
                    }[];
                };
                positionings?: {
                    data: {
                        id: string;
                        "type": "positioning";
                    }[];
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            attributes?: {
                startDate?: string | undefined;
                endDate?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes: {
                firstName?: string;
                lastName?: string;
            };
            relationships?: {
                positionings?: {
                    data: {
                        id: string;
                        "type": "positioning";
                    }[];
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes: {
                startDate?: string;
                endDate?: string;
                occupationRate?: number;
                state?: number;
            };
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "inactivity";
            attributes: {
                startDate?: string;
                endDate?: string;
                occupationRate?: number;
                inactivityType?: "internal" | "absence";
            };
        } | {
            id: string;
            type: "positioning";
            attributes?: {
                creationDate?: string | undefined;
                state?: number | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
                occupationRate?: number | undefined;
            } | undefined;
            relationships?: {
                opportunity?: {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes: {
                title?: string;
                duration?: number;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postReportingProductionPlans(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteReportingProductionPlans(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putReportingProductionPlans(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search synthesis reporting
 */
export declare function getReportingSynthesis(startDate: string, body?: string, { reportingType, reportingCategory, period, endDate, resources, projects, contacts, companies, scorecards, useCache, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter }?: {
    reportingType?: string;
    reportingCategory?: string;
    period?: string;
    endDate?: string;
    resources?: number[];
    projects?: number[];
    contacts?: number[];
    companies?: number[];
    scorecards?: string[];
    useCache?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            cache?: {
                state?: boolean | undefined;
                dateUpdate?: string | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "indicator";
            attributes?: {
                startDate?: string;
                endDate?: string;
                value?: string;
                target?: {
                    operator: "<" | "<=" | "=" | ">" | ">=";
                    value: number;
                };
                scorecard?: {
                    reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                    category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                    typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                    activityType?: "day" | "workUnit";
                    dictionaryId?: number;
                    project?: {
                        id: string;
                        reference: string;
                        activityType: "day" | "workUnit";
                    };
                    opportunity?: {
                        id: string;
                        reference: string;
                    };
                    resource?: {
                        id: string;
                        firstName: string;
                        lastName: string;
                    };
                    candidate?: {
                        id: string;
                        firstName: string;
                        lastName: string;
                    };
                };
            };
        }[];
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postReportingSynthesis(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteReportingSynthesis(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putReportingSynthesis(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search companies reporting
 */
export declare function getReportingCompanies(startDate: string, endDate: string, body?: string, { companiesStates, maxCompanies, showPercentage, companies, scorecards, useCache, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    companiesStates?: number[];
    maxCompanies?: number;
    showPercentage?: boolean;
    companies?: number[];
    scorecards?: string[];
    useCache?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
                dependsOn?: number | undefined;
            } | undefined;
            cache?: {
                state?: boolean | undefined;
                dateUpdate?: string | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "indicator";
            attributes?: {
                startDate?: string;
                endDate?: string;
                value?: string;
                scorecard?: {
                    reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                    category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                    typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                    activityType?: "day" | "workUnit";
                    dictionaryId?: number;
                    project?: {
                        id: string;
                        reference: string;
                        activityType: "day" | "workUnit";
                    };
                    opportunity?: {
                        id: string;
                        reference: string;
                    };
                    resource?: {
                        id: string;
                        firstName: string;
                        lastName: string;
                    };
                    candidate?: {
                        id: string;
                        firstName: string;
                        lastName: string;
                    };
                };
            };
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                };
            };
        }[];
        included?: {
            id: "others" | string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postReportingCompanies(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteReportingCompanies(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putReportingCompanies(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search projects reporting
 */
export declare function getReportingProjects(body?: string, { projectTypes, projectStates, maxProjects, startDate, endDate, resources, projects, contacts, companies, scorecards, useCache, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    projectTypes?: number[];
    projectStates?: number[];
    maxProjects?: number;
    startDate?: string;
    endDate?: string;
    resources?: number[];
    projects?: number[];
    contacts?: number[];
    companies?: number[];
    scorecards?: string[];
    useCache?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
                dependsOn?: number | undefined;
            } | undefined;
            cache?: {
                state?: boolean | undefined;
                dateUpdate?: string | undefined;
            } | undefined;
        };
        data: {
            id: string;
            type: "indicator";
            attributes?: {
                startDate?: string | undefined;
                endDate?: string | undefined;
                value?: string | undefined;
                scorecard?: {
                    reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                    category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                    typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                    activityType?: "day" | "workUnit" | undefined;
                    dictionaryId?: number | undefined;
                    project?: {
                        id: string;
                        reference: string;
                        activityType: "day" | "workUnit";
                    } | undefined;
                    opportunity?: {
                        id: string;
                        reference: string;
                    } | undefined;
                    resource?: {
                        id: string;
                        firstName: string;
                        lastName: string;
                    } | undefined;
                    candidate?: {
                        id: string;
                        firstName: string;
                        lastName: string;
                    } | undefined;
                } | undefined;
                target?: {
                    operator: "<" | "<=" | "=" | ">" | ">=";
                    value: number;
                } | undefined;
            } | undefined;
            relationships?: {
                [key: string]: any;
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        }[];
        included?: ({
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                typeOf?: number | undefined;
                mode?: number | undefined;
                state?: number | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                contact?: {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postReportingProjects(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteReportingProjects(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putReportingProjects(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search resources reporting
 */
export declare function getReportingResources(body?: string, { reportingCategory, maxResources, resourceTypes, resourceStates, period, startDate, endDate, resources, projects, contacts, companies, scorecards, useCache, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    reportingCategory?: string;
    maxResources?: number;
    resourceTypes?: number[];
    resourceStates?: number[];
    period?: string;
    startDate?: string;
    endDate?: string;
    resources?: number[];
    projects?: number[];
    contacts?: number[];
    companies?: number[];
    scorecards?: number[];
    useCache?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
                dependsOn?: number | undefined;
            } | undefined;
            cache?: {
                state?: boolean | undefined;
                dateUpdate?: string | undefined;
            } | undefined;
        };
        data: {
            id: string;
            type: "indicator";
            attributes?: {
                startDate?: string | undefined;
                endDate?: string | undefined;
                value?: string | undefined;
                scorecard?: {
                    reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate") | ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgress" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "durationOfSignedTime" | "durationOfAllTime" | "costsOfSignedExpensesExcludingTax" | "costsOfProductionExpensesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate") | ("company" | "reference" | "typeOf" | "durationOfProductionUsedTimePerResources" | "advancementProductionUsedTime" | "restBudgetProductionUsedTime" | "remainsToBeDone" | "remainsToBeDoneSignedRate" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "costsProductionExcludingTax" | "marginGrossInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityGrossInvoicedPaidFollowingInvoicesDate" | "startDate" | "endDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "mainManager" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "marginGrossInvoicedExcludingTax" | "profitabilityGrossInvoiced" | "marginGrossProductionExcludingTax" | "profitabilityGrossProduction" | "marginGrossSignedExcludingTax" | "profitabilityGrossSigned" | "durationOfProductionSignedTimePerResources" | "activityArea" | "state" | "costsOfPurchasesExcludingTax" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "durationOfProductionSignedTime" | "durationOfProductionUsedTime" | "durationOfProductionPlannedTimePerResources" | "advancementProductionPlannedTime" | "restBudgetProductionPlannedTime" | "durationOfProductionPlannedTime" | "durationOfProductionSignedAndPlannedTime" | "durationOfProductionSignedAndUsedTime" | "durationOfProductionSignedTimeSmoothedOnPeriodPerResources" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "advancementProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "advancementProductionPlannedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "remainsToBeDoneSignedRateSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerResources" | "durationOfExceptionalUsedCalendarPerResources" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "expertiseArea" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "deltaInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginGrossInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityGrossInvoicedFollowingInvoicesPeriod" | "marginGrossOrderedExcludingTax" | "profitabilityGrossOrdered" | "restBudgetOrdered" | "productionCostByResource" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "purchaseProductionCost" | "turnoverProductionByResource" | "turnoverProductionAdditional" | "durationOfProductionUsedTimeInDays" | "durationOfProductionUsedTimeInWorkUnits" | "activityType") | ("numberOfWorkingDays" | "durationOfProductionSignedTimePerProjects" | "durationOfProductionPlannedTimePerProjects" | "durationOfProductionUsedTimePerProjects" | "durationOfProductionSignedTime" | "durationOfProductionPlannedTime" | "durationOfProductionUsedTime" | "durationOfAbsencesSignedTime" | "durationOfAbsencesPlannedTime" | "durationOfAbsencesUsedTime" | "durationOfInternalSignedTime" | "durationOfInternalPlannedTime" | "durationOfInternalUsedTime" | "occupationRateSigned" | "occupationRatePlanned" | "occupationRateUsed" | "loadingRateSigned" | "loadingRatePlanned" | "loadingRateUsed" | "disponibilitySigned" | "disponibilityPlanned" | "disponibilityUsed" | "restBudgetProductionPlannedTime" | "restBudgetProductionUsedTime" | "turnoverSignedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "turnoverProductionExcludingTax" | "costsRealExcludingTax" | "marginRealProductionExcludingTax" | "profitabilityRealProduction" | "durationOfProductionSignedAndPlannedTimePerProjects" | "durationOfProductionSignedAndUsedTimePerProjects" | "turnoverPlannedExcludingTax" | "costsPlannedExcludingTax" | "marginPlannedExcludingTax" | "profitabilityPlanned" | "costsOfInternalSignedTime" | "costsOfInternalPlannedTime" | "costsOfInternalUsedTime" | "costsOfAbsencesSignedTime" | "costsOfAbsencesPlannedTime" | "costsOfAbsencesUsedTime" | "numberOfWorkableDaysFromJ1" | "numberOfWorkableDaysUntilJ" | "durationOfProductionPlannedTimeFromJ1PerProjects" | "durationOfProductionUsedTimeUntilJPerProjects" | "durationOfProductionPlannedTimeFromJ1" | "durationOfProductionUsedTimeUntilJ" | "durationOfAbsencesPlannedTimeFromJ1" | "durationOfAbsencesUsedTimeUntilJ" | "durationOfInternalPlannedTimeFromJ1" | "durationOfInternalUsedTimeUntilJ" | "occupationRatePlannedFromJ1" | "occupationRateUsedUntilJ" | "loadingRatePlannedFromJ1" | "loadingRateUsedUntilJ" | "disponibilityPlannedFromJ1" | "disponibilityUsedUntilJ" | "durationOfProductionSignedTimeSmoothedOnPeriodPerProjects" | "durationOfProductionSignedTimeSmoothedOnPeriod" | "durationOfAbsencesSignedTimeSmoothedOnPeriod" | "durationOfInternalSignedTimeSmoothedOnPeriod" | "occupationRateSignedSmoothedOnPeriod" | "loadingRateSignedSmoothedOnPeriod" | "disponibilitySignedSmoothedOnPeriod" | "restBudgetProductionSignedTimeSmoothedOnPeriod" | "restBudgetProductionPlannedTimeSmoothedOnPeriod" | "durationOfExceptionalUsedTimePerProjects" | "durationOfExceptionalUsedCalendarPerProjects" | "durationOfExceptionalUsedTime" | "durationOfExceptionalUsedCalendar" | "averageDailyProductionUsedPriceExcludingTax" | "averageDailyProductionSignedPriceExcludingTax" | "restBudgetProductionSigned" | "productionCostByProject" | "costsProductionExcludingTax" | "averageDailyProductionCost" | "turnoverProductionByProject" | "totalExpenses" | "totalExpensesReinvoiced" | "activityTypePerProjects");
                    category: "commercialSynthesis" | "humanResourcesSynthesis" | "recruitmentSynthesis" | "activityExpensesSynthesis" | "billingSynthesis" | "globalSynthesis" | "companies" | "projects" | "resources";
                    typeOf: "money" | "percentage" | "number" | "string" | "hour" | "date" | "day" | "day|day" | "day|hour|day" | "workUnit" | "dayOrWorkUnit" | "dayOrWorkUnit|dayOrWorkUnit";
                    activityType?: "day" | "workUnit" | undefined;
                    dictionaryId?: number | undefined;
                    project?: {
                        id: string;
                        reference: string;
                        activityType: "day" | "workUnit";
                    } | undefined;
                    opportunity?: {
                        id: string;
                        reference: string;
                    } | undefined;
                    resource?: {
                        id: string;
                        firstName: string;
                        lastName: string;
                    } | undefined;
                    candidate?: {
                        id: string;
                        firstName: string;
                        lastName: string;
                    } | undefined;
                } | undefined;
                target?: {
                    operator: "<" | "<=" | "=" | ">" | ">=";
                    value: number;
                } | undefined;
            } | undefined;
            relationships?: {
                [key: string]: any;
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        }[];
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postReportingResources(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteReportingResources(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putReportingResources(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search resources
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/resources.csv?keywords=COMP100*
 *
 */
export declare function getResources(body?: string, { keywords, keywordsType, returnMoreData, excludeResourceTypes, resourceTypes, activityAreas, expertiseAreas, tools, mobilityAreas, experiences, trainings, period, startDate, endDate, flags, resourceStates, excludeManager, languages, onlyVisible, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    keywordsType?: string;
    returnMoreData?: string[];
    excludeResourceTypes?: number[];
    resourceTypes?: number[];
    activityAreas?: string[];
    expertiseAreas?: string[];
    tools?: string[];
    mobilityAreas?: string;
    experiences?: number[];
    trainings?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    flags?: number[];
    resourceStates?: number[];
    excludeManager?: boolean;
    languages?: string[];
    onlyVisible?: boolean;
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
            solr?: boolean | undefined;
        };
        data: {
            id: string;
            "type": "resource";
            attributes: {
                creationDate?: string;
                civility?: number;
                thumbnail?: string;
                firstName?: string;
                lastName?: string;
                reference?: string;
                typeOf?: number;
                state?: number;
                isVisible?: boolean;
                skills?: string;
                mobilityAreas?: string[];
                title?: string;
                availability?: string;
                averageDailyPriceExcludingTax?: number;
                email1?: string;
                email2?: string;
                email3?: string;
                phone1?: string;
                phone2?: string;
                currency?: number;
                exchangeRate?: number;
                currencyAgency?: number;
                exchangeRateAgency?: number;
                numberOfResumes?: number;
                numberOfActivePositionings?: number;
            };
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                resume?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "document";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                previousAction?: {
                    data: {
                        id: string;
                        "type": "action";
                        text?: string;
                    };
                };
                nextAction?: {
                    data: {
                        id: string;
                        "type": "action";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                startDate?: string | undefined;
                typeOf?: number | undefined;
                text?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                startDate?: string | undefined;
                typeOf?: number | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a resource
 */
export declare function postResources(body?: {
    data: {
        "type": "resource";
        attributes: {
            creationDate?: string;
            civility?: number;
            firstName: string;
            lastName: string;
            typeOf?: number;
            state?: number;
            email1: string;
            email2?: string;
            email3?: string;
            phone1?: string;
            phone2?: string;
            phone3?: string;
            fax?: string;
            address?: string;
            postcode?: string;
            town?: string;
            country?: string;
            "function"?: string;
            dateOfBirth?: string;
            mobilityAreas?: string[];
            averageDailyPriceExcludingTax?: number;
            currency?: number;
            currencyAgency?: number;
            exchangeRate?: number;
            exchangeRateAgency?: number;
            availability?: string;
            forceAvailability?: boolean;
            isVisible?: boolean;
            informationComments?: string;
        };
        relationships: {
            mainManager: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            hrManager?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
            pole?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "pole";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "noContract" | "overlappingContractDates";
                detail: string;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "resource";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                civility?: number;
                thumbnail?: string;
                firstName?: string;
                lastName?: string;
                title?: string;
                typeOf?: number;
                subscription?: "active" | "inactive";
                state?: number;
                email1?: string;
                email2?: string;
                email3?: string;
                phone1?: string;
                phone2?: string;
                phone3?: string;
                fax?: string;
                address?: string;
                postcode?: string;
                town?: string;
                country?: string;
                "function"?: string;
                dateOfBirth?: string;
                mobilityAreas?: string[];
                averageDailyPriceExcludingTax?: number;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
                forceAvailability?: boolean;
                availability?: string;
                realAvailability?: string;
                isVisible?: boolean;
                informationComments?: string;
                socialNetworks?: {
                    network: "facebook" | "viadeo" | "linkedin" | "twitter";
                    url: string;
                }[];
                seniorityDate?: string;
                forceSeniorityDate?: boolean;
                validitySeniorityDate?: string;
            };
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
                resumes?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteResources(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putResources(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty resource's default information data
 */
export declare function getResourcesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "resource";
            attributes?: {
                civility?: number;
                typeOf?: number;
                state?: number;
                availability?: string;
                realAvailability?: string;
                forceAvailability?: boolean;
                country?: string;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
                seniorityDate?: string;
                validitySeniorityDate?: string;
                forceSeniorityDate?: boolean;
                originalSeniorityDate?: string;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putResourcesDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "resource";
            attributes?: {
                civility?: number;
                typeOf?: number;
                state?: number;
                availability?: string;
                realAvailability?: string;
                forceAvailability?: boolean;
                country?: string;
                currency?: number;
                currencyAgency?: number;
                exchangeRate?: number;
                exchangeRateAgency?: number;
                seniorityDate?: string;
                validitySeniorityDate?: string;
                forceSeniorityDate?: boolean;
                originalSeniorityDate?: string;
            };
            relationships?: {
                mainManager?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                lastName?: string | undefined;
                firstName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteResourcesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postResourcesDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get resource's basic data
 */
export declare function getResourcesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "noContract" | "overlappingContractDates";
                detail: string;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "resource";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                civility?: number;
                thumbnail?: string;
                firstName?: string;
                lastName?: string;
                typeOf?: number;
                level?: "manager" | "resource" | "administrator";
                title?: string;
                dateOfBirth?: string;
                numberOfResumes?: number;
            };
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the resource
 */
export declare function deleteResourcesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putResourcesById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "noContract" | "overlappingContractDates";
                detail: string;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "resource";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                civility?: number;
                thumbnail?: string;
                firstName?: string;
                lastName?: string;
                typeOf?: number;
                level?: "manager" | "resource" | "administrator";
                title?: string;
                dateOfBirth?: string;
                numberOfResumes?: number;
            };
            relationships?: {
                mainManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                hrManager?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                pole?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "pole";
                    };
                };
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postResourcesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search roles
 */
export declare function getRoles(body?: string, { keywords, page, maxResults, sort, order }?: {
    keywords?: string;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "role";
            attributes?: {
                name?: string;
                numberOfManagers?: number;
                numberOfActiveManagers?: number;
            };
        }[];
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a role
 */
export declare function postRoles(body?: {
    data: {
        "type": "role";
        attributes: {
            name: string;
            logInOnlyFromThirdParty?: boolean;
            warningForNewDevice?: boolean;
            manageAllowedDevices?: boolean;
            dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
            modules?: {
                resources?: boolean;
                subscription?: boolean;
                projects?: boolean;
                opportunities?: boolean;
                candidates?: boolean;
                crm?: boolean;
                activityExpenses?: boolean;
                billing?: boolean;
                products?: boolean;
                purchases?: boolean;
                reporting?: boolean;
                customers?: boolean;
            };
            rights?: {
                main: {
                    shareSavedSearches?: "disabled" | "share" | "edit";
                    showGroupe: boolean;
                    showBuPoles: boolean;
                    showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                    showAllAgencies: "none" | "assignment";
                    showAllPoles: "none" | "assignment";
                    administrator: boolean;
                };
                resources?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                    administrative: "none" | "read" | "readAndWrite";
                };
                opportunities?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    maskData: boolean;
                    maskOnlyContacts: boolean;
                };
                projects?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: any;
                    administrative: any;
                };
                candidates?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                };
                crm?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    editCreationDate: boolean;
                    showAllCompanies: boolean;
                    createCompanies: boolean;
                    createContacts: boolean;
                };
                activityExpenses?: {
                    writeAll: "extended" | "absolute";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                billing?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    editReference?: boolean;
                    editDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    readDocuments: boolean;
                    unlockInvoices: boolean;
                };
                products?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                purchases?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                reporting?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    extraction: boolean;
                    reporting: boolean;
                    distributionCustomers: boolean;
                    projects: boolean;
                    resources: boolean;
                    productionPlans: boolean;
                };
                flags?: {
                    showAll: "personal" | "all";
                };
                actions?: {
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                customers?: {
                    creation: boolean;
                    extraction: boolean;
                    edition: boolean;
                    deletion: boolean;
                    connection: boolean;
                };
            };
            isSecondaryAgenciesAllowed?: boolean;
            isSecondaryPolesAllowed?: boolean;
            shareSavedSearches?: "disabled" | "share" | "edit";
        };
        relationships?: {
            apps?: {
                data: {
                    id: string;
                    "type": "app";
                }[];
            };
            otherAgencies?: {
                data: {
                    id: string;
                    "type": "agency";
                }[];
            };
            otherPoles?: {
                data: {
                    id: string;
                    "type": "pole";
                }[];
            };
            advancedAppCalendar?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppMail?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppViewer?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppEmailing?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "role";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                logInOnlyFromThirdParty?: boolean;
                warningForNewDevice?: boolean;
                manageAllowedDevices?: boolean;
                dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
                modules?: {
                    resources?: boolean;
                    subscription?: boolean;
                    projects?: boolean;
                    opportunities?: boolean;
                    candidates?: boolean;
                    crm?: boolean;
                    activityExpenses?: boolean;
                    billing?: boolean;
                    products?: boolean;
                    purchases?: boolean;
                    reporting?: boolean;
                    customers?: boolean;
                };
                rights?: {
                    main: {
                        shareSavedSearches?: "disabled" | "share" | "edit";
                        showGroupe: boolean;
                        showBuPoles: boolean;
                        showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                        showAllAgencies: "none" | "assignment";
                        showAllPoles: "none" | "assignment";
                        administrator: boolean;
                    };
                    resources?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                        administrative: "none" | "read" | "readAndWrite";
                    };
                    opportunities?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        maskData: boolean;
                        maskOnlyContacts: boolean;
                    };
                    projects?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: any;
                        administrative: any;
                    };
                    candidates?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                    };
                    crm?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        editCreationDate: boolean;
                        showAllCompanies: boolean;
                        createCompanies: boolean;
                        createContacts: boolean;
                    };
                    activityExpenses?: {
                        writeAll: "extended" | "absolute";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    billing?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        editReference?: boolean;
                        editDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        readDocuments: boolean;
                        unlockInvoices: boolean;
                    };
                    products?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    purchases?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    reporting?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        extraction: boolean;
                        reporting: boolean;
                        distributionCustomers: boolean;
                        projects: boolean;
                        resources: boolean;
                        productionPlans: boolean;
                    };
                    flags?: {
                        showAll: "personal" | "all";
                    };
                    actions?: {
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    customers?: {
                        creation: boolean;
                        extraction: boolean;
                        edition: boolean;
                        deletion: boolean;
                        connection: boolean;
                    };
                };
                isSecondaryAgenciesAllowed?: boolean;
                isSecondaryPolesAllowed?: boolean;
                shareSavedSearches?: "disabled" | "share" | "edit";
            };
            relationships?: {
                apps?: {
                    data: {
                        id: string;
                        "type": "app";
                    }[];
                };
                otherAgencies?: {
                    data: {
                        id: string;
                        "type": "agency";
                    }[];
                };
                otherPoles?: {
                    data: {
                        id: string;
                        "type": "pole";
                    }[];
                };
                advancedAppCalendar?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppMail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppViewer?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppEmailing?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "app";
            attributes?: {
                name?: string | undefined;
                description?: string | undefined;
                category?: "other" | "calendar" | "mail" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer" | undefined;
                code?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteRoles(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putRoles(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get role's basic data
 */
export declare function getRolesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "role";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                logInOnlyFromThirdParty?: boolean;
                warningForNewDevice?: boolean;
                manageAllowedDevices?: boolean;
                dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
                modules?: {
                    resources?: boolean;
                    subscription?: boolean;
                    projects?: boolean;
                    opportunities?: boolean;
                    candidates?: boolean;
                    crm?: boolean;
                    activityExpenses?: boolean;
                    billing?: boolean;
                    products?: boolean;
                    purchases?: boolean;
                    reporting?: boolean;
                    customers?: boolean;
                };
                rights?: {
                    main: {
                        shareSavedSearches?: "disabled" | "share" | "edit";
                        showGroupe: boolean;
                        showBuPoles: boolean;
                        showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                        showAllAgencies: "none" | "assignment";
                        showAllPoles: "none" | "assignment";
                        administrator: boolean;
                    };
                    resources?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                        administrative: "none" | "read" | "readAndWrite";
                    };
                    opportunities?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        maskData: boolean;
                        maskOnlyContacts: boolean;
                    };
                    projects?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: any;
                        administrative: any;
                    };
                    candidates?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                    };
                    crm?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        editCreationDate: boolean;
                        showAllCompanies: boolean;
                        createCompanies: boolean;
                        createContacts: boolean;
                    };
                    activityExpenses?: {
                        writeAll: "extended" | "absolute";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    billing?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        editReference?: boolean;
                        editDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        readDocuments: boolean;
                        unlockInvoices: boolean;
                    };
                    products?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    purchases?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    reporting?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        extraction: boolean;
                        reporting: boolean;
                        distributionCustomers: boolean;
                        projects: boolean;
                        resources: boolean;
                        productionPlans: boolean;
                    };
                    flags?: {
                        showAll: "personal" | "all";
                    };
                    actions?: {
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    customers?: {
                        creation: boolean;
                        extraction: boolean;
                        edition: boolean;
                        deletion: boolean;
                        connection: boolean;
                    };
                };
                isSecondaryAgenciesAllowed?: boolean;
                isSecondaryPolesAllowed?: boolean;
                shareSavedSearches?: "disabled" | "share" | "edit";
            };
            relationships?: {
                apps?: {
                    data: {
                        id: string;
                        "type": "app";
                    }[];
                };
                otherAgencies?: {
                    data: {
                        id: string;
                        "type": "agency";
                    }[];
                };
                otherPoles?: {
                    data: {
                        id: string;
                        "type": "pole";
                    }[];
                };
                advancedAppCalendar?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppMail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppViewer?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppEmailing?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "app";
            attributes?: {
                name?: string | undefined;
                description?: string | undefined;
                category?: "other" | "calendar" | "mail" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer" | undefined;
                code?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the role
 */
export declare function deleteRolesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a role
 */
export declare function putRolesById(body?: {
    data: {
        id: string;
        "type": "role";
        attributes?: {
            name?: string;
            logInOnlyFromThirdParty?: boolean;
            warningForNewDevice?: boolean;
            manageAllowedDevices?: boolean;
            dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
            modules?: {
                resources?: boolean;
                subscription?: boolean;
                projects?: boolean;
                opportunities?: boolean;
                candidates?: boolean;
                crm?: boolean;
                activityExpenses?: boolean;
                billing?: boolean;
                products?: boolean;
                purchases?: boolean;
                reporting?: boolean;
                customers?: boolean;
            };
            rights?: {
                main: {
                    shareSavedSearches?: "disabled" | "share" | "edit";
                    showGroupe: boolean;
                    showBuPoles: boolean;
                    showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                    showAllAgencies: "none" | "assignment";
                    showAllPoles: "none" | "assignment";
                    administrator: boolean;
                };
                resources?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                    administrative: "none" | "read" | "readAndWrite";
                };
                opportunities?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    maskData: boolean;
                    maskOnlyContacts: boolean;
                };
                projects?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: any;
                    administrative: any;
                };
                candidates?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    editCreationDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    actions: boolean;
                };
                crm?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    editCreationDate: boolean;
                    showAllCompanies: boolean;
                    createCompanies: boolean;
                    createContacts: boolean;
                };
                activityExpenses?: {
                    writeAll: "extended" | "absolute";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                billing?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    editReference?: boolean;
                    editDate: boolean;
                    assignment: boolean;
                    deletion: boolean;
                    readDocuments: boolean;
                    unlockInvoices: boolean;
                };
                products?: {
                    creation: boolean;
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                purchases?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    exportation: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                reporting?: {
                    showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                    extraction: boolean;
                    reporting: boolean;
                    distributionCustomers: boolean;
                    projects: boolean;
                    resources: boolean;
                    productionPlans: boolean;
                };
                flags?: {
                    showAll: "personal" | "all";
                };
                actions?: {
                    writeAll: "simple" | "extended";
                    extraction: boolean;
                    assignment: boolean;
                    deletion: boolean;
                };
                customers?: {
                    creation: boolean;
                    extraction: boolean;
                    edition: boolean;
                    deletion: boolean;
                    connection: boolean;
                };
            };
            isSecondaryAgenciesAllowed?: boolean;
            isSecondaryPolesAllowed?: boolean;
            shareSavedSearches?: "disabled" | "share" | "edit";
        };
        relationships?: {
            apps?: {
                data: {
                    id: string;
                    "type": "app";
                }[];
            };
            otherAgencies?: {
                data: {
                    id: string;
                    "type": "agency";
                }[];
            };
            otherPoles?: {
                data: {
                    id: string;
                    "type": "pole";
                }[];
            };
            advancedAppCalendar?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppMail?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppViewer?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
            advancedAppEmailing?: {
                data: null;
            } | {
                data: {
                    id: string;
                    "type": "app";
                };
            };
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "role";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                logInOnlyFromThirdParty?: boolean;
                warningForNewDevice?: boolean;
                manageAllowedDevices?: boolean;
                dashboardGraphsAvailable?: ("myPeriodicalsTargets" | "recruitmentsFunnel" | "salesFunnel" | "opportunitiesDistribution" | "candidatesDistribution" | "chargedTurnoverSignedTurnover" | "chargedTurnoverProductionTurnoverSignedTurnover" | "summary" | "chargedTurnoverChargedMargin" | "productionTurnoverProductionMargin" | "signedTurnoverSignedMargin")[];
                modules?: {
                    resources?: boolean;
                    subscription?: boolean;
                    projects?: boolean;
                    opportunities?: boolean;
                    candidates?: boolean;
                    crm?: boolean;
                    activityExpenses?: boolean;
                    billing?: boolean;
                    products?: boolean;
                    purchases?: boolean;
                    reporting?: boolean;
                    customers?: boolean;
                };
                rights?: {
                    main: {
                        shareSavedSearches?: "disabled" | "share" | "edit";
                        showGroupe: boolean;
                        showBuPoles: boolean;
                        showAllManagers?: "none" | "assignment" | "search" | "assignmentAndSearch";
                        showAllAgencies: "none" | "assignment";
                        showAllPoles: "none" | "assignment";
                        administrator: boolean;
                    };
                    resources?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                        administrative: "none" | "read" | "readAndWrite";
                    };
                    opportunities?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        maskData: boolean;
                        maskOnlyContacts: boolean;
                    };
                    projects?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: any;
                        administrative: any;
                    };
                    candidates?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        editCreationDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        actions: boolean;
                    };
                    crm?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        editCreationDate: boolean;
                        showAllCompanies: boolean;
                        createCompanies: boolean;
                        createContacts: boolean;
                    };
                    activityExpenses?: {
                        writeAll: "extended" | "absolute";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    billing?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        editReference?: boolean;
                        editDate: boolean;
                        assignment: boolean;
                        deletion: boolean;
                        readDocuments: boolean;
                        unlockInvoices: boolean;
                    };
                    products?: {
                        creation: boolean;
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    purchases?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        exportation: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    reporting?: {
                        showAll: "personal" | "agencies" | "businessUnitsAndPoles" | "agenciesAndBusinessUnitsAndPoles" | "all";
                        extraction: boolean;
                        reporting: boolean;
                        distributionCustomers: boolean;
                        projects: boolean;
                        resources: boolean;
                        productionPlans: boolean;
                    };
                    flags?: {
                        showAll: "personal" | "all";
                    };
                    actions?: {
                        writeAll: "simple" | "extended";
                        extraction: boolean;
                        assignment: boolean;
                        deletion: boolean;
                    };
                    customers?: {
                        creation: boolean;
                        extraction: boolean;
                        edition: boolean;
                        deletion: boolean;
                        connection: boolean;
                    };
                };
                isSecondaryAgenciesAllowed?: boolean;
                isSecondaryPolesAllowed?: boolean;
                shareSavedSearches?: "disabled" | "share" | "edit";
            };
            relationships?: {
                apps?: {
                    data: {
                        id: string;
                        "type": "app";
                    }[];
                };
                otherAgencies?: {
                    data: {
                        id: string;
                        "type": "agency";
                    }[];
                };
                otherPoles?: {
                    data: {
                        id: string;
                        "type": "pole";
                    }[];
                };
                advancedAppCalendar?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppMail?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppViewer?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                advancedAppEmailing?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "app";
            attributes?: {
                name?: string | undefined;
                description?: string | undefined;
                category?: "other" | "calendar" | "mail" | "mailAndCalendar" | "certification" | "emailing" | "templates" | "ged" | "viewer" | undefined;
                code?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "pole";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postRolesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search user's saved search
 */
export declare function getSavedsearches(body?: string, { keywords, owner, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    owner?: number[];
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            type: "savedsearch";
            attributes?: {
                module?: "resources" | "candidates" | "crm" | "opportunities" | "products" | "projects" | "purchases" | "positionings" | "activityExpenses" | "billing" | "reporting" | "actions" | "dashboard" | "resourceTimesReports" | "resourceAbsencesReports" | "resourceExpensesReports" | "resourceProjects" | "customers" | undefined;
                name?: string | undefined;
                params?: {
                    [key: string]: any;
                } | undefined;
                sharedWith?: {
                    [key: string]: any;
                } | undefined;
                nbShares?: number | undefined;
                date?: string | undefined;
                dateUpdate?: string | undefined;
            } | undefined;
            relationships?: {
                owner: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            } | undefined;
        }[];
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a saved search
 */
export declare function postSavedsearches(body?: {
    data: {
        "type": "savedsearch";
        attributes?: {
            "module": "resources" | "candidates" | "crm" | "opportunities" | "products" | "projects" | "purchases" | "positionings" | "activityExpenses" | "billing" | "reporting" | "actions" | "dashboard" | "resourceTimesReports" | "resourceAbsencesReports" | "resourceExpensesReports" | "resourceProjects" | "customers";
            name: string;
            params?: {
                [key: string]: any;
            };
            sharedWith?: {
                [key: string]: any;
            };
        };
        relationships?: {
            owner: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "savedsearch";
            attributes?: {
                module?: "resources" | "candidates" | "crm" | "opportunities" | "products" | "projects" | "purchases" | "positionings" | "activityExpenses" | "billing" | "reporting" | "actions" | "dashboard" | "resourceTimesReports" | "resourceAbsencesReports" | "resourceExpensesReports" | "resourceProjects" | "customers" | undefined;
                name?: string | undefined;
                params?: {
                    [key: string]: any;
                } | undefined;
                sharedWith?: {
                    [key: string]: any;
                } | undefined;
                nbShares?: number | undefined;
            } | undefined;
            relationships?: {
                owner?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteSavedsearches(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putSavedsearches(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get saved search's basic data
 */
export declare function getSavedsearchesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "savedsearch";
            attributes?: {
                module?: "resources" | "candidates" | "crm" | "opportunities" | "products" | "projects" | "purchases" | "positionings" | "activityExpenses" | "billing" | "reporting" | "actions" | "dashboard" | "resourceTimesReports" | "resourceAbsencesReports" | "resourceExpensesReports" | "resourceProjects" | "customers" | undefined;
                name?: string | undefined;
                params?: {
                    [key: string]: any;
                } | undefined;
                sharedWith?: {
                    [key: string]: any;
                } | undefined;
                nbShares?: number | undefined;
            } | undefined;
            relationships?: {
                owner?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the saved search
 */
export declare function deleteSavedsearchesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a saved search
 */
export declare function putSavedsearchesById(body?: {
    data: {
        id: string;
        "type": "savedsearch";
        attributes?: {
            name?: string;
            params?: {
                [key: string]: any;
            };
            sharedWith?: {
                [key: string]: any;
            };
        };
        relationships?: {
            owner: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "savedsearch";
            attributes?: {
                module?: "resources" | "candidates" | "crm" | "opportunities" | "products" | "projects" | "purchases" | "positionings" | "activityExpenses" | "billing" | "reporting" | "actions" | "dashboard" | "resourceTimesReports" | "resourceAbsencesReports" | "resourceExpensesReports" | "resourceProjects" | "customers" | undefined;
                name?: string | undefined;
                params?: {
                    [key: string]: any;
                } | undefined;
                sharedWith?: {
                    [key: string]: any;
                } | undefined;
                nbShares?: number | undefined;
            } | undefined;
            relationships?: {
                owner?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postSavedsearchesById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a sandbox
 */
export declare function postSandbox(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteSandbox(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putSandbox(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getSandbox(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Share a profile
 */
export declare function postShare(body?: {
    data: {
        "type": "share";
        attributes: {
            "object": string;
            body: string;
            recipients: ({
                group: {
                    id: string;
                };
            } | {
                resource: {
                    id: string;
                };
            } | {
                typeOf: number;
            })[];
            settings?: "resource" | "account" | "notUsed";
        };
        relationships: {
            dependsOn: {
                data: {
                    id: string;
                    "type": "resource";
                };
            } | {
                data: {
                    id: string;
                    "type": "candidate";
                };
            } | {
                data: {
                    id: string;
                    "type": "product";
                };
            } | {
                data: {
                    id: string;
                    "type": "opportunity";
                };
            } | {
                data: {
                    id: string;
                    "type": "project";
                };
            } | {
                data: {
                    id: string;
                    "type": "purchase";
                };
            } | {
                data: {
                    id: string;
                    "type": "order";
                };
            } | {
                data: {
                    id: string;
                    "type": "invoice";
                };
            } | {
                data: {
                    id: string;
                    "type": "contact";
                };
            } | {
                data: {
                    id: string;
                    "type": "company";
                };
            } | {
                data: {
                    id: string;
                    "type": "timesreport";
                };
            } | {
                data: {
                    id: string;
                    "type": "expensesreport";
                };
            } | {
                data: {
                    id: string;
                    "type": "absencesreport";
                };
            } | {
                data: {
                    id: string;
                    "type": "payment";
                };
            } | {
                data: {
                    id: string;
                    "type": "action";
                };
            } | {
                data: {
                    id: string;
                    "type": "delivery";
                };
            } | {
                data: {
                    id: string;
                    "type": "inactivity";
                };
            } | {
                data: {
                    id: string;
                    "type": "groupment";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id?: string;
            "type"?: "share";
            attributes?: {
                emails: string[];
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getShare(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteShare(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putShare(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty share's profile default basic data
 */
export declare function getShareDefault(body?: string, { resource, candidate, opportunity, project, product, purchase, order, invoice, contact, company, timesReport, expensesReport, absencesReport, payment, action, delivery, inactivity, groupment, positioning, contract, advantage, settings }?: {
    resource?: number;
    candidate?: number;
    opportunity?: number;
    project?: number;
    product?: number;
    purchase?: number;
    order?: number;
    invoice?: number;
    contact?: number;
    company?: number;
    timesReport?: number;
    expensesReport?: number;
    absencesReport?: number;
    payment?: number;
    action?: number;
    delivery?: number;
    inactivity?: number;
    groupment?: number;
    positioning?: number;
    contract?: number;
    advantage?: number;
    settings?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "share";
            attributes?: {
                "object"?: string;
                body?: string;
                settings?: "resource" | "account" | "notUsed";
            };
            relationships?: {
                managers?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
                resources?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "timesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "expensesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "absencesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "payment";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "action";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "inactivity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "groupment";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "advantage";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "positioning";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "quotation";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                name?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "purchase";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                number?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "invoice";
            attributes?: {
                reference?: string | undefined;
                isCreditNote?: boolean | undefined;
            } | undefined;
            relationships?: {
                order?: {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "timesreport";
            attributes?: {
                term?: string | undefined;
            } | undefined;
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "expensesreport";
            attributes?: {
                term?: string | undefined;
            } | undefined;
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "absencesreport";
            attributes?: {
                creationDate?: string | undefined;
            } | undefined;
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "payment";
            attributes?: {
                number?: string | undefined;
            } | undefined;
            relationships?: {
                purchase?: {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "inactivity";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "groupment";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "advantage";
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "positioning";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                } | undefined;
                opportunity?: {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                creationDate?: string | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "quotation";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                opportunity?: {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putShareDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: "0";
            "type": "share";
            attributes?: {
                "object"?: string;
                body?: string;
                settings?: "resource" | "account" | "notUsed";
            };
            relationships?: {
                managers?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
                resources?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "timesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "expensesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "absencesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "payment";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "action";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "inactivity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "groupment";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contract";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "advantage";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "positioning";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "quotation";
                    };
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "candidate";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contact";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "product";
            attributes?: {
                name?: string | undefined;
                reference?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "opportunity";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "purchase";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                number?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "invoice";
            attributes?: {
                reference?: string | undefined;
                isCreditNote?: boolean | undefined;
            } | undefined;
            relationships?: {
                order?: {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "timesreport";
            attributes?: {
                term?: string | undefined;
            } | undefined;
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "expensesreport";
            attributes?: {
                term?: string | undefined;
            } | undefined;
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "absencesreport";
            attributes?: {
                creationDate?: string | undefined;
            } | undefined;
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "payment";
            attributes?: {
                number?: string | undefined;
            } | undefined;
            relationships?: {
                purchase?: {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "inactivity";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "groupment";
            attributes?: {
                title?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "contract";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "advantage";
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "positioning";
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                } | undefined;
                opportunity?: {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "action";
            attributes?: {
                creationDate?: string | undefined;
            } | undefined;
            relationships?: {
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "candidate";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "product";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "purchase";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "order";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "invoice";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "app";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "quotation";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                opportunity?: {
                    data: {
                        id: string;
                        "type": "opportunity";
                    };
                } | undefined;
                contact?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "contact";
                    };
                } | undefined;
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteShareDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postShareDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get subscription's basic data
 */
export declare function getSubscription(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "subscription";
            attributes?: {
                startDate?: string;
                endDate?: string;
                numberOfAllowedManagers?: number;
                numberOfAllowedResources?: number;
                numberOfAllowedAccounts?: number;
                numberOfActivatedManagers?: number;
                numberOfActivatedResources?: number;
                numberOfActivatedAccounts?: number;
                priceExcludingTaxPerAllowedManager?: number;
                priceExcludingTaxPerAllowedResource?: number;
                priceExcludingTaxPerAllowedAccount?: number;
                schedulesAllowedAccounts?: {
                    level: number;
                    amountExcludingTax: number;
                }[];
                automaticSubscription?: boolean;
                pricingType?: "custom" | "manager" | "account" | "scheduleAccount";
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a subscription
 */
export declare function putSubscription(body?: {
    data: {
        id?: string;
        "type": "customer";
        attributes: {
            numberOfAllowedManagers?: number;
            numberOfAllowedResources?: number;
            numberOfAllowedAccounts?: number;
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "subscription";
            attributes?: {
                startDate?: string;
                endDate?: string;
                numberOfAllowedManagers?: number;
                numberOfAllowedResources?: number;
                numberOfAllowedAccounts?: number;
                numberOfActivatedManagers?: number;
                numberOfActivatedResources?: number;
                numberOfActivatedAccounts?: number;
                priceExcludingTaxPerAllowedManager?: number;
                priceExcludingTaxPerAllowedResource?: number;
                priceExcludingTaxPerAllowedAccount?: number;
                schedulesAllowedAccounts?: {
                    level: number;
                    amountExcludingTax: number;
                }[];
                automaticSubscription?: boolean;
                pricingType?: "custom" | "manager" | "account" | "scheduleAccount";
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteSubscription(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postSubscription(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search invoices
 *
 */
export declare function getSubscriptionInvoices(body?: string, { page, maxResults }?: {
    page?: number;
    maxResults?: number;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "invoice";
            attributes?: {
                date?: string;
                reference?: string;
                turnoverInvoicedExcludingTax?: number;
                turnoverInvoicedIncludingTax?: number;
            };
        }[];
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postSubscriptionInvoices(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteSubscriptionInvoices(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putSubscriptionInvoices(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a target
 */
export declare function postTargets(body?: {
    data: {
        "type": "target";
        attributes?: {
            category?: "commercial" | "humanResources" | "recruitment" | "activityExpenses" | "billing" | "global";
            operator?: "<" | "<=" | "=" | ">" | ">=";
            periodType?: "weekly" | "monthly" | "quaterly" | "semiAnnual" | "annual";
            periodNumber?: "allDates" | number;
            periodYear?: "allDates" | string;
            value?: number;
            scorecard?: {
                reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate");
            };
        };
        relationships?: {
            resource: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "target";
            attributes?: {
                category?: "commercial" | "humanResources" | "recruitment" | "activityExpenses" | "billing" | "global";
                operator?: "<" | "<=" | "=" | ">" | ">=";
                periodType?: "weekly" | "monthly" | "quaterly" | "semiAnnual" | "annual";
                periodNumber?: "allDates" | number;
                periodYear?: "allDates" | string;
                value?: number;
                scorecard?: {
                    reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate");
                    typeOf: "money" | "percentage" | "number" | "string";
                    dictionaryId?: number;
                };
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getTargets(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteTargets(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putTargets(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get target's basic data
 */
export declare function getTargetsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "target";
            attributes?: {
                category?: "commercial" | "humanResources" | "recruitment" | "activityExpenses" | "billing" | "global";
                operator?: "<" | "<=" | "=" | ">" | ">=";
                periodType?: "weekly" | "monthly" | "quaterly" | "semiAnnual" | "annual";
                periodNumber?: "allDates" | number;
                periodYear?: "allDates" | string;
                value?: number;
                scorecard?: {
                    reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate");
                    typeOf: "money" | "percentage" | "number" | "string";
                    dictionaryId?: number;
                };
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the target
 */
export declare function deleteTargetsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a target
 */
export declare function putTargetsById(body?: {
    data: {
        id: string;
        "type": "target";
        attributes?: {
            category?: "commercial" | "humanResources" | "recruitment" | "activityExpenses" | "billing" | "global";
            operator?: "<" | "<=" | "=" | ">" | ">=";
            periodType?: "weekly" | "monthly" | "quaterly" | "semiAnnual" | "annual";
            periodNumber?: "allDates" | number;
            periodYear?: "allDates" | string;
            value?: number;
            scorecard?: {
                reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate");
            };
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "target";
            attributes?: {
                category?: "commercial" | "humanResources" | "recruitment" | "activityExpenses" | "billing" | "global";
                operator?: "<" | "<=" | "=" | ">" | ">=";
                periodType?: "weekly" | "monthly" | "quaterly" | "semiAnnual" | "annual";
                periodNumber?: "allDates" | number;
                periodYear?: "allDates" | string;
                value?: number;
                scorecard?: {
                    reference: ("turnoverSignedExcludingTax" | "turnoverWeightedExcludingTax" | "costsSignedExcludingTax" | "marginSignedExcludingTax" | "profitabilitySigned" | "numberOfProjectsCreated" | "numberOfProjectsInProgress" | "numberOfDeliveriesInProgressPerTypes" | "numberOfDeliveriesInProgressNone" | "numberOfDeliveriesInProgress" | "numberOfDeliveriesStartedPerTypes" | "numberOfDeliveriesStartedNone" | "numberOfDeliveriesStarted" | "numberOfDeliveriesStoppedPerTypes" | "numberOfDeliveriesStoppedNone" | "numberOfDeliveriesStopped" | "numberOfOpportunitiesCreated" | "numberOfPositioningsCreated" | "numberOfActionsOnContactsPerTypes" | "turnoverForecastExcludingTax" | "costsForecastExcludingTax" | "marginForecastExcludingTax" | "profitabilityForecast" | "turnoverSimulatedExcludingTax" | "costsSimulatedExcludingTax" | "marginSimulatedExcludingTax" | "profitabilitySimulated" | "numberOfActionsOnOpportunitiesPerTypes" | "numberOfActionsOnProjectsPerTypes" | "numberOfTechnicalAssistanceProjectsInProgress" | "numberOfPackageProjectsInProgress" | "numberOfRecruitmentProjectsInProgress" | "numberOfProductProjectsInProgress" | "rateOfTechnicalAssistanceProjectsInProgress" | "rateOfPackageProjectsInProgress" | "rateOfRecruimentProjectsInProgress" | "rateOfProductProjectsInProgress" | "numberOfOpportunitiesPerStates" | "turnoverWeightedExcludingTaxPerStates" | "numberOfContactsCreated" | "numberOfCompaniesCreated" | "numberOfActionsCreatedOnContactsPerTypes" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary") | ("numberOfInternalStaff" | "numberOfHired" | "numberOfDepartures" | "numberOfResourcesOnDeliveries" | "numberOfExternalResourcesOnDeliveries" | "numberOfInternalResourcesOnDeliveries" | "numberOfResourcesOnInternalActivity" | "numberOfResourcesOnAbsencesActivity" | "numberOfActionsOnResourcesPerTypes" | "costsOfInternalSignedTimeExcludingTax" | "costsOfAbsencesSignedTimeExcludingTax" | "durationOfInternalSignedTime" | "durationOfAbsencesSignedTime" | "internalActivityRate" | "occupationRate" | "numberOfPositioningsCreated" | "costsOfAllActivityExcludingTax" | "numberOfExternalStaff" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals") | ("numberOfCandidatesCreated" | "numberOfActionsOnCandidatesPerTypes" | "numberOfPositioningsCreated" | "numberOfCandidatesCreatedPerStates" | "numberOfCandidatesCreatedPerSources") | ("durationOfAllSignedTime" | "durationOfAllUsedTime" | "costsOfSignedExpensesExcludingTax" | "costsOfUsedExpensesExcludingTax" | "numberOfValidatedTimesReports" | "numberOfRejectedTimesReports" | "numberOfWaitingForValidationTimesReports" | "numberOfValidatedExpensesReports" | "numberOfRejectedExpensesReports" | "numberOfWaitingForValidationExpensesReports" | "numberOfValidatedAbsencesReports" | "numberOfRejectedAbsencesReports" | "numberOfWaitingForValidationAbsencesReports" | "durationOfAllPlannedTime" | "durationOfProductionAndExceptionalUsedTimeAndCalendar" | "durationOfAllUsedTimePerActivity" | "costsOfProductionAndExceptionalUsedTimeAndCalendarExcludingTax" | "costsOfAllUsedTimeExcludingTaxPerActivity") | ("turnoverInvoicedExcludingTaxFollowingInvoicesDatePerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverOrderedExcludingTax" | "deltaInvoicedExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingCommandsPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriodPerStates" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "turnoverInvoicedProFormaExcludingTaxFollowingInvoicesPeriod") | ("turnoverSignedExcludingTax" | "costsRealExcludingTax" | "marginRealSignedExcludingTax" | "profitabilityRealSigned" | "turnoverInvoicedPaidExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedPaidFollowingInvoicesDate" | "globalStructureCost" | "marginRealExploitationInvoicedPaidExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedPaidFollowingInvoicesDate" | "turnoverInvoicedExcludingTaxFollowingInvoicesDate" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealContributiveInvoicedFollowingInvoicesDate" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityRealExploitationInvoicedFollowingInvoicesDate" | "turnoverProductionExcludingTax" | "marginRealContributiveProductionExcludingTax" | "profitabilityRealContributiveProduction" | "marginRealExploitationProductionExcludingTax" | "profitabilityRealExploitationProduction" | "costsOfPurchasesExcludingTaxPerStates" | "costsOfPurchasesExcludingTax" | "turnoverInvoicedExcludingTaxFollowingInvoicesPeriod" | "marginRealContributiveInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealContributiveInvoicedFollowingInvoicesPeriod" | "marginRealExploitationInvoicedExcludingTaxFollowingInvoicesPeriod" | "profitabilityRealExploitationInvoicedFollowingInvoicesPeriod" | "costsOfPurchasesExcludingTaxPerStatesFollowingChargedPeriod" | "costsOfPurchasesExcludingTaxFollowingChargedPeriod" | "numberOfBillableEmployees" | "numberOfBillableExternals" | "numberOfBillableStaff" | "numberOfStructuralStaff" | "numberOfStaff" | "averageSignedRate" | "averageSignedRateForEmployees" | "averageSignedRateForExternals" | "averageTakenRate" | "averageTakenRateForEmployees" | "averageTakenRateForExternals" | "averageDailyCostSigned" | "averageDailyCostSignedForEmployees" | "averageDailyCostSignedForExternals" | "averageDailyCostTaken" | "averageDailyCostTakenForEmployees" | "averageDailyCostTakenForExternals" | "dailyProfitabilitySigned" | "dailyProfitabilitySignedForEmployees" | "dailyProfitabilitySignedForExternals" | "dailyProfitabilityTaken" | "dailyProfitabilityTakenForEmployees" | "dailyProfitabilityTakenForExternals" | "staffSignedActivityRateLeavesExcludedForAllBillable" | "staffSignedActivityRateLeavesExcludedForBillableEmployees" | "staffSignedActivityRateLeavesExcludedForBillableExternals" | "staffTakenActivityRateLeavesExcludedForAllBillable" | "staffTakenActivityRateLeavesExcludedForBillableEmployees" | "staffTakenActivityRateLeavesExcludedForBillableExternals" | "staffPlannedActivityRateLeavesExcludedForAllBillable" | "staffPlannedActivityRateLeavesExcludedForBillableEmployees" | "staffPlannedActivityRateLeavesExcludedForBillableExternals" | "staffSignedActivityRateLeavesIncludedForBillable" | "staffSignedActivityRateLeavesIncludedForBillableEmployees" | "staffSignedActivityRateLeavesIncludedForBillableExternals" | "staffTakenActivityRateLeavesIncludedForBillable" | "staffTakenActivityRateLeavesIncludedForBillableEmployees" | "staffTakenActivityRateLeavesIncludedForBillableExternals" | "unbilledTakenStaffActivityRateForBillable" | "unbilledTakenStaffActivityRateForBillableEmployees" | "unbilledTakenStaffActivityRateForBillableExternals" | "costOfUnbilledActivity" | "realCostOfLeaves" | "structuralPurchases" | "costOfUnbilledForInternals" | "costOfUnbilledForExternals" | "averageSalary" | "averageBillableSalary" | "averageStructuralSalary" | "averageNumberOfBillableStaff" | "averageNumberOfBillableEmployees" | "averageNumberOfBillableExternals" | "averageNumberOfStructuralStaff" | "averageNumberOfStructuralEmployees" | "averageNumberOfStructuralExternals" | "averageNumberOfStaff" | "costsProductionExcludingTax" | "marginGrossContributiveProductionExcludingTax" | "profitabilityGrossContributiveProduction" | "marginGrossContributiveInvoicedExcludingTaxFollowingInvoicesDate" | "profitabilityGrossContributiveInvoicedFollowingInvoicesDate");
                    typeOf: "money" | "percentage" | "number" | "string";
                    dictionaryId?: number;
                };
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postTargetsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update data related to a Task.
 */
export declare function putTasksById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "task";
            attributes?: {
                description?: string | undefined;
                row?: number | undefined;
                state?: boolean | undefined;
                validatedAt?: number | undefined;
                validatedBy?: {
                    [key: string]: any;
                    id?: string | undefined;
                    firstName?: string | undefined;
                    lastName?: string | undefined;
                } | undefined;
            } | undefined;
            relationships?: {
                [key: string]: any;
                children?: {
                    data: {
                        id: string;
                        "type": "task";
                    }[];
                } | undefined;
                todolist?: {
                    data: {
                        id: string;
                        "type": "todolist";
                    }[];
                } | undefined;
            } | undefined;
        };
        uniqueItems?: any;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getTasksById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "task";
            attributes?: {
                description?: string | undefined;
                row?: number | undefined;
                state?: boolean | undefined;
                validatedAt?: number | undefined;
                validatedBy?: {
                    [key: string]: any;
                    id?: string | undefined;
                    firstName?: string | undefined;
                    lastName?: string | undefined;
                } | undefined;
            } | undefined;
            relationships?: {
                [key: string]: any;
                children?: {
                    data: {
                        id: string;
                        "type": "task";
                    }[];
                } | undefined;
                todolist?: {
                    data: {
                        id: string;
                        "type": "todolist";
                    }[];
                } | undefined;
            } | undefined;
        };
        uniqueItems?: any;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteTasksById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postTasksById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search times
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/times.csv?keywords=TPS1 TPSEXP2*
 *
 */
export declare function getTimes(body?: string, { keywords, activityType, workUnitTypes, category, resourceTypes, excludeResourceTypes, returnDetailedExceptionalTimes, period, startDate, endDate, encoding, extractType, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    activityType?: "absence" | "internal" | "production";
    workUnitTypes?: string[];
    category?: "regular" | "exceptional";
    resourceTypes?: number[];
    excludeResourceTypes?: number[];
    returnDetailedExceptionalTimes?: boolean;
    period?: string;
    startDate?: string;
    endDate?: string;
    encoding?: string;
    extractType?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "time";
            attributes?: {
                category?: "regular" | "exceptional";
                workUnitType?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                };
                row?: number;
                startDate?: string;
                endDate?: string;
                duration?: number;
            };
            relationships?: {
                timesReport?: {
                    data: {
                        id: string;
                        "type": "timesreport";
                    };
                };
                delivery?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "delivery";
                    };
                };
                batch?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "batch";
                    };
                };
                project?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "project";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "timesreport";
            attributes?: {
                term?: string | undefined;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected" | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "batch";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                workUnitRate?: number | "notUsed" | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postTimes(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteTimes(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putTimes(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search timesheets
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/times-reports.csv?keywords=TPS1*
 *
 */
export declare function getTimesReports(startMonth: string, endMonth: string, body?: string, { keywords, resourceTypes, validationStates, closed, encoding, extractType, exportToDownloadCenter, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    resourceTypes?: number[];
    validationStates?: ("waitingForValidation" | "validated" | "rejected")[];
    closed?: boolean;
    encoding?: string;
    extractType?: string;
    exportToDownloadCenter?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "timesreport";
            attributes?: {
                term?: string;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                closed?: boolean;
            };
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a timesheet
 */
export declare function postTimesReports(body?: {
    data: {
        "type": "timesreport";
        attributes: {
            term: string;
            workUnitRate?: number;
            informationComments?: string;
            regularTimes?: ({
                startDate: string;
                duration: number;
                row: number | number;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                duration: number;
                row: number | number;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            })[];
            exceptionalTimes?: ({
                startDate: string;
                endDate: string;
                recovering?: boolean;
                description: string;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                endDate: string;
                recovering?: boolean;
                description: string;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    id: string;
                };
            })[];
            workplaceTimes?: {
                id: string;
                startDate: string;
                duration: number;
                row: number;
                workplaceType: {
                    reference: number;
                    name: string;
                };
            }[];
        };
        relationships: {
            resource: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
            agency?: {
                data: {
                    id: string;
                    "type": "agency";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "moreThanNumberOfWorkingDays" | "workplaceTimesMoreThanNumberOfWorkingDays" | "workplaceTimesLessThanNumberOfWorkingDays" | "atLeastOneAbsenceQuotaExceeded" | "wrongAbsences" | "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "outsideContractDates" | "outsideDeliveryDates" | "outsideDocumentDates" | "lessThanNumberOfWorkingDaysInsideContractDates" | "moreThanNumberOfWorkingDaysInsideContractDates" | "noSignedTimesheet" | "workUnitRatesNotEqual";
                detail: string;
                project: {
                    data: null;
                } | {
                    id: string;
                    reference: string;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                    title: string;
                    startDate: string;
                    endDate: string;
                };
                workUnitType: {
                    data: null;
                } | {
                    reference: number;
                    name: string;
                };
                projects?: {
                    id: string;
                    reference: string;
                    mailValidatorSignature?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            expectedValidatorsAllowedForValidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForUnvalidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForReject?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "timesreport";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                term?: string;
                workUnitRate?: number;
                informationComments?: string;
                closed?: boolean;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                regularTimes?: {
                    id: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[];
                exceptionalTimes?: {
                    id: string;
                    startDate: string;
                    endDate: string;
                    duration: number;
                    recovering: boolean;
                    description: string;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        id: string;
                        reference?: string;
                    };
                }[];
                absencesTimes?: {
                    startDate: string;
                    duration: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                }[];
                plannedTimes?: {
                    id?: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[];
                workplaceTimes?: {
                    id: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workplaceType: {
                        reference: number;
                        name: string;
                    };
                }[];
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
                expensesReport?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "expensesreport";
                    };
                };
                orders?: {
                    data: {
                        id: string;
                        "type": "order";
                    }[];
                };
                projects?: {
                    data: {
                        id: string;
                        "type": "project";
                        mailValidatorSignature?: string;
                    }[];
                };
                validations?: {
                    data: {
                        id: string;
                        "type": "validation";
                    }[];
                };
                validationWorkflow?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "signature";
            attributes?: {
                state?: "pending" | "validated" | undefined;
                creationDate?: string | undefined;
                remindDate?: string | undefined;
                date?: string | undefined;
                lastName?: string | undefined;
                firstName?: string | undefined;
                function?: string | undefined;
                token?: string | undefined;
                mailValidatorSignature?: string | undefined;
            } | undefined;
            relationships?: {
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                remindedBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
                allowExceptionalTimes?: "inactive" | "withRecovering" | "withoutRecovering" | undefined;
                workUnitTypesAllowedForAbsences?: {
                    reference: number;
                    name: string;
                }[] | undefined;
                workUnitRate?: number | "notUsed" | undefined;
                workplacesDefaultWeek?: {
                    reference?: number | undefined;
                    dayOfWeek: "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday";
                    duration: number;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                workUnitRate?: number | undefined;
                calendar?: string | undefined;
                workUnitTypes?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                }[] | undefined;
                workplaceTypes?: {
                    reference: number;
                    name: string;
                }[] | undefined;
                timesLegals?: string | undefined;
                timesAlerts?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name: string;
                category: string;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                signature?: {
                    data: {
                        id: string;
                        "type": "signature";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "batch";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                mailValidatorSignature?: string | undefined;
                isMonitorSignedTimesheets?: boolean | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                deliveries?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    }[];
                } | undefined;
                batches?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "validation";
            attributes?: {
                date?: string | undefined;
                state?: "waitingForValidation" | "validated" | "rejected" | undefined;
                reason?: string | undefined;
            } | undefined;
            relationships?: {
                realValidator?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                expectedValidator?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                reference?: string | undefined;
                number?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteTimesReports(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putTimesReports(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get empty timesheet's default basic data
 */
export declare function getTimesReportsDefault(resource: number, term: string, body?: string, { agency }?: {
    agency?: number;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "moreThanNumberOfWorkingDays" | "workplaceTimesMoreThanNumberOfWorkingDays" | "workplaceTimesLessThanNumberOfWorkingDays" | "atLeastOneAbsenceQuotaExceeded" | "wrongAbsences" | "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "outsideContractDates" | "outsideDeliveryDates" | "outsideDocumentDates" | "lessThanNumberOfWorkingDaysInsideContractDates" | "moreThanNumberOfWorkingDaysInsideContractDates" | "noSignedTimesheet" | "workUnitRatesNotEqual";
                detail: string;
                project: {
                    data: null;
                } | {
                    id: string;
                    reference: string;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                    title: string;
                    startDate: string;
                    endDate: string;
                };
                workUnitType: {
                    data: null;
                } | {
                    reference: number;
                    name: string;
                };
            }[] | undefined;
            expectedValidatorsAllowedForValidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForUnvalidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForReject?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
        };
        data: {
            id: "0";
            "type": "timesreport";
            attributes?: {
                term?: string;
                workUnitRate?: number;
                absencesTimes?: {
                    startDate: string;
                    duration: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                }[];
                plannedTimes?: {
                    id?: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[];
                workplaceTimes?: {
                    id: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workplaceType: {
                        reference: number;
                        name: string;
                    };
                }[];
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                expensesReport?: {
                    data: null;
                } | {
                    id: string;
                    "type": "expensesreport";
                };
                projects?: {
                    data: {
                        id: string;
                        "type": "project";
                    }[];
                };
                validationWorkflow?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
                allowExceptionalTimes?: "inactive" | "withRecovering" | "withoutRecovering" | undefined;
                workUnitTypesAllowedForAbsences?: {
                    reference: number;
                    name: string;
                }[] | undefined;
                workUnitRate?: number | "notUsed" | undefined;
                workplacesDefaultWeek?: {
                    reference?: number | undefined;
                    dayOfWeek: "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday";
                    duration: number;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                workUnitRate?: number | undefined;
                calendar?: string | undefined;
                workUnitTypes?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                }[] | undefined;
                timesLegals?: string | undefined;
                timesAlerts?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "batch";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                deliveries?: any[] | undefined;
                batches?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putTimesReportsDefault(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "moreThanNumberOfWorkingDays" | "workplaceTimesMoreThanNumberOfWorkingDays" | "workplaceTimesLessThanNumberOfWorkingDays" | "atLeastOneAbsenceQuotaExceeded" | "wrongAbsences" | "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "outsideContractDates" | "outsideDeliveryDates" | "outsideDocumentDates" | "lessThanNumberOfWorkingDaysInsideContractDates" | "moreThanNumberOfWorkingDaysInsideContractDates" | "noSignedTimesheet" | "workUnitRatesNotEqual";
                detail: string;
                project: {
                    data: null;
                } | {
                    id: string;
                    reference: string;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                    title: string;
                    startDate: string;
                    endDate: string;
                };
                workUnitType: {
                    data: null;
                } | {
                    reference: number;
                    name: string;
                };
            }[] | undefined;
            expectedValidatorsAllowedForValidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForUnvalidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForReject?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
        };
        data: {
            id: "0";
            "type": "timesreport";
            attributes?: {
                term?: string;
                workUnitRate?: number;
                absencesTimes?: {
                    startDate: string;
                    duration: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                }[];
                plannedTimes?: {
                    id?: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[];
                workplaceTimes?: {
                    id: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workplaceType: {
                        reference: number;
                        name: string;
                    };
                }[];
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                expensesReport?: {
                    data: null;
                } | {
                    id: string;
                    "type": "expensesreport";
                };
                projects?: {
                    data: {
                        id: string;
                        "type": "project";
                    }[];
                };
                validationWorkflow?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
                allowExceptionalTimes?: "inactive" | "withRecovering" | "withoutRecovering" | undefined;
                workUnitTypesAllowedForAbsences?: {
                    reference: number;
                    name: string;
                }[] | undefined;
                workUnitRate?: number | "notUsed" | undefined;
                workplacesDefaultWeek?: {
                    reference?: number | undefined;
                    dayOfWeek: "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday";
                    duration: number;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                workUnitRate?: number | undefined;
                calendar?: string | undefined;
                workUnitTypes?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                }[] | undefined;
                timesLegals?: string | undefined;
                timesAlerts?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "batch";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                deliveries?: any[] | undefined;
                batches?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteTimesReportsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postTimesReportsDefault(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get timesheet's basic data
 */
export declare function getTimesReportsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "moreThanNumberOfWorkingDays" | "workplaceTimesMoreThanNumberOfWorkingDays" | "workplaceTimesLessThanNumberOfWorkingDays" | "atLeastOneAbsenceQuotaExceeded" | "wrongAbsences" | "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "outsideContractDates" | "outsideDeliveryDates" | "outsideDocumentDates" | "lessThanNumberOfWorkingDaysInsideContractDates" | "moreThanNumberOfWorkingDaysInsideContractDates" | "noSignedTimesheet" | "workUnitRatesNotEqual";
                detail: string;
                project: {
                    data: null;
                } | {
                    id: string;
                    reference: string;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                    title: string;
                    startDate: string;
                    endDate: string;
                };
                workUnitType: {
                    data: null;
                } | {
                    reference: number;
                    name: string;
                };
                projects?: {
                    id: string;
                    reference: string;
                    mailValidatorSignature?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            expectedValidatorsAllowedForValidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForUnvalidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForReject?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "timesreport";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                term?: string;
                workUnitRate?: number;
                informationComments?: string;
                closed?: boolean;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                regularTimes?: {
                    id: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[];
                exceptionalTimes?: {
                    id: string;
                    startDate: string;
                    endDate: string;
                    duration: number;
                    recovering: boolean;
                    description: string;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        id: string;
                        reference?: string;
                    };
                }[];
                absencesTimes?: {
                    startDate: string;
                    duration: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                }[];
                plannedTimes?: {
                    id?: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[];
                workplaceTimes?: {
                    id: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workplaceType: {
                        reference: number;
                        name: string;
                    };
                }[];
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
                expensesReport?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "expensesreport";
                    };
                };
                orders?: {
                    data: {
                        id: string;
                        "type": "order";
                    }[];
                };
                projects?: {
                    data: {
                        id: string;
                        "type": "project";
                        mailValidatorSignature?: string;
                    }[];
                };
                validations?: {
                    data: {
                        id: string;
                        "type": "validation";
                    }[];
                };
                validationWorkflow?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "signature";
            attributes?: {
                state?: "pending" | "validated" | undefined;
                creationDate?: string | undefined;
                remindDate?: string | undefined;
                date?: string | undefined;
                lastName?: string | undefined;
                firstName?: string | undefined;
                function?: string | undefined;
                token?: string | undefined;
                mailValidatorSignature?: string | undefined;
            } | undefined;
            relationships?: {
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                remindedBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
                allowExceptionalTimes?: "inactive" | "withRecovering" | "withoutRecovering" | undefined;
                workUnitTypesAllowedForAbsences?: {
                    reference: number;
                    name: string;
                }[] | undefined;
                workUnitRate?: number | "notUsed" | undefined;
                workplacesDefaultWeek?: {
                    reference?: number | undefined;
                    dayOfWeek: "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday";
                    duration: number;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                workUnitRate?: number | undefined;
                calendar?: string | undefined;
                workUnitTypes?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                }[] | undefined;
                workplaceTypes?: {
                    reference: number;
                    name: string;
                }[] | undefined;
                timesLegals?: string | undefined;
                timesAlerts?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name: string;
                category: string;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                signature?: {
                    data: {
                        id: string;
                        "type": "signature";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "batch";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                mailValidatorSignature?: string | undefined;
                isMonitorSignedTimesheets?: boolean | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                deliveries?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    }[];
                } | undefined;
                batches?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "validation";
            attributes?: {
                date?: string | undefined;
                state?: "waitingForValidation" | "validated" | "rejected" | undefined;
                reason?: string | undefined;
            } | undefined;
            relationships?: {
                realValidator?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                expectedValidator?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                reference?: string | undefined;
                number?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the timesheet
 */
export declare function deleteTimesReportsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a timesheet
 */
export declare function putTimesReportsById(body?: {
    data: {
        id: string;
        "type": "timesreport";
        attributes?: {
            workUnitRate?: number;
            informationComments?: string;
            regularTimes?: ({
                startDate: string;
                duration: number;
                row: number | number;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                duration: number;
                row: number | number;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    data: null;
                } | {
                    id: string;
                };
            })[];
            exceptionalTimes?: ({
                startDate: string;
                endDate: string;
                recovering?: boolean;
                description: string;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    id: string;
                };
            } | {
                id: string;
                startDate: string;
                endDate: string;
                recovering?: boolean;
                description: string;
                workUnitType: {
                    reference: number;
                };
                delivery: {
                    id: string;
                };
                batch: {
                    data: null;
                } | {
                    id: string;
                };
                project: {
                    id: string;
                };
            })[];
            workplaceTimes?: {
                id: string;
                startDate: string;
                duration: number;
                row: number;
                workplaceType: {
                    reference: number;
                    name: string;
                };
            }[];
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            warnings?: {
                code: "moreThanNumberOfWorkingDays" | "workplaceTimesMoreThanNumberOfWorkingDays" | "workplaceTimesLessThanNumberOfWorkingDays" | "atLeastOneAbsenceQuotaExceeded" | "wrongAbsences" | "noDeliveryOnProject" | "projectDoesNotExist" | "deliveryDoesNotExist" | "outsideContractDates" | "outsideDeliveryDates" | "outsideDocumentDates" | "lessThanNumberOfWorkingDaysInsideContractDates" | "moreThanNumberOfWorkingDaysInsideContractDates" | "noSignedTimesheet" | "workUnitRatesNotEqual";
                detail: string;
                project: {
                    data: null;
                } | {
                    id: string;
                    reference: string;
                };
                delivery: {
                    data: null;
                } | {
                    id: string;
                    title: string;
                    startDate: string;
                    endDate: string;
                };
                workUnitType: {
                    data: null;
                } | {
                    reference: number;
                    name: string;
                };
                projects?: {
                    id: string;
                    reference: string;
                    mailValidatorSignature?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            expectedValidatorsAllowedForValidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForUnvalidate?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
            expectedValidatorsAllowedForReject?: {
                id: string;
                firstName: string;
                lastName: string;
            }[] | undefined;
        };
        data: {
            id: string;
            "type": "timesreport";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                term?: string;
                workUnitRate?: number;
                informationComments?: string;
                closed?: boolean;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected";
                regularTimes?: {
                    id: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[];
                exceptionalTimes?: {
                    id: string;
                    startDate: string;
                    endDate: string;
                    duration: number;
                    recovering: boolean;
                    description: string;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        id: string;
                        reference?: string;
                    };
                }[];
                absencesTimes?: {
                    startDate: string;
                    duration: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                }[];
                plannedTimes?: {
                    id?: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                    delivery: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                        startDate?: string;
                        endDate?: string;
                    };
                    batch: {
                        data: null;
                    } | {
                        id: string;
                        title?: string;
                    };
                    project: {
                        data: null;
                    } | {
                        id: string;
                        reference?: string;
                    };
                }[];
                workplaceTimes?: {
                    id: string;
                    startDate: string;
                    duration: number;
                    row: number;
                    workplaceType: {
                        reference: number;
                        name: string;
                    };
                }[];
            };
            relationships?: {
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                };
                files?: {
                    data: {
                        id: string;
                        "type": "document";
                    }[];
                };
                expensesReport?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "expensesreport";
                    };
                };
                orders?: {
                    data: {
                        id: string;
                        "type": "order";
                    }[];
                };
                projects?: {
                    data: {
                        id: string;
                        "type": "project";
                        mailValidatorSignature?: string;
                    }[];
                };
                validations?: {
                    data: {
                        id: string;
                        "type": "validation";
                    }[];
                };
                validationWorkflow?: {
                    data: {
                        id: string;
                        "type": "resource";
                    }[];
                };
            };
        };
        included?: ({
            id: string;
            type: "signature";
            attributes?: {
                state?: "pending" | "validated" | undefined;
                creationDate?: string | undefined;
                remindDate?: string | undefined;
                date?: string | undefined;
                lastName?: string | undefined;
                firstName?: string | undefined;
                function?: string | undefined;
                token?: string | undefined;
                mailValidatorSignature?: string | undefined;
            } | undefined;
            relationships?: {
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                remindedBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
                allowExceptionalTimes?: "inactive" | "withRecovering" | "withoutRecovering" | undefined;
                workUnitTypesAllowedForAbsences?: {
                    reference: number;
                    name: string;
                }[] | undefined;
                workUnitRate?: number | "notUsed" | undefined;
                workplacesDefaultWeek?: {
                    reference?: number | undefined;
                    dayOfWeek: "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday";
                    duration: number;
                }[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                workUnitRate?: number | undefined;
                calendar?: string | undefined;
                workUnitTypes?: {
                    reference: number;
                    activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                    name: string;
                }[] | undefined;
                workplaceTypes?: {
                    reference: number;
                    name: string;
                }[] | undefined;
                timesLegals?: string | undefined;
                timesAlerts?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "document";
            attributes?: {
                name: string;
                category: string;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
                signature?: {
                    data: {
                        id: string;
                        "type": "signature";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "delivery";
            attributes?: {
                title?: string | undefined;
                startDate?: string | undefined;
                endDate?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "batch";
            attributes?: {
                title?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "project";
            attributes?: {
                reference?: string | undefined;
                mailValidatorSignature?: string | undefined;
                isMonitorSignedTimesheets?: boolean | undefined;
            } | undefined;
            relationships?: {
                company?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "company";
                    };
                } | undefined;
                deliveries?: {
                    data: {
                        id: string;
                        "type": "delivery";
                    }[];
                } | undefined;
                batches?: any[] | undefined;
            } | undefined;
        } | {
            id: string;
            type: "company";
            attributes?: {
                name?: string | undefined;
            } | undefined;
        } | {
            id: string;
            type: "validation";
            attributes?: {
                date?: string | undefined;
                state?: "waitingForValidation" | "validated" | "rejected" | undefined;
                reason?: string | undefined;
            } | undefined;
            relationships?: {
                realValidator?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                expectedValidator?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "order";
            attributes?: {
                reference?: string | undefined;
                number?: string | undefined;
            } | undefined;
            relationships?: {
                project?: {
                    data: {
                        id: string;
                        "type": "project";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postTimesReportsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a thumbnail
 */
export declare function postThumbnails(body?: {
    parentType: string;
    parentId: string;
    file?: any;
    fileUrl?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "thumbnail";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getThumbnails(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: Blob;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteThumbnails(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putThumbnails(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get thumbnail
 */
export declare function getThumbnailsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: Blob;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the thumbnail
 */
export declare function deleteThumbnailsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postThumbnailsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putThumbnailsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search TodoLists
 */
export declare function getTodolists(body?: string, { sort, order }?: {
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a TodoLists
 */
export declare function postTodolists(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteTodolists(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putTodolists(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get TodoList's data
 */
export declare function getTodolistsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update data related to a TodoList.
 */
export declare function putTodolistsById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the TodoList
 */
export declare function deleteTodolistsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postTodolistsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Log out user
 */
export declare function deleteTrustelemById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postTrustelemById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putTrustelemById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function getTrustelemById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search validations
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/validations.csv?keywords=TPS1*
 *
 */
export declare function getValidations(startMonth: string, endMonth: string, body?: string, { keywords, documentTypes, resourceTypes, validationStates, encoding, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    documentTypes?: ("absencesReport" | "timesReport" | "expensesReport")[];
    resourceTypes?: number[];
    validationStates?: ("waitingForValidation" | "validated" | "rejected")[];
    encoding?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "validation";
            attributes?: {
                date?: string;
                state?: "waitingForValidation" | "validated" | "rejected";
            };
            relationships?: {
                expectedValidator?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                realValidator?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "timesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "expensesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "absencesreport";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        } | {
            [key: string]: any;
            id?: string | undefined;
            type?: "timesreport" | undefined;
            attributes?: {
                term?: string | undefined;
                closed?: boolean | undefined;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected" | undefined;
            } | undefined;
            relationships?: {
                [key: string]: any;
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        } | {
            [key: string]: any;
            id?: string | undefined;
            type?: "expensesreport" | undefined;
            attributes?: {
                term?: string | undefined;
                closed?: boolean | undefined;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected" | undefined;
            } | undefined;
            relationships?: {
                [key: string]: any;
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        } | {
            [key: string]: any;
            id?: string | undefined;
            type?: "absencesreport" | undefined;
            attributes?: {
                creationDate?: string | undefined;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected" | undefined;
                absencesPeriods?: {
                    id: string;
                    startDate: string;
                    endDate: string;
                    duration: number;
                    title: string;
                    workUnitType: {
                        reference: number;
                        activityType: "production" | "absence" | "internal" | "exceptionalTime" | "exceptionalCalendar";
                        name: string;
                    };
                }[] | undefined;
            } | undefined;
            relationships?: {
                [key: string]: any;
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postValidations(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "validation";
            attributes?: {
                date?: string;
                state?: "waitingForValidation" | "validated" | "rejected";
                reason?: string;
            };
            relationships?: {
                realValidator?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                expectedValidator?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "timesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "expensesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "absencesreport";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteValidations(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putValidations(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get validation's basic data
 */
export declare function getValidationsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "validation";
            attributes?: {
                date?: string;
                state?: "waitingForValidation" | "validated" | "rejected";
                reason?: string;
            };
            relationships?: {
                realValidator?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                expectedValidator?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "timesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "expensesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "absencesreport";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the validation
 */
export declare function deleteValidationsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a validation
 */
export declare function putValidationsById(body?: any, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "validation";
            attributes?: {
                date?: string;
                state?: "waitingForValidation" | "validated" | "rejected";
                reason?: string;
            };
            relationships?: {
                realValidator?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                expectedValidator?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
                dependsOn?: {
                    data: {
                        id: string;
                        "type": "timesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "expensesreport";
                    };
                } | {
                    data: {
                        id: string;
                        "type": "absencesreport";
                    };
                };
            };
        };
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                function?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postValidationsById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get vendor's basic data
 */
export declare function getVendor(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "vendor";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                isOwner?: boolean;
                description?: string;
                email1?: string;
                phone1?: string;
                address?: string;
                postcode?: string;
                town?: string;
                country?: string;
                website?: string;
                logo?: string;
            };
            relationships?: {
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update basic data related to a vendor
 */
export declare function putVendor(body?: {
    data: {
        id: string;
        "type": "vendor";
        attributes?: {
            name?: string;
            description?: string;
            email1?: string;
            phone1?: string;
            address?: string;
            postcode?: string;
            town?: string;
            country?: string;
            website?: string;
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            "type": "vendor";
            attributes?: {
                creationDate?: string;
                updateDate?: string;
                name?: string;
                isOwner?: boolean;
                description?: string;
                email1?: string;
                phone1?: string;
                address?: string;
                postcode?: string;
                town?: string;
                country?: string;
                website?: string;
                logo?: string;
            };
            relationships?: {
                createdBy?: {
                    data: null;
                } | {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                };
            };
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteVendor(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postVendor(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search webhooks
 */
export declare function getWebhooks(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            type: "webhook";
            attributes?: {
                name?: string | undefined;
                description?: string | undefined;
                url?: string | undefined;
                events?: {
                    [key: string]: any;
                    type?: "update" | "create" | "delete" | undefined;
                    entity?: "candidate" | "order" | "action" | "target" | "role" | "absencesreport" | "agency" | "resource" | "validation" | "pole" | "app" | "company" | "opportunity" | "project" | "invoice" | "contact" | "positioning" | "delivery" | "advantage" | "contract" | "flag" | "businessunit" | "customer" | "product" | "purchase" | "payment" | "inactivity" | "groupment" | "quotation" | "thread" | "expensesreport" | "timesreport" | "actiontemplate" | "savedsearch" | "vendor" | "architecture" | undefined;
                }[] | undefined;
            } | undefined;
            relationships?: {
                createdBy?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        }[];
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Create a request of webhook
 */
export declare function postWebhooks(body?: {
    data: {
        id?: string;
        "type": "webhook";
        attributes?: {
            name?: string;
            description?: string;
            url?: string;
            events?: {
                "type"?: "create" | "update" | "delete";
                entity?: "product" | "candidate" | "resource" | "advantage" | "contract" | "purchase" | "payment" | "opportunity" | "app" | "positioning" | "order" | "invoice" | "contact" | "company" | "project" | "delivery" | "inactivity" | "groupment" | "businessunit" | "agency" | "pole" | "role" | "expensesreport" | "timesreport" | "absencesreport" | "action" | "quotation" | "validation" | "vendor" | "customer" | "architecture" | "savedsearch" | "actiontemplate" | "flag" | "target" | "thread";
                [key: string]: any;
            }[];
        };
        relationships?: {
            createdBy?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteWebhooks(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putWebhooks(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Get webhook
 */
export declare function getWebhooksById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "webhook";
            attributes?: {
                name?: string | undefined;
                description?: string | undefined;
                url?: string | undefined;
                events?: {
                    [key: string]: any;
                    type?: "update" | "create" | "delete" | undefined;
                    entity?: "candidate" | "order" | "action" | "target" | "role" | "absencesreport" | "agency" | "resource" | "validation" | "pole" | "app" | "company" | "opportunity" | "project" | "invoice" | "contact" | "positioning" | "delivery" | "advantage" | "contract" | "flag" | "businessunit" | "customer" | "product" | "purchase" | "payment" | "inactivity" | "groupment" | "quotation" | "thread" | "expensesreport" | "timesreport" | "actiontemplate" | "savedsearch" | "vendor" | "architecture" | undefined;
                }[] | undefined;
            } | undefined;
            relationships?: {
                createdBy?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        };
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Delete the webhook
 */
export declare function deleteWebhooksById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Update webhook data
 */
export declare function putWebhooksById(body?: {
    data: {
        id?: string;
        "type": "webhook";
        attributes?: {
            name?: string;
            description?: string;
            url?: string;
            events?: {
                "type"?: "create" | "update" | "delete";
                entity?: "product" | "candidate" | "resource" | "advantage" | "contract" | "purchase" | "payment" | "opportunity" | "app" | "positioning" | "order" | "invoice" | "contact" | "company" | "project" | "delivery" | "inactivity" | "groupment" | "businessunit" | "agency" | "pole" | "role" | "expensesreport" | "timesreport" | "absencesreport" | "action" | "quotation" | "validation" | "vendor" | "customer" | "architecture" | "savedsearch" | "actiontemplate" | "flag" | "target" | "thread";
                [key: string]: any;
            }[];
        };
        relationships?: {
            createdBy?: {
                data: {
                    id: string;
                    "type": "resource";
                };
            };
        };
    };
}, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        };
        data: {
            id: string;
            type: "webhook";
            attributes?: {
                name?: string | undefined;
                description?: string | undefined;
                url?: string | undefined;
                events?: {
                    [key: string]: any;
                    type?: "update" | "create" | "delete" | undefined;
                    entity?: "candidate" | "order" | "action" | "target" | "role" | "absencesreport" | "agency" | "resource" | "validation" | "pole" | "app" | "company" | "opportunity" | "project" | "invoice" | "contact" | "positioning" | "delivery" | "advantage" | "contract" | "flag" | "businessunit" | "customer" | "product" | "purchase" | "payment" | "inactivity" | "groupment" | "quotation" | "thread" | "expensesreport" | "timesreport" | "actiontemplate" | "savedsearch" | "vendor" | "architecture" | undefined;
                }[] | undefined;
            } | undefined;
            relationships?: {
                createdBy?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        };
        included?: {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
            } | undefined;
        }[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postWebhooksById(body?: string, { id }?: {
    id?: string;
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
/**
 * Search workplace's times
 *
 * _You can specify the output format by appending to the url **.csv**_
 * *Example : {BASE_URL}/api/workplace-times.csv?keywords=TPS1 TPSEXP2*
 *
 */
export declare function getWorkplacesTimes(body?: string, { keywords, workplaceTypes, period, startDate, endDate, encoding, extractType, perimeterAgencies, perimeterBusinessUnits, perimeterPoles, perimeterManagers, narrowPerimeter, page, maxResults, sort, order }?: {
    keywords?: string;
    workplaceTypes?: string[];
    period?: string;
    startDate?: string;
    endDate?: string;
    encoding?: string;
    extractType?: string;
    perimeterAgencies?: number[];
    perimeterBusinessUnits?: number[];
    perimeterPoles?: number[];
    perimeterManagers?: number[];
    narrowPerimeter?: boolean;
    page?: number;
    maxResults?: number;
    sort?: string[];
    order?: "desc" | "asc";
}, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: {
        meta: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } & {
            [key: string]: any;
            totals?: {
                rows?: number | undefined;
            } | undefined;
        };
        data: {
            id: string;
            "type": "time";
            attributes?: {
                workplaceType?: {
                    reference: number;
                    name: string;
                };
                row?: number;
                startDate?: string;
                duration?: number;
            };
            relationships?: {
                timesReport?: {
                    data: {
                        id: string;
                        "type": "timesreport";
                    };
                };
            };
        }[];
        included?: ({
            id: string;
            type: "timesreport";
            attributes?: {
                term?: string | undefined;
                state?: "savedAndNoValidation" | "waitingForValidation" | "validated" | "rejected" | undefined;
            } | undefined;
            relationships?: {
                agency?: {
                    data: {
                        id: string;
                        "type": "agency";
                    };
                } | undefined;
                resource?: {
                    data: {
                        id: string;
                        "type": "resource";
                    };
                } | undefined;
            } | undefined;
        } | {
            id: string;
            type: "agency";
            attributes?: {
                name?: string | undefined;
                workUnitRate?: number | undefined;
            } | undefined;
        } | {
            id: string;
            type: "resource";
            attributes?: {
                firstName?: string | undefined;
                lastName?: string | undefined;
                workUnitRate?: number | "notUsed" | undefined;
            } | undefined;
        })[] | undefined;
    };
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function postWorkplacesTimes(body?: any, opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: any;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function deleteWorkplacesTimes(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
export declare function putWorkplacesTimes(opts?: Oazapfts.RequestOpts): Promise<{
    status: 200;
    data: string;
} | {
    status: 401;
    data: string;
} | {
    status: 403;
    data: string;
} | {
    status: 404;
    data: string;
} | {
    status: 422;
    data: {
        meta?: {
            [key: string]: any;
            version: string;
            isLogged: boolean;
            language: "fr" | "en";
        } | undefined;
        errors: {
            code?: number;
            detail?: string | object;
            source?: {
                pointer?: string;
                parameter?: string;
            };
        }[];
    };
} | {
    status: 500;
    data: string;
} | {
    status: 503;
    data: string;
}>;
